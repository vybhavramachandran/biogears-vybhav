import zipfile
import glob, os
import shutil
import sys

"""
Author: Lucas Marin
Date: 4/24/2019
So we're currently phasing out and replacing a lot of Java code that helped run biogears, however for website
generation we still rely on a big chunk of java code that calls C++ hooks, if you want to see precisely which
Java functions are called, take a look at biogears/core/projects/java/biogears/CMakeLists.txt, ctrl+f 'gen-website-docs'.

The point of this file is to facilitate generating our website by zipping/moving files to the place
where doxygen expects to find them.

This file lives in core/share/website, if you want to modify it you should modify it there, not in runtime, then 
configure/generate with CMake and build. 
"""
help_message =  """
  This is a utility which moves files into their expected location for biogears documentation generation.
  Proper usage is:

  python WebsiteGenerationPreProcess.py <INDIRECTORY> <OUTDIRECTORY>

  <INDIRECTORY> is the location where the files to be moved are stored, for a standard installation
  of biogears this should be 'core/share/website'
  <OUTDIRECTORY> is the location where the actual preprocessing occurs, for a standard installation
  of biogears this should be 'core/build/runtime'
  Note that these should both be relative paths

  If you are running WebsiteGenerationPreProcess.py from 'core/share/website' the command would be
  python WebsiteGenerationPreProcess.py . ../../build/runtime

  If you are running WebsiteGenerationPreProcess.py from 'core/build/runtime' the command would be
  python WebsiteGenerationPreProcess.py . ../../share/website 
"""

error_message_argc = """
  ERROR: Incorrect number of arguments
"""

warning_message = """
  WARNING: You have not selected 'runtime' as your working directory. 
  This program assumes that 'runtime' will be the working directory. 
  Running it somewhere else could have unforeseen consequences.
  Do you still want to run the program? (y/n)
"""

# This is a list of directories that cmd_bio writes out to when we run scenarios
# These paths are relative to runtime_dir
def preprocess(sourcedir,workdir):
  directories = ['Scenarios/Patient',
                 'Scenarios/Validation',
                 'Scenarios/Showcase',
                 'Scenarios/EnergyEnvironment',
                 'Scenarios/Compartments',
                 'Scenarios/Miscellaneous',
                 'Scenarios/Combined',
                 'Scenarios/ConsumeMeal',
                 'Scenarios/Drug',
                 'Scenarios/AnesthesiaMachine'] 

  #runtime_dir is something like d:/biogears/core/build/runtime
  source_dir  = sourcedir + '/'
  runtime_dir = workdir + '/'
  os.chdir(runtime_dir)
  print(os.path.dirname(os.path.realpath(__file__)))
  if os.path.dirname(os.path.realpath(__file__)).rpartition('\\')[2] != 'runtime' and os.path.dirname(os.path.realpath(__file__)).rpartition('/')[2] != 'runtime': 
    print(warning_message)
    while True:
      ans = input()
      if (ans.lower() == 'y') or (ans.lower() == 'yes'):
        break
      elif (ans.lower() == 'n') or (ans.lower() == 'no'):
        return
      else:
        print(" Input not recognized, enter 'yes' if you still want to run the program, or 'no' if you would like to abort.")
  # This copies all of the filew from the source directory to the working directory
  for file in os.listdir(source_dir)
    if file != 'WebsiteGenerationPreProcess.py':
      print("  "+file)
      shutil.copy(file,runtime_dir)
  os.chdir(runtime_dir)
  print(runtime_dir)
  # doxygen expects the files generated by cmd_bio to be zipped, this for loop does that
  for dir in directories:
    os.chdir(runtime_dir + dir)
    dir_path = os.path.dirname(os.path.realpath(__file__))
    print(dir_path)
    if not os.path.exists('baselines'):
      os.mkdir('baselines')
    for file in glob.glob('*.csv'):
      print("  "+file)
      zip_name = 'baselines/' + file.split('.')[0] + '.zip'
      file_name = file
      zipfile.ZipFile(zip_name,mode='w').write(file)  

  # doxygen looks for the files in Drug/baselines in Validation/baselines, this block of
  # code moves the files so that doxygen can find them
  print("")
  os.chdir(runtime_dir + "Scenarios")
  print(os.path.dirname(os.path.realpath(__file__)))
  for file in glob.glob(os.path.join(runtime_dir,'Scenarios/Drug/baselines/','*.*')):
    print(file)
    shutil.copy(file,runtime_dir+'Scenarios/Validation/baselines') 

  # There's a bunch of files that we don't seem to regenerate, they're in core/share/website,
  # and get copied into runtime, the following code then moves them all to the directory doxygen looks in
  print("")
  os.chdir(runtime_dir)
  os.mkdir('validation')
  for file in glob.glob(os.path.join(runtime_dir,'*PatientValidationTable.md')):
    print(file)
    shutil.copy(file,runtime_dir+'validation')
    os.remove(file)

  # These files aren't currently getting generated, this is a temporary fix which checks if they're present, and adds them to the expected location
  print("")
  os.chdir(runtime_dir) 
  shutil.copy('UrinalysisValidationTable.md',runtime_dir+'validation')
  os.remove('UrinalysisValidationTable.md')
  shutil.copy('RespiratoryValidationTable.md',runtime_dir+'validation')
  os.remove('RespiratoryValidationTable.md')
  shutil.copy('RespiratoryCompartmentsValidationTable.md',runtime_dir+'validation') 
  os.remove('RespiratoryCompartmentsValidationTable.md')
  os.chdir(runtime_dir)
  for file in glob.glob(os.path.join(runtime_dir,'*ValidationResults.zip')):
    print(file)
    shutil.copy(file,runtime_dir+'Scenarios/Validation/baselines')
  if not os.path.exists('UnitTests'):
    os.mkdir('UnitTests')  
  os.chdir(runtime_dir+'UnitTests')     
  if not os.path.exists('BioGearsTests'):
    os.mkdir('BioGearsTests')  
  os.chdir(runtime_dir+'UnitTests/BioGearsTests')
  if not os.path.exists('baselines'):
    os.mkdir('baselines')  
  os.chdir(runtime_dir)
  shutil.copy('RenalTGFFeedbackOutput.zip',runtime_dir+'UnitTests/BioGearsTests/baselines')
  os.remove('RenalTGFFeedbackOutput.zip')
  shutil.copy('CardiovascularCircuitOutput.zip',runtime_dir+'UnitTests/BioGearsTests/baselines')
  os.remove('CardiovascularCircuitOutput.zip')
  #shutil.copy('ColdWaterSubmersionResults.zip',runtime_dir+'Scenarios/EnergyEnvironment/baselines')
  shutil.copy('SimpleDiffusionFourCompartmentTest.zip',runtime_dir+'UnitTests/BioGearsTests/baselines')
  os.remove('SimpleDiffusionFourCompartmentTest.zip')
  shutil.copy('RespiratoryValidationPFT@120.02s.xml',runtime_dir+'Scenarios/Validation')  
  os.remove('RespiratoryValidationPFT@120.02s.xml')

  os.chdir(runtime_dir+'Scenarios/Showcase')
  shutil.copy('HeatStrokeResultsCMP@2610.2s.xml',runtime_dir);  

  print("Preprocess successful")

if __name__ == "__main__":
  if ( (len(sys.argv) == 1) or ( (sys.argv[1].lower() == '--help') or (sys.argv[1].lower() == 'help') ) ):
    print(help_message)
    exit()
  if len(sys.argv) != 3:
    print(error_message_argc + help_message)
    exit()
  preprocess(sys.argv[1],sys.argv[2])
