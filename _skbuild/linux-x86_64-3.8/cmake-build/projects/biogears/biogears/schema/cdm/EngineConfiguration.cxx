// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "EngineConfiguration.hxx"

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // PhysiologyEngineConfigurationData
        // 

        const PhysiologyEngineConfigurationData::TimeStep_optional& PhysiologyEngineConfigurationData::
        TimeStep () const
        {
          return this->TimeStep_;
        }

        PhysiologyEngineConfigurationData::TimeStep_optional& PhysiologyEngineConfigurationData::
        TimeStep ()
        {
          return this->TimeStep_;
        }

        void PhysiologyEngineConfigurationData::
        TimeStep (const TimeStep_type& x)
        {
          this->TimeStep_.set (x);
        }

        void PhysiologyEngineConfigurationData::
        TimeStep (const TimeStep_optional& x)
        {
          this->TimeStep_ = x;
        }

        void PhysiologyEngineConfigurationData::
        TimeStep (::std::unique_ptr< TimeStep_type > x)
        {
          this->TimeStep_.set (std::move (x));
        }

        const PhysiologyEngineConfigurationData::WritePatientBaselineFile_optional& PhysiologyEngineConfigurationData::
        WritePatientBaselineFile () const
        {
          return this->WritePatientBaselineFile_;
        }

        PhysiologyEngineConfigurationData::WritePatientBaselineFile_optional& PhysiologyEngineConfigurationData::
        WritePatientBaselineFile ()
        {
          return this->WritePatientBaselineFile_;
        }

        void PhysiologyEngineConfigurationData::
        WritePatientBaselineFile (const WritePatientBaselineFile_type& x)
        {
          this->WritePatientBaselineFile_.set (x);
        }

        void PhysiologyEngineConfigurationData::
        WritePatientBaselineFile (const WritePatientBaselineFile_optional& x)
        {
          this->WritePatientBaselineFile_ = x;
        }

        void PhysiologyEngineConfigurationData::
        WritePatientBaselineFile (::std::unique_ptr< WritePatientBaselineFile_type > x)
        {
          this->WritePatientBaselineFile_.set (std::move (x));
        }

        const PhysiologyEngineConfigurationData::ElectroCardioGramInterpolator_optional& PhysiologyEngineConfigurationData::
        ElectroCardioGramInterpolator () const
        {
          return this->ElectroCardioGramInterpolator_;
        }

        PhysiologyEngineConfigurationData::ElectroCardioGramInterpolator_optional& PhysiologyEngineConfigurationData::
        ElectroCardioGramInterpolator ()
        {
          return this->ElectroCardioGramInterpolator_;
        }

        void PhysiologyEngineConfigurationData::
        ElectroCardioGramInterpolator (const ElectroCardioGramInterpolator_type& x)
        {
          this->ElectroCardioGramInterpolator_.set (x);
        }

        void PhysiologyEngineConfigurationData::
        ElectroCardioGramInterpolator (const ElectroCardioGramInterpolator_optional& x)
        {
          this->ElectroCardioGramInterpolator_ = x;
        }

        void PhysiologyEngineConfigurationData::
        ElectroCardioGramInterpolator (::std::unique_ptr< ElectroCardioGramInterpolator_type > x)
        {
          this->ElectroCardioGramInterpolator_.set (std::move (x));
        }

        const PhysiologyEngineConfigurationData::ElectroCardioGramInterpolatorFile_optional& PhysiologyEngineConfigurationData::
        ElectroCardioGramInterpolatorFile () const
        {
          return this->ElectroCardioGramInterpolatorFile_;
        }

        PhysiologyEngineConfigurationData::ElectroCardioGramInterpolatorFile_optional& PhysiologyEngineConfigurationData::
        ElectroCardioGramInterpolatorFile ()
        {
          return this->ElectroCardioGramInterpolatorFile_;
        }

        void PhysiologyEngineConfigurationData::
        ElectroCardioGramInterpolatorFile (const ElectroCardioGramInterpolatorFile_type& x)
        {
          this->ElectroCardioGramInterpolatorFile_.set (x);
        }

        void PhysiologyEngineConfigurationData::
        ElectroCardioGramInterpolatorFile (const ElectroCardioGramInterpolatorFile_optional& x)
        {
          this->ElectroCardioGramInterpolatorFile_ = x;
        }

        void PhysiologyEngineConfigurationData::
        ElectroCardioGramInterpolatorFile (::std::unique_ptr< ElectroCardioGramInterpolatorFile_type > x)
        {
          this->ElectroCardioGramInterpolatorFile_.set (std::move (x));
        }

        const PhysiologyEngineConfigurationData::StabilizationCriteria_optional& PhysiologyEngineConfigurationData::
        StabilizationCriteria () const
        {
          return this->StabilizationCriteria_;
        }

        PhysiologyEngineConfigurationData::StabilizationCriteria_optional& PhysiologyEngineConfigurationData::
        StabilizationCriteria ()
        {
          return this->StabilizationCriteria_;
        }

        void PhysiologyEngineConfigurationData::
        StabilizationCriteria (const StabilizationCriteria_type& x)
        {
          this->StabilizationCriteria_.set (x);
        }

        void PhysiologyEngineConfigurationData::
        StabilizationCriteria (const StabilizationCriteria_optional& x)
        {
          this->StabilizationCriteria_ = x;
        }

        void PhysiologyEngineConfigurationData::
        StabilizationCriteria (::std::unique_ptr< StabilizationCriteria_type > x)
        {
          this->StabilizationCriteria_.set (std::move (x));
        }

        const PhysiologyEngineConfigurationData::StabilizationCriteriaFile_optional& PhysiologyEngineConfigurationData::
        StabilizationCriteriaFile () const
        {
          return this->StabilizationCriteriaFile_;
        }

        PhysiologyEngineConfigurationData::StabilizationCriteriaFile_optional& PhysiologyEngineConfigurationData::
        StabilizationCriteriaFile ()
        {
          return this->StabilizationCriteriaFile_;
        }

        void PhysiologyEngineConfigurationData::
        StabilizationCriteriaFile (const StabilizationCriteriaFile_type& x)
        {
          this->StabilizationCriteriaFile_.set (x);
        }

        void PhysiologyEngineConfigurationData::
        StabilizationCriteriaFile (const StabilizationCriteriaFile_optional& x)
        {
          this->StabilizationCriteriaFile_ = x;
        }

        void PhysiologyEngineConfigurationData::
        StabilizationCriteriaFile (::std::unique_ptr< StabilizationCriteriaFile_type > x)
        {
          this->StabilizationCriteriaFile_.set (std::move (x));
        }


        // PhysiologyEngineStabilizationData
        // 


        // PhysiologyEngineConditionStabilizationData
        // 

        const PhysiologyEngineConditionStabilizationData::Name_type& PhysiologyEngineConditionStabilizationData::
        Name () const
        {
          return this->Name_.get ();
        }

        PhysiologyEngineConditionStabilizationData::Name_type& PhysiologyEngineConditionStabilizationData::
        Name ()
        {
          return this->Name_.get ();
        }

        void PhysiologyEngineConditionStabilizationData::
        Name (const Name_type& x)
        {
          this->Name_.set (x);
        }

        void PhysiologyEngineConditionStabilizationData::
        Name (::std::unique_ptr< Name_type > x)
        {
          this->Name_.set (std::move (x));
        }


        // PhysiologyEngineTimedStabilizationData
        // 

        const PhysiologyEngineTimedStabilizationData::RestingStabilizationTime_type& PhysiologyEngineTimedStabilizationData::
        RestingStabilizationTime () const
        {
          return this->RestingStabilizationTime_.get ();
        }

        PhysiologyEngineTimedStabilizationData::RestingStabilizationTime_type& PhysiologyEngineTimedStabilizationData::
        RestingStabilizationTime ()
        {
          return this->RestingStabilizationTime_.get ();
        }

        void PhysiologyEngineTimedStabilizationData::
        RestingStabilizationTime (const RestingStabilizationTime_type& x)
        {
          this->RestingStabilizationTime_.set (x);
        }

        void PhysiologyEngineTimedStabilizationData::
        RestingStabilizationTime (::std::unique_ptr< RestingStabilizationTime_type > x)
        {
          this->RestingStabilizationTime_.set (std::move (x));
        }

        const PhysiologyEngineTimedStabilizationData::FeedbackStabilizationTime_optional& PhysiologyEngineTimedStabilizationData::
        FeedbackStabilizationTime () const
        {
          return this->FeedbackStabilizationTime_;
        }

        PhysiologyEngineTimedStabilizationData::FeedbackStabilizationTime_optional& PhysiologyEngineTimedStabilizationData::
        FeedbackStabilizationTime ()
        {
          return this->FeedbackStabilizationTime_;
        }

        void PhysiologyEngineTimedStabilizationData::
        FeedbackStabilizationTime (const FeedbackStabilizationTime_type& x)
        {
          this->FeedbackStabilizationTime_.set (x);
        }

        void PhysiologyEngineTimedStabilizationData::
        FeedbackStabilizationTime (const FeedbackStabilizationTime_optional& x)
        {
          this->FeedbackStabilizationTime_ = x;
        }

        void PhysiologyEngineTimedStabilizationData::
        FeedbackStabilizationTime (::std::unique_ptr< FeedbackStabilizationTime_type > x)
        {
          this->FeedbackStabilizationTime_.set (std::move (x));
        }

        const PhysiologyEngineTimedStabilizationData::ConditionStabilization_sequence& PhysiologyEngineTimedStabilizationData::
        ConditionStabilization () const
        {
          return this->ConditionStabilization_;
        }

        PhysiologyEngineTimedStabilizationData::ConditionStabilization_sequence& PhysiologyEngineTimedStabilizationData::
        ConditionStabilization ()
        {
          return this->ConditionStabilization_;
        }

        void PhysiologyEngineTimedStabilizationData::
        ConditionStabilization (const ConditionStabilization_sequence& s)
        {
          this->ConditionStabilization_ = s;
        }


        // PhysiologyEngineTimedConditionStabilizationData
        // 

        const PhysiologyEngineTimedConditionStabilizationData::Time_type& PhysiologyEngineTimedConditionStabilizationData::
        Time () const
        {
          return this->Time_.get ();
        }

        PhysiologyEngineTimedConditionStabilizationData::Time_type& PhysiologyEngineTimedConditionStabilizationData::
        Time ()
        {
          return this->Time_.get ();
        }

        void PhysiologyEngineTimedConditionStabilizationData::
        Time (const Time_type& x)
        {
          this->Time_.set (x);
        }

        void PhysiologyEngineTimedConditionStabilizationData::
        Time (::std::unique_ptr< Time_type > x)
        {
          this->Time_.set (std::move (x));
        }


        // PhysiologyEngineDynamicStabilizationData
        // 

        const PhysiologyEngineDynamicStabilizationData::RestingStabilizationCriteria_type& PhysiologyEngineDynamicStabilizationData::
        RestingStabilizationCriteria () const
        {
          return this->RestingStabilizationCriteria_.get ();
        }

        PhysiologyEngineDynamicStabilizationData::RestingStabilizationCriteria_type& PhysiologyEngineDynamicStabilizationData::
        RestingStabilizationCriteria ()
        {
          return this->RestingStabilizationCriteria_.get ();
        }

        void PhysiologyEngineDynamicStabilizationData::
        RestingStabilizationCriteria (const RestingStabilizationCriteria_type& x)
        {
          this->RestingStabilizationCriteria_.set (x);
        }

        void PhysiologyEngineDynamicStabilizationData::
        RestingStabilizationCriteria (::std::unique_ptr< RestingStabilizationCriteria_type > x)
        {
          this->RestingStabilizationCriteria_.set (std::move (x));
        }

        const PhysiologyEngineDynamicStabilizationData::FeedbackStabilizationCriteria_optional& PhysiologyEngineDynamicStabilizationData::
        FeedbackStabilizationCriteria () const
        {
          return this->FeedbackStabilizationCriteria_;
        }

        PhysiologyEngineDynamicStabilizationData::FeedbackStabilizationCriteria_optional& PhysiologyEngineDynamicStabilizationData::
        FeedbackStabilizationCriteria ()
        {
          return this->FeedbackStabilizationCriteria_;
        }

        void PhysiologyEngineDynamicStabilizationData::
        FeedbackStabilizationCriteria (const FeedbackStabilizationCriteria_type& x)
        {
          this->FeedbackStabilizationCriteria_.set (x);
        }

        void PhysiologyEngineDynamicStabilizationData::
        FeedbackStabilizationCriteria (const FeedbackStabilizationCriteria_optional& x)
        {
          this->FeedbackStabilizationCriteria_ = x;
        }

        void PhysiologyEngineDynamicStabilizationData::
        FeedbackStabilizationCriteria (::std::unique_ptr< FeedbackStabilizationCriteria_type > x)
        {
          this->FeedbackStabilizationCriteria_.set (std::move (x));
        }

        const PhysiologyEngineDynamicStabilizationData::ConditionStabilization_sequence& PhysiologyEngineDynamicStabilizationData::
        ConditionStabilization () const
        {
          return this->ConditionStabilization_;
        }

        PhysiologyEngineDynamicStabilizationData::ConditionStabilization_sequence& PhysiologyEngineDynamicStabilizationData::
        ConditionStabilization ()
        {
          return this->ConditionStabilization_;
        }

        void PhysiologyEngineDynamicStabilizationData::
        ConditionStabilization (const ConditionStabilization_sequence& s)
        {
          this->ConditionStabilization_ = s;
        }


        // PhysiologyEngineDynamicConditionStabilizationData
        // 

        const PhysiologyEngineDynamicConditionStabilizationData::Criteria_type& PhysiologyEngineDynamicConditionStabilizationData::
        Criteria () const
        {
          return this->Criteria_.get ();
        }

        PhysiologyEngineDynamicConditionStabilizationData::Criteria_type& PhysiologyEngineDynamicConditionStabilizationData::
        Criteria ()
        {
          return this->Criteria_.get ();
        }

        void PhysiologyEngineDynamicConditionStabilizationData::
        Criteria (const Criteria_type& x)
        {
          this->Criteria_.set (x);
        }

        void PhysiologyEngineDynamicConditionStabilizationData::
        Criteria (::std::unique_ptr< Criteria_type > x)
        {
          this->Criteria_.set (std::move (x));
        }


        // PhysiologyEngineDynamicStabilizationCriteriaData
        // 

        const PhysiologyEngineDynamicStabilizationCriteriaData::ConvergenceTime_type& PhysiologyEngineDynamicStabilizationCriteriaData::
        ConvergenceTime () const
        {
          return this->ConvergenceTime_.get ();
        }

        PhysiologyEngineDynamicStabilizationCriteriaData::ConvergenceTime_type& PhysiologyEngineDynamicStabilizationCriteriaData::
        ConvergenceTime ()
        {
          return this->ConvergenceTime_.get ();
        }

        void PhysiologyEngineDynamicStabilizationCriteriaData::
        ConvergenceTime (const ConvergenceTime_type& x)
        {
          this->ConvergenceTime_.set (x);
        }

        void PhysiologyEngineDynamicStabilizationCriteriaData::
        ConvergenceTime (::std::unique_ptr< ConvergenceTime_type > x)
        {
          this->ConvergenceTime_.set (std::move (x));
        }

        const PhysiologyEngineDynamicStabilizationCriteriaData::MinimumReactionTime_type& PhysiologyEngineDynamicStabilizationCriteriaData::
        MinimumReactionTime () const
        {
          return this->MinimumReactionTime_.get ();
        }

        PhysiologyEngineDynamicStabilizationCriteriaData::MinimumReactionTime_type& PhysiologyEngineDynamicStabilizationCriteriaData::
        MinimumReactionTime ()
        {
          return this->MinimumReactionTime_.get ();
        }

        void PhysiologyEngineDynamicStabilizationCriteriaData::
        MinimumReactionTime (const MinimumReactionTime_type& x)
        {
          this->MinimumReactionTime_.set (x);
        }

        void PhysiologyEngineDynamicStabilizationCriteriaData::
        MinimumReactionTime (::std::unique_ptr< MinimumReactionTime_type > x)
        {
          this->MinimumReactionTime_.set (std::move (x));
        }

        const PhysiologyEngineDynamicStabilizationCriteriaData::MaximumAllowedStabilizationTime_type& PhysiologyEngineDynamicStabilizationCriteriaData::
        MaximumAllowedStabilizationTime () const
        {
          return this->MaximumAllowedStabilizationTime_.get ();
        }

        PhysiologyEngineDynamicStabilizationCriteriaData::MaximumAllowedStabilizationTime_type& PhysiologyEngineDynamicStabilizationCriteriaData::
        MaximumAllowedStabilizationTime ()
        {
          return this->MaximumAllowedStabilizationTime_.get ();
        }

        void PhysiologyEngineDynamicStabilizationCriteriaData::
        MaximumAllowedStabilizationTime (const MaximumAllowedStabilizationTime_type& x)
        {
          this->MaximumAllowedStabilizationTime_.set (x);
        }

        void PhysiologyEngineDynamicStabilizationCriteriaData::
        MaximumAllowedStabilizationTime (::std::unique_ptr< MaximumAllowedStabilizationTime_type > x)
        {
          this->MaximumAllowedStabilizationTime_.set (std::move (x));
        }

        const PhysiologyEngineDynamicStabilizationCriteriaData::PropertyConvergence_sequence& PhysiologyEngineDynamicStabilizationCriteriaData::
        PropertyConvergence () const
        {
          return this->PropertyConvergence_;
        }

        PhysiologyEngineDynamicStabilizationCriteriaData::PropertyConvergence_sequence& PhysiologyEngineDynamicStabilizationCriteriaData::
        PropertyConvergence ()
        {
          return this->PropertyConvergence_;
        }

        void PhysiologyEngineDynamicStabilizationCriteriaData::
        PropertyConvergence (const PropertyConvergence_sequence& s)
        {
          this->PropertyConvergence_ = s;
        }


        // PhysiologyEngineDynamicStabilizationCriteriaPropertyData
        // 

        const PhysiologyEngineDynamicStabilizationCriteriaPropertyData::Name_type& PhysiologyEngineDynamicStabilizationCriteriaPropertyData::
        Name () const
        {
          return this->Name_.get ();
        }

        PhysiologyEngineDynamicStabilizationCriteriaPropertyData::Name_type& PhysiologyEngineDynamicStabilizationCriteriaPropertyData::
        Name ()
        {
          return this->Name_.get ();
        }

        void PhysiologyEngineDynamicStabilizationCriteriaPropertyData::
        Name (const Name_type& x)
        {
          this->Name_.set (x);
        }

        void PhysiologyEngineDynamicStabilizationCriteriaPropertyData::
        Name (::std::unique_ptr< Name_type > x)
        {
          this->Name_.set (std::move (x));
        }

        const PhysiologyEngineDynamicStabilizationCriteriaPropertyData::PercentDifference_type& PhysiologyEngineDynamicStabilizationCriteriaPropertyData::
        PercentDifference () const
        {
          return this->PercentDifference_.get ();
        }

        PhysiologyEngineDynamicStabilizationCriteriaPropertyData::PercentDifference_type& PhysiologyEngineDynamicStabilizationCriteriaPropertyData::
        PercentDifference ()
        {
          return this->PercentDifference_.get ();
        }

        void PhysiologyEngineDynamicStabilizationCriteriaPropertyData::
        PercentDifference (const PercentDifference_type& x)
        {
          this->PercentDifference_.set (x);
        }
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // PhysiologyEngineConfigurationData
        //

        PhysiologyEngineConfigurationData::
        PhysiologyEngineConfigurationData ()
        : ::mil::tatrc::physiology::datamodel::ObjectData (),
          TimeStep_ (this),
          WritePatientBaselineFile_ (this),
          ElectroCardioGramInterpolator_ (this),
          ElectroCardioGramInterpolatorFile_ (this),
          StabilizationCriteria_ (this),
          StabilizationCriteriaFile_ (this)
        {
        }

        PhysiologyEngineConfigurationData::
        PhysiologyEngineConfigurationData (const PhysiologyEngineConfigurationData& x,
                                           ::xml_schema::flags f,
                                           ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ObjectData (x, f, c),
          TimeStep_ (x.TimeStep_, f, this),
          WritePatientBaselineFile_ (x.WritePatientBaselineFile_, f, this),
          ElectroCardioGramInterpolator_ (x.ElectroCardioGramInterpolator_, f, this),
          ElectroCardioGramInterpolatorFile_ (x.ElectroCardioGramInterpolatorFile_, f, this),
          StabilizationCriteria_ (x.StabilizationCriteria_, f, this),
          StabilizationCriteriaFile_ (x.StabilizationCriteriaFile_, f, this)
        {
        }

        PhysiologyEngineConfigurationData::
        PhysiologyEngineConfigurationData (const ::xercesc::DOMElement& e,
                                           ::xml_schema::flags f,
                                           ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ObjectData (e, f | ::xml_schema::flags::base, c),
          TimeStep_ (this),
          WritePatientBaselineFile_ (this),
          ElectroCardioGramInterpolator_ (this),
          ElectroCardioGramInterpolatorFile_ (this),
          StabilizationCriteria_ (this),
          StabilizationCriteriaFile_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
            this->parse (p, f);
          }
        }

        void PhysiologyEngineConfigurationData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          this->::mil::tatrc::physiology::datamodel::ObjectData::parse (p, f);

          for (; p.more_content (); p.next_content (false))
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // TimeStep
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "TimeStep",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< TimeStep_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->TimeStep_)
                {
                  ::std::unique_ptr< TimeStep_type > r (
                    dynamic_cast< TimeStep_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->TimeStep_.set (::std::move (r));
                  continue;
                }
              }
            }

            // WritePatientBaselineFile
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "WritePatientBaselineFile",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< WritePatientBaselineFile_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->WritePatientBaselineFile_)
                {
                  ::std::unique_ptr< WritePatientBaselineFile_type > r (
                    dynamic_cast< WritePatientBaselineFile_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->WritePatientBaselineFile_.set (::std::move (r));
                  continue;
                }
              }
            }

            // ElectroCardioGramInterpolator
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "ElectroCardioGramInterpolator",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< ElectroCardioGramInterpolator_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->ElectroCardioGramInterpolator_)
                {
                  ::std::unique_ptr< ElectroCardioGramInterpolator_type > r (
                    dynamic_cast< ElectroCardioGramInterpolator_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->ElectroCardioGramInterpolator_.set (::std::move (r));
                  continue;
                }
              }
            }

            // ElectroCardioGramInterpolatorFile
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "ElectroCardioGramInterpolatorFile",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< ElectroCardioGramInterpolatorFile_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->ElectroCardioGramInterpolatorFile_)
                {
                  ::std::unique_ptr< ElectroCardioGramInterpolatorFile_type > r (
                    dynamic_cast< ElectroCardioGramInterpolatorFile_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->ElectroCardioGramInterpolatorFile_.set (::std::move (r));
                  continue;
                }
              }
            }

            // StabilizationCriteria
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "StabilizationCriteria",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< StabilizationCriteria_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->StabilizationCriteria_)
                {
                  ::std::unique_ptr< StabilizationCriteria_type > r (
                    dynamic_cast< StabilizationCriteria_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->StabilizationCriteria_.set (::std::move (r));
                  continue;
                }
              }
            }

            // StabilizationCriteriaFile
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "StabilizationCriteriaFile",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< StabilizationCriteriaFile_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->StabilizationCriteriaFile_)
                {
                  ::std::unique_ptr< StabilizationCriteriaFile_type > r (
                    dynamic_cast< StabilizationCriteriaFile_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->StabilizationCriteriaFile_.set (::std::move (r));
                  continue;
                }
              }
            }

            break;
          }
        }

        PhysiologyEngineConfigurationData* PhysiologyEngineConfigurationData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class PhysiologyEngineConfigurationData (*this, f, c);
        }

        PhysiologyEngineConfigurationData& PhysiologyEngineConfigurationData::
        operator= (const PhysiologyEngineConfigurationData& x)
        {
          if (this != &x)
          {
            static_cast< ::mil::tatrc::physiology::datamodel::ObjectData& > (*this) = x;
            this->TimeStep_ = x.TimeStep_;
            this->WritePatientBaselineFile_ = x.WritePatientBaselineFile_;
            this->ElectroCardioGramInterpolator_ = x.ElectroCardioGramInterpolator_;
            this->ElectroCardioGramInterpolatorFile_ = x.ElectroCardioGramInterpolatorFile_;
            this->StabilizationCriteria_ = x.StabilizationCriteria_;
            this->StabilizationCriteriaFile_ = x.StabilizationCriteriaFile_;
          }

          return *this;
        }

        PhysiologyEngineConfigurationData::
        ~PhysiologyEngineConfigurationData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, PhysiologyEngineConfigurationData >
        _xsd_PhysiologyEngineConfigurationData_type_factory_init (
          "PhysiologyEngineConfigurationData",
          "uri:/mil/tatrc/physiology/datamodel");

        // PhysiologyEngineStabilizationData
        //

        PhysiologyEngineStabilizationData::
        PhysiologyEngineStabilizationData ()
        : ::mil::tatrc::physiology::datamodel::ObjectData ()
        {
        }

        PhysiologyEngineStabilizationData::
        PhysiologyEngineStabilizationData (const PhysiologyEngineStabilizationData& x,
                                           ::xml_schema::flags f,
                                           ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ObjectData (x, f, c)
        {
        }

        PhysiologyEngineStabilizationData::
        PhysiologyEngineStabilizationData (const ::xercesc::DOMElement& e,
                                           ::xml_schema::flags f,
                                           ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ObjectData (e, f, c)
        {
        }

        PhysiologyEngineStabilizationData* PhysiologyEngineStabilizationData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class PhysiologyEngineStabilizationData (*this, f, c);
        }

        PhysiologyEngineStabilizationData::
        ~PhysiologyEngineStabilizationData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, PhysiologyEngineStabilizationData >
        _xsd_PhysiologyEngineStabilizationData_type_factory_init (
          "PhysiologyEngineStabilizationData",
          "uri:/mil/tatrc/physiology/datamodel");

        // PhysiologyEngineConditionStabilizationData
        //

        PhysiologyEngineConditionStabilizationData::
        PhysiologyEngineConditionStabilizationData ()
        : ::mil::tatrc::physiology::datamodel::ObjectData (),
          Name_ (this)
        {
        }

        PhysiologyEngineConditionStabilizationData::
        PhysiologyEngineConditionStabilizationData (const Name_type& Name)
        : ::mil::tatrc::physiology::datamodel::ObjectData (),
          Name_ (Name, this)
        {
        }

        PhysiologyEngineConditionStabilizationData::
        PhysiologyEngineConditionStabilizationData (const PhysiologyEngineConditionStabilizationData& x,
                                                    ::xml_schema::flags f,
                                                    ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ObjectData (x, f, c),
          Name_ (x.Name_, f, this)
        {
        }

        PhysiologyEngineConditionStabilizationData::
        PhysiologyEngineConditionStabilizationData (const ::xercesc::DOMElement& e,
                                                    ::xml_schema::flags f,
                                                    ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ObjectData (e, f | ::xml_schema::flags::base, c),
          Name_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, false, false, true);
            this->parse (p, f);
          }
        }

        void PhysiologyEngineConditionStabilizationData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          this->::mil::tatrc::physiology::datamodel::ObjectData::parse (p, f);

          p.reset_attributes ();

          while (p.more_attributes ())
          {
            const ::xercesc::DOMAttr& i (p.next_attribute ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            if (n.name () == "Name" && n.namespace_ ().empty ())
            {
              this->Name_.set (Name_traits::create (i, f, this));
              continue;
            }
          }

          if (!Name_.present ())
          {
            throw ::xsd::cxx::tree::expected_attribute< char > (
              "Name",
              "");
          }
        }

        PhysiologyEngineConditionStabilizationData* PhysiologyEngineConditionStabilizationData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class PhysiologyEngineConditionStabilizationData (*this, f, c);
        }

        PhysiologyEngineConditionStabilizationData& PhysiologyEngineConditionStabilizationData::
        operator= (const PhysiologyEngineConditionStabilizationData& x)
        {
          if (this != &x)
          {
            static_cast< ::mil::tatrc::physiology::datamodel::ObjectData& > (*this) = x;
            this->Name_ = x.Name_;
          }

          return *this;
        }

        PhysiologyEngineConditionStabilizationData::
        ~PhysiologyEngineConditionStabilizationData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, PhysiologyEngineConditionStabilizationData >
        _xsd_PhysiologyEngineConditionStabilizationData_type_factory_init (
          "PhysiologyEngineConditionStabilizationData",
          "uri:/mil/tatrc/physiology/datamodel");

        // PhysiologyEngineTimedStabilizationData
        //

        PhysiologyEngineTimedStabilizationData::
        PhysiologyEngineTimedStabilizationData ()
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineStabilizationData (),
          RestingStabilizationTime_ (this),
          FeedbackStabilizationTime_ (this),
          ConditionStabilization_ (this)
        {
        }

        PhysiologyEngineTimedStabilizationData::
        PhysiologyEngineTimedStabilizationData (const RestingStabilizationTime_type& RestingStabilizationTime)
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineStabilizationData (),
          RestingStabilizationTime_ (RestingStabilizationTime, this),
          FeedbackStabilizationTime_ (this),
          ConditionStabilization_ (this)
        {
        }

        PhysiologyEngineTimedStabilizationData::
        PhysiologyEngineTimedStabilizationData (::std::unique_ptr< RestingStabilizationTime_type > RestingStabilizationTime)
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineStabilizationData (),
          RestingStabilizationTime_ (std::move (RestingStabilizationTime), this),
          FeedbackStabilizationTime_ (this),
          ConditionStabilization_ (this)
        {
        }

        PhysiologyEngineTimedStabilizationData::
        PhysiologyEngineTimedStabilizationData (const PhysiologyEngineTimedStabilizationData& x,
                                                ::xml_schema::flags f,
                                                ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineStabilizationData (x, f, c),
          RestingStabilizationTime_ (x.RestingStabilizationTime_, f, this),
          FeedbackStabilizationTime_ (x.FeedbackStabilizationTime_, f, this),
          ConditionStabilization_ (x.ConditionStabilization_, f, this)
        {
        }

        PhysiologyEngineTimedStabilizationData::
        PhysiologyEngineTimedStabilizationData (const ::xercesc::DOMElement& e,
                                                ::xml_schema::flags f,
                                                ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineStabilizationData (e, f | ::xml_schema::flags::base, c),
          RestingStabilizationTime_ (this),
          FeedbackStabilizationTime_ (this),
          ConditionStabilization_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
            this->parse (p, f);
          }
        }

        void PhysiologyEngineTimedStabilizationData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          this->::mil::tatrc::physiology::datamodel::PhysiologyEngineStabilizationData::parse (p, f);

          for (; p.more_content (); p.next_content (false))
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // RestingStabilizationTime
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RestingStabilizationTime",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RestingStabilizationTime_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!RestingStabilizationTime_.present ())
                {
                  ::std::unique_ptr< RestingStabilizationTime_type > r (
                    dynamic_cast< RestingStabilizationTime_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RestingStabilizationTime_.set (::std::move (r));
                  continue;
                }
              }
            }

            // FeedbackStabilizationTime
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "FeedbackStabilizationTime",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< FeedbackStabilizationTime_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->FeedbackStabilizationTime_)
                {
                  ::std::unique_ptr< FeedbackStabilizationTime_type > r (
                    dynamic_cast< FeedbackStabilizationTime_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->FeedbackStabilizationTime_.set (::std::move (r));
                  continue;
                }
              }
            }

            // ConditionStabilization
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "ConditionStabilization",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< ConditionStabilization_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                ::std::unique_ptr< ConditionStabilization_type > r (
                  dynamic_cast< ConditionStabilization_type* > (tmp.get ()));

                if (r.get ())
                  tmp.release ();
                else
                  throw ::xsd::cxx::tree::not_derived< char > ();

                this->ConditionStabilization_.push_back (::std::move (r));
                continue;
              }
            }

            break;
          }

          if (!RestingStabilizationTime_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "RestingStabilizationTime",
              "uri:/mil/tatrc/physiology/datamodel");
          }
        }

        PhysiologyEngineTimedStabilizationData* PhysiologyEngineTimedStabilizationData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class PhysiologyEngineTimedStabilizationData (*this, f, c);
        }

        PhysiologyEngineTimedStabilizationData& PhysiologyEngineTimedStabilizationData::
        operator= (const PhysiologyEngineTimedStabilizationData& x)
        {
          if (this != &x)
          {
            static_cast< ::mil::tatrc::physiology::datamodel::PhysiologyEngineStabilizationData& > (*this) = x;
            this->RestingStabilizationTime_ = x.RestingStabilizationTime_;
            this->FeedbackStabilizationTime_ = x.FeedbackStabilizationTime_;
            this->ConditionStabilization_ = x.ConditionStabilization_;
          }

          return *this;
        }

        PhysiologyEngineTimedStabilizationData::
        ~PhysiologyEngineTimedStabilizationData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, PhysiologyEngineTimedStabilizationData >
        _xsd_PhysiologyEngineTimedStabilizationData_type_factory_init (
          "PhysiologyEngineTimedStabilizationData",
          "uri:/mil/tatrc/physiology/datamodel");

        // PhysiologyEngineTimedConditionStabilizationData
        //

        PhysiologyEngineTimedConditionStabilizationData::
        PhysiologyEngineTimedConditionStabilizationData ()
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineConditionStabilizationData (),
          Time_ (this)
        {
        }

        PhysiologyEngineTimedConditionStabilizationData::
        PhysiologyEngineTimedConditionStabilizationData (const Name_type& Name,
                                                         const Time_type& Time)
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineConditionStabilizationData (Name),
          Time_ (Time, this)
        {
        }

        PhysiologyEngineTimedConditionStabilizationData::
        PhysiologyEngineTimedConditionStabilizationData (const Name_type& Name,
                                                         ::std::unique_ptr< Time_type > Time)
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineConditionStabilizationData (Name),
          Time_ (std::move (Time), this)
        {
        }

        PhysiologyEngineTimedConditionStabilizationData::
        PhysiologyEngineTimedConditionStabilizationData (const PhysiologyEngineTimedConditionStabilizationData& x,
                                                         ::xml_schema::flags f,
                                                         ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineConditionStabilizationData (x, f, c),
          Time_ (x.Time_, f, this)
        {
        }

        PhysiologyEngineTimedConditionStabilizationData::
        PhysiologyEngineTimedConditionStabilizationData (const ::xercesc::DOMElement& e,
                                                         ::xml_schema::flags f,
                                                         ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineConditionStabilizationData (e, f | ::xml_schema::flags::base, c),
          Time_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
            this->parse (p, f);
          }
        }

        void PhysiologyEngineTimedConditionStabilizationData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          this->::mil::tatrc::physiology::datamodel::PhysiologyEngineConditionStabilizationData::parse (p, f);

          for (; p.more_content (); p.next_content (false))
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // Time
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "Time",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< Time_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!Time_.present ())
                {
                  ::std::unique_ptr< Time_type > r (
                    dynamic_cast< Time_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->Time_.set (::std::move (r));
                  continue;
                }
              }
            }

            break;
          }

          if (!Time_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "Time",
              "uri:/mil/tatrc/physiology/datamodel");
          }
        }

        PhysiologyEngineTimedConditionStabilizationData* PhysiologyEngineTimedConditionStabilizationData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class PhysiologyEngineTimedConditionStabilizationData (*this, f, c);
        }

        PhysiologyEngineTimedConditionStabilizationData& PhysiologyEngineTimedConditionStabilizationData::
        operator= (const PhysiologyEngineTimedConditionStabilizationData& x)
        {
          if (this != &x)
          {
            static_cast< ::mil::tatrc::physiology::datamodel::PhysiologyEngineConditionStabilizationData& > (*this) = x;
            this->Time_ = x.Time_;
          }

          return *this;
        }

        PhysiologyEngineTimedConditionStabilizationData::
        ~PhysiologyEngineTimedConditionStabilizationData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, PhysiologyEngineTimedConditionStabilizationData >
        _xsd_PhysiologyEngineTimedConditionStabilizationData_type_factory_init (
          "PhysiologyEngineTimedConditionStabilizationData",
          "uri:/mil/tatrc/physiology/datamodel");

        // PhysiologyEngineDynamicStabilizationData
        //

        PhysiologyEngineDynamicStabilizationData::
        PhysiologyEngineDynamicStabilizationData ()
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineStabilizationData (),
          RestingStabilizationCriteria_ (this),
          FeedbackStabilizationCriteria_ (this),
          ConditionStabilization_ (this)
        {
        }

        PhysiologyEngineDynamicStabilizationData::
        PhysiologyEngineDynamicStabilizationData (const RestingStabilizationCriteria_type& RestingStabilizationCriteria)
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineStabilizationData (),
          RestingStabilizationCriteria_ (RestingStabilizationCriteria, this),
          FeedbackStabilizationCriteria_ (this),
          ConditionStabilization_ (this)
        {
        }

        PhysiologyEngineDynamicStabilizationData::
        PhysiologyEngineDynamicStabilizationData (::std::unique_ptr< RestingStabilizationCriteria_type > RestingStabilizationCriteria)
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineStabilizationData (),
          RestingStabilizationCriteria_ (std::move (RestingStabilizationCriteria), this),
          FeedbackStabilizationCriteria_ (this),
          ConditionStabilization_ (this)
        {
        }

        PhysiologyEngineDynamicStabilizationData::
        PhysiologyEngineDynamicStabilizationData (const PhysiologyEngineDynamicStabilizationData& x,
                                                  ::xml_schema::flags f,
                                                  ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineStabilizationData (x, f, c),
          RestingStabilizationCriteria_ (x.RestingStabilizationCriteria_, f, this),
          FeedbackStabilizationCriteria_ (x.FeedbackStabilizationCriteria_, f, this),
          ConditionStabilization_ (x.ConditionStabilization_, f, this)
        {
        }

        PhysiologyEngineDynamicStabilizationData::
        PhysiologyEngineDynamicStabilizationData (const ::xercesc::DOMElement& e,
                                                  ::xml_schema::flags f,
                                                  ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineStabilizationData (e, f | ::xml_schema::flags::base, c),
          RestingStabilizationCriteria_ (this),
          FeedbackStabilizationCriteria_ (this),
          ConditionStabilization_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
            this->parse (p, f);
          }
        }

        void PhysiologyEngineDynamicStabilizationData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          this->::mil::tatrc::physiology::datamodel::PhysiologyEngineStabilizationData::parse (p, f);

          for (; p.more_content (); p.next_content (false))
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // RestingStabilizationCriteria
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RestingStabilizationCriteria",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RestingStabilizationCriteria_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!RestingStabilizationCriteria_.present ())
                {
                  ::std::unique_ptr< RestingStabilizationCriteria_type > r (
                    dynamic_cast< RestingStabilizationCriteria_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RestingStabilizationCriteria_.set (::std::move (r));
                  continue;
                }
              }
            }

            // FeedbackStabilizationCriteria
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "FeedbackStabilizationCriteria",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< FeedbackStabilizationCriteria_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->FeedbackStabilizationCriteria_)
                {
                  ::std::unique_ptr< FeedbackStabilizationCriteria_type > r (
                    dynamic_cast< FeedbackStabilizationCriteria_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->FeedbackStabilizationCriteria_.set (::std::move (r));
                  continue;
                }
              }
            }

            // ConditionStabilization
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "ConditionStabilization",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< ConditionStabilization_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                ::std::unique_ptr< ConditionStabilization_type > r (
                  dynamic_cast< ConditionStabilization_type* > (tmp.get ()));

                if (r.get ())
                  tmp.release ();
                else
                  throw ::xsd::cxx::tree::not_derived< char > ();

                this->ConditionStabilization_.push_back (::std::move (r));
                continue;
              }
            }

            break;
          }

          if (!RestingStabilizationCriteria_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "RestingStabilizationCriteria",
              "uri:/mil/tatrc/physiology/datamodel");
          }
        }

        PhysiologyEngineDynamicStabilizationData* PhysiologyEngineDynamicStabilizationData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class PhysiologyEngineDynamicStabilizationData (*this, f, c);
        }

        PhysiologyEngineDynamicStabilizationData& PhysiologyEngineDynamicStabilizationData::
        operator= (const PhysiologyEngineDynamicStabilizationData& x)
        {
          if (this != &x)
          {
            static_cast< ::mil::tatrc::physiology::datamodel::PhysiologyEngineStabilizationData& > (*this) = x;
            this->RestingStabilizationCriteria_ = x.RestingStabilizationCriteria_;
            this->FeedbackStabilizationCriteria_ = x.FeedbackStabilizationCriteria_;
            this->ConditionStabilization_ = x.ConditionStabilization_;
          }

          return *this;
        }

        PhysiologyEngineDynamicStabilizationData::
        ~PhysiologyEngineDynamicStabilizationData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, PhysiologyEngineDynamicStabilizationData >
        _xsd_PhysiologyEngineDynamicStabilizationData_type_factory_init (
          "PhysiologyEngineDynamicStabilizationData",
          "uri:/mil/tatrc/physiology/datamodel");

        // PhysiologyEngineDynamicConditionStabilizationData
        //

        PhysiologyEngineDynamicConditionStabilizationData::
        PhysiologyEngineDynamicConditionStabilizationData ()
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineConditionStabilizationData (),
          Criteria_ (this)
        {
        }

        PhysiologyEngineDynamicConditionStabilizationData::
        PhysiologyEngineDynamicConditionStabilizationData (const Name_type& Name,
                                                           const Criteria_type& Criteria)
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineConditionStabilizationData (Name),
          Criteria_ (Criteria, this)
        {
        }

        PhysiologyEngineDynamicConditionStabilizationData::
        PhysiologyEngineDynamicConditionStabilizationData (const Name_type& Name,
                                                           ::std::unique_ptr< Criteria_type > Criteria)
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineConditionStabilizationData (Name),
          Criteria_ (std::move (Criteria), this)
        {
        }

        PhysiologyEngineDynamicConditionStabilizationData::
        PhysiologyEngineDynamicConditionStabilizationData (const PhysiologyEngineDynamicConditionStabilizationData& x,
                                                           ::xml_schema::flags f,
                                                           ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineConditionStabilizationData (x, f, c),
          Criteria_ (x.Criteria_, f, this)
        {
        }

        PhysiologyEngineDynamicConditionStabilizationData::
        PhysiologyEngineDynamicConditionStabilizationData (const ::xercesc::DOMElement& e,
                                                           ::xml_schema::flags f,
                                                           ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineConditionStabilizationData (e, f | ::xml_schema::flags::base, c),
          Criteria_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
            this->parse (p, f);
          }
        }

        void PhysiologyEngineDynamicConditionStabilizationData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          this->::mil::tatrc::physiology::datamodel::PhysiologyEngineConditionStabilizationData::parse (p, f);

          for (; p.more_content (); p.next_content (false))
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // Criteria
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "Criteria",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< Criteria_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!Criteria_.present ())
                {
                  ::std::unique_ptr< Criteria_type > r (
                    dynamic_cast< Criteria_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->Criteria_.set (::std::move (r));
                  continue;
                }
              }
            }

            break;
          }

          if (!Criteria_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "Criteria",
              "uri:/mil/tatrc/physiology/datamodel");
          }
        }

        PhysiologyEngineDynamicConditionStabilizationData* PhysiologyEngineDynamicConditionStabilizationData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class PhysiologyEngineDynamicConditionStabilizationData (*this, f, c);
        }

        PhysiologyEngineDynamicConditionStabilizationData& PhysiologyEngineDynamicConditionStabilizationData::
        operator= (const PhysiologyEngineDynamicConditionStabilizationData& x)
        {
          if (this != &x)
          {
            static_cast< ::mil::tatrc::physiology::datamodel::PhysiologyEngineConditionStabilizationData& > (*this) = x;
            this->Criteria_ = x.Criteria_;
          }

          return *this;
        }

        PhysiologyEngineDynamicConditionStabilizationData::
        ~PhysiologyEngineDynamicConditionStabilizationData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, PhysiologyEngineDynamicConditionStabilizationData >
        _xsd_PhysiologyEngineDynamicConditionStabilizationData_type_factory_init (
          "PhysiologyEngineDynamicConditionStabilizationData",
          "uri:/mil/tatrc/physiology/datamodel");

        // PhysiologyEngineDynamicStabilizationCriteriaData
        //

        PhysiologyEngineDynamicStabilizationCriteriaData::
        PhysiologyEngineDynamicStabilizationCriteriaData ()
        : ::xml_schema::type (),
          ConvergenceTime_ (this),
          MinimumReactionTime_ (this),
          MaximumAllowedStabilizationTime_ (this),
          PropertyConvergence_ (this)
        {
        }

        PhysiologyEngineDynamicStabilizationCriteriaData::
        PhysiologyEngineDynamicStabilizationCriteriaData (const ConvergenceTime_type& ConvergenceTime,
                                                          const MinimumReactionTime_type& MinimumReactionTime,
                                                          const MaximumAllowedStabilizationTime_type& MaximumAllowedStabilizationTime)
        : ::xml_schema::type (),
          ConvergenceTime_ (ConvergenceTime, this),
          MinimumReactionTime_ (MinimumReactionTime, this),
          MaximumAllowedStabilizationTime_ (MaximumAllowedStabilizationTime, this),
          PropertyConvergence_ (this)
        {
        }

        PhysiologyEngineDynamicStabilizationCriteriaData::
        PhysiologyEngineDynamicStabilizationCriteriaData (::std::unique_ptr< ConvergenceTime_type > ConvergenceTime,
                                                          ::std::unique_ptr< MinimumReactionTime_type > MinimumReactionTime,
                                                          ::std::unique_ptr< MaximumAllowedStabilizationTime_type > MaximumAllowedStabilizationTime)
        : ::xml_schema::type (),
          ConvergenceTime_ (std::move (ConvergenceTime), this),
          MinimumReactionTime_ (std::move (MinimumReactionTime), this),
          MaximumAllowedStabilizationTime_ (std::move (MaximumAllowedStabilizationTime), this),
          PropertyConvergence_ (this)
        {
        }

        PhysiologyEngineDynamicStabilizationCriteriaData::
        PhysiologyEngineDynamicStabilizationCriteriaData (const PhysiologyEngineDynamicStabilizationCriteriaData& x,
                                                          ::xml_schema::flags f,
                                                          ::xml_schema::container* c)
        : ::xml_schema::type (x, f, c),
          ConvergenceTime_ (x.ConvergenceTime_, f, this),
          MinimumReactionTime_ (x.MinimumReactionTime_, f, this),
          MaximumAllowedStabilizationTime_ (x.MaximumAllowedStabilizationTime_, f, this),
          PropertyConvergence_ (x.PropertyConvergence_, f, this)
        {
        }

        PhysiologyEngineDynamicStabilizationCriteriaData::
        PhysiologyEngineDynamicStabilizationCriteriaData (const ::xercesc::DOMElement& e,
                                                          ::xml_schema::flags f,
                                                          ::xml_schema::container* c)
        : ::xml_schema::type (e, f | ::xml_schema::flags::base, c),
          ConvergenceTime_ (this),
          MinimumReactionTime_ (this),
          MaximumAllowedStabilizationTime_ (this),
          PropertyConvergence_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false, false);
            this->parse (p, f);
          }
        }

        void PhysiologyEngineDynamicStabilizationCriteriaData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          for (; p.more_content (); p.next_content (false))
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // ConvergenceTime
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "ConvergenceTime",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< ConvergenceTime_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!ConvergenceTime_.present ())
                {
                  ::std::unique_ptr< ConvergenceTime_type > r (
                    dynamic_cast< ConvergenceTime_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->ConvergenceTime_.set (::std::move (r));
                  continue;
                }
              }
            }

            // MinimumReactionTime
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "MinimumReactionTime",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< MinimumReactionTime_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!MinimumReactionTime_.present ())
                {
                  ::std::unique_ptr< MinimumReactionTime_type > r (
                    dynamic_cast< MinimumReactionTime_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->MinimumReactionTime_.set (::std::move (r));
                  continue;
                }
              }
            }

            // MaximumAllowedStabilizationTime
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "MaximumAllowedStabilizationTime",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< MaximumAllowedStabilizationTime_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!MaximumAllowedStabilizationTime_.present ())
                {
                  ::std::unique_ptr< MaximumAllowedStabilizationTime_type > r (
                    dynamic_cast< MaximumAllowedStabilizationTime_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->MaximumAllowedStabilizationTime_.set (::std::move (r));
                  continue;
                }
              }
            }

            // PropertyConvergence
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "PropertyConvergence",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< PropertyConvergence_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                ::std::unique_ptr< PropertyConvergence_type > r (
                  dynamic_cast< PropertyConvergence_type* > (tmp.get ()));

                if (r.get ())
                  tmp.release ();
                else
                  throw ::xsd::cxx::tree::not_derived< char > ();

                this->PropertyConvergence_.push_back (::std::move (r));
                continue;
              }
            }

            break;
          }

          if (!ConvergenceTime_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "ConvergenceTime",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!MinimumReactionTime_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "MinimumReactionTime",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!MaximumAllowedStabilizationTime_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "MaximumAllowedStabilizationTime",
              "uri:/mil/tatrc/physiology/datamodel");
          }
        }

        PhysiologyEngineDynamicStabilizationCriteriaData* PhysiologyEngineDynamicStabilizationCriteriaData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class PhysiologyEngineDynamicStabilizationCriteriaData (*this, f, c);
        }

        PhysiologyEngineDynamicStabilizationCriteriaData& PhysiologyEngineDynamicStabilizationCriteriaData::
        operator= (const PhysiologyEngineDynamicStabilizationCriteriaData& x)
        {
          if (this != &x)
          {
            static_cast< ::xml_schema::type& > (*this) = x;
            this->ConvergenceTime_ = x.ConvergenceTime_;
            this->MinimumReactionTime_ = x.MinimumReactionTime_;
            this->MaximumAllowedStabilizationTime_ = x.MaximumAllowedStabilizationTime_;
            this->PropertyConvergence_ = x.PropertyConvergence_;
          }

          return *this;
        }

        PhysiologyEngineDynamicStabilizationCriteriaData::
        ~PhysiologyEngineDynamicStabilizationCriteriaData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, PhysiologyEngineDynamicStabilizationCriteriaData >
        _xsd_PhysiologyEngineDynamicStabilizationCriteriaData_type_factory_init (
          "PhysiologyEngineDynamicStabilizationCriteriaData",
          "uri:/mil/tatrc/physiology/datamodel");

        // PhysiologyEngineDynamicStabilizationCriteriaPropertyData
        //

        PhysiologyEngineDynamicStabilizationCriteriaPropertyData::
        PhysiologyEngineDynamicStabilizationCriteriaPropertyData ()
        : ::xml_schema::type (),
          Name_ (this),
          PercentDifference_ (this)
        {
        }

        PhysiologyEngineDynamicStabilizationCriteriaPropertyData::
        PhysiologyEngineDynamicStabilizationCriteriaPropertyData (const Name_type& Name,
                                                                  const PercentDifference_type& PercentDifference)
        : ::xml_schema::type (),
          Name_ (Name, this),
          PercentDifference_ (PercentDifference, this)
        {
        }

        PhysiologyEngineDynamicStabilizationCriteriaPropertyData::
        PhysiologyEngineDynamicStabilizationCriteriaPropertyData (const PhysiologyEngineDynamicStabilizationCriteriaPropertyData& x,
                                                                  ::xml_schema::flags f,
                                                                  ::xml_schema::container* c)
        : ::xml_schema::type (x, f, c),
          Name_ (x.Name_, f, this),
          PercentDifference_ (x.PercentDifference_, f, this)
        {
        }

        PhysiologyEngineDynamicStabilizationCriteriaPropertyData::
        PhysiologyEngineDynamicStabilizationCriteriaPropertyData (const ::xercesc::DOMElement& e,
                                                                  ::xml_schema::flags f,
                                                                  ::xml_schema::container* c)
        : ::xml_schema::type (e, f | ::xml_schema::flags::base, c),
          Name_ (this),
          PercentDifference_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, false, false, true);
            this->parse (p, f);
          }
        }

        void PhysiologyEngineDynamicStabilizationCriteriaPropertyData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          while (p.more_attributes ())
          {
            const ::xercesc::DOMAttr& i (p.next_attribute ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            if (n.name () == "Name" && n.namespace_ ().empty ())
            {
              this->Name_.set (Name_traits::create (i, f, this));
              continue;
            }

            if (n.name () == "PercentDifference" && n.namespace_ ().empty ())
            {
              this->PercentDifference_.set (PercentDifference_traits::create (i, f, this));
              continue;
            }
          }

          if (!Name_.present ())
          {
            throw ::xsd::cxx::tree::expected_attribute< char > (
              "Name",
              "");
          }

          if (!PercentDifference_.present ())
          {
            throw ::xsd::cxx::tree::expected_attribute< char > (
              "PercentDifference",
              "");
          }
        }

        PhysiologyEngineDynamicStabilizationCriteriaPropertyData* PhysiologyEngineDynamicStabilizationCriteriaPropertyData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class PhysiologyEngineDynamicStabilizationCriteriaPropertyData (*this, f, c);
        }

        PhysiologyEngineDynamicStabilizationCriteriaPropertyData& PhysiologyEngineDynamicStabilizationCriteriaPropertyData::
        operator= (const PhysiologyEngineDynamicStabilizationCriteriaPropertyData& x)
        {
          if (this != &x)
          {
            static_cast< ::xml_schema::type& > (*this) = x;
            this->Name_ = x.Name_;
            this->PercentDifference_ = x.PercentDifference_;
          }

          return *this;
        }

        PhysiologyEngineDynamicStabilizationCriteriaPropertyData::
        ~PhysiologyEngineDynamicStabilizationCriteriaPropertyData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, PhysiologyEngineDynamicStabilizationCriteriaPropertyData >
        _xsd_PhysiologyEngineDynamicStabilizationCriteriaPropertyData_type_factory_init (
          "PhysiologyEngineDynamicStabilizationCriteriaPropertyData",
          "uri:/mil/tatrc/physiology/datamodel");
      }
    }
  }
}

#include <ostream>

#include <xsd/cxx/tree/std-ostream-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::std_ostream_plate< 0, char >
  std_ostream_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        ::std::ostream&
        operator<< (::std::ostream& o, const PhysiologyEngineConfigurationData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ObjectData& > (i);

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.TimeStep ())
            {
              o << ::std::endl << "TimeStep: ";
              om.insert (o, *i.TimeStep ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.WritePatientBaselineFile ())
            {
              o << ::std::endl << "WritePatientBaselineFile: ";
              om.insert (o, *i.WritePatientBaselineFile ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.ElectroCardioGramInterpolator ())
            {
              o << ::std::endl << "ElectroCardioGramInterpolator: ";
              om.insert (o, *i.ElectroCardioGramInterpolator ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.ElectroCardioGramInterpolatorFile ())
            {
              o << ::std::endl << "ElectroCardioGramInterpolatorFile: ";
              om.insert (o, *i.ElectroCardioGramInterpolatorFile ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.StabilizationCriteria ())
            {
              o << ::std::endl << "StabilizationCriteria: ";
              om.insert (o, *i.StabilizationCriteria ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.StabilizationCriteriaFile ())
            {
              o << ::std::endl << "StabilizationCriteriaFile: ";
              om.insert (o, *i.StabilizationCriteriaFile ());
            }
          }

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, PhysiologyEngineConfigurationData >
        _xsd_PhysiologyEngineConfigurationData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const PhysiologyEngineStabilizationData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ObjectData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, PhysiologyEngineStabilizationData >
        _xsd_PhysiologyEngineStabilizationData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const PhysiologyEngineConditionStabilizationData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ObjectData& > (i);

          o << ::std::endl << "Name: " << i.Name ();
          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, PhysiologyEngineConditionStabilizationData >
        _xsd_PhysiologyEngineConditionStabilizationData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const PhysiologyEngineTimedStabilizationData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::PhysiologyEngineStabilizationData& > (i);

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "RestingStabilizationTime: ";
            om.insert (o, i.RestingStabilizationTime ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.FeedbackStabilizationTime ())
            {
              o << ::std::endl << "FeedbackStabilizationTime: ";
              om.insert (o, *i.FeedbackStabilizationTime ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            for (PhysiologyEngineTimedStabilizationData::ConditionStabilization_const_iterator
                 b (i.ConditionStabilization ().begin ()), e (i.ConditionStabilization ().end ());
                 b != e; ++b)
            {
              o << ::std::endl << "ConditionStabilization: ";
              om.insert (o, *b);
            }
          }

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, PhysiologyEngineTimedStabilizationData >
        _xsd_PhysiologyEngineTimedStabilizationData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const PhysiologyEngineTimedConditionStabilizationData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::PhysiologyEngineConditionStabilizationData& > (i);

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "Time: ";
            om.insert (o, i.Time ());
          }

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, PhysiologyEngineTimedConditionStabilizationData >
        _xsd_PhysiologyEngineTimedConditionStabilizationData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const PhysiologyEngineDynamicStabilizationData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::PhysiologyEngineStabilizationData& > (i);

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "RestingStabilizationCriteria: ";
            om.insert (o, i.RestingStabilizationCriteria ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.FeedbackStabilizationCriteria ())
            {
              o << ::std::endl << "FeedbackStabilizationCriteria: ";
              om.insert (o, *i.FeedbackStabilizationCriteria ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            for (PhysiologyEngineDynamicStabilizationData::ConditionStabilization_const_iterator
                 b (i.ConditionStabilization ().begin ()), e (i.ConditionStabilization ().end ());
                 b != e; ++b)
            {
              o << ::std::endl << "ConditionStabilization: ";
              om.insert (o, *b);
            }
          }

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, PhysiologyEngineDynamicStabilizationData >
        _xsd_PhysiologyEngineDynamicStabilizationData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const PhysiologyEngineDynamicConditionStabilizationData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::PhysiologyEngineConditionStabilizationData& > (i);

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "Criteria: ";
            om.insert (o, i.Criteria ());
          }

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, PhysiologyEngineDynamicConditionStabilizationData >
        _xsd_PhysiologyEngineDynamicConditionStabilizationData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const PhysiologyEngineDynamicStabilizationCriteriaData& i)
        {
          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "ConvergenceTime: ";
            om.insert (o, i.ConvergenceTime ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "MinimumReactionTime: ";
            om.insert (o, i.MinimumReactionTime ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "MaximumAllowedStabilizationTime: ";
            om.insert (o, i.MaximumAllowedStabilizationTime ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            for (PhysiologyEngineDynamicStabilizationCriteriaData::PropertyConvergence_const_iterator
                 b (i.PropertyConvergence ().begin ()), e (i.PropertyConvergence ().end ());
                 b != e; ++b)
            {
              o << ::std::endl << "PropertyConvergence: ";
              om.insert (o, *b);
            }
          }

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, PhysiologyEngineDynamicStabilizationCriteriaData >
        _xsd_PhysiologyEngineDynamicStabilizationCriteriaData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const PhysiologyEngineDynamicStabilizationCriteriaPropertyData& i)
        {
          o << ::std::endl << "Name: " << i.Name ();
          o << ::std::endl << "PercentDifference: " << i.PercentDifference ();
          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, PhysiologyEngineDynamicStabilizationCriteriaPropertyData >
        _xsd_PhysiologyEngineDynamicStabilizationCriteriaPropertyData_std_ostream_init;
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData >
        PhysiologyEngineTimedStabilization (const ::std::string& u,
                                            ::xml_schema::flags f,
                                            const ::xml_schema::properties& p)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::xml_schema::flags::dont_initialize) == 0,
            (f & ::xml_schema::flags::keep_dom) == 0);

          ::xsd::cxx::tree::error_handler< char > h;

          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::xsd::cxx::xml::dom::parse< char > (
              u, h, p, f));

          h.throw_if_failed< ::xsd::cxx::tree::parsing< char > > ();

          return ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData > (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilization (
              std::move (d), f | ::xml_schema::flags::own_dom, p));
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData >
        PhysiologyEngineTimedStabilization (const ::std::string& u,
                                            ::xml_schema::error_handler& h,
                                            ::xml_schema::flags f,
                                            const ::xml_schema::properties& p)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::xml_schema::flags::dont_initialize) == 0,
            (f & ::xml_schema::flags::keep_dom) == 0);

          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::xsd::cxx::xml::dom::parse< char > (
              u, h, p, f));

          if (!d.get ())
            throw ::xsd::cxx::tree::parsing< char > ();

          return ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData > (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilization (
              std::move (d), f | ::xml_schema::flags::own_dom, p));
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData >
        PhysiologyEngineTimedStabilization (const ::std::string& u,
                                            ::xercesc::DOMErrorHandler& h,
                                            ::xml_schema::flags f,
                                            const ::xml_schema::properties& p)
        {
          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::xsd::cxx::xml::dom::parse< char > (
              u, h, p, f));

          if (!d.get ())
            throw ::xsd::cxx::tree::parsing< char > ();

          return ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData > (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilization (
              std::move (d), f | ::xml_schema::flags::own_dom, p));
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData >
        PhysiologyEngineTimedStabilization (::std::istream& is,
                                            ::xml_schema::flags f,
                                            const ::xml_schema::properties& p)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::xml_schema::flags::dont_initialize) == 0,
            (f & ::xml_schema::flags::keep_dom) == 0);

          ::xsd::cxx::xml::sax::std_input_source isrc (is);
          return ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilization (isrc, f, p);
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData >
        PhysiologyEngineTimedStabilization (::std::istream& is,
                                            ::xml_schema::error_handler& h,
                                            ::xml_schema::flags f,
                                            const ::xml_schema::properties& p)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::xml_schema::flags::dont_initialize) == 0,
            (f & ::xml_schema::flags::keep_dom) == 0);

          ::xsd::cxx::xml::sax::std_input_source isrc (is);
          return ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilization (isrc, h, f, p);
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData >
        PhysiologyEngineTimedStabilization (::std::istream& is,
                                            ::xercesc::DOMErrorHandler& h,
                                            ::xml_schema::flags f,
                                            const ::xml_schema::properties& p)
        {
          ::xsd::cxx::xml::sax::std_input_source isrc (is);
          return ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilization (isrc, h, f, p);
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData >
        PhysiologyEngineTimedStabilization (::std::istream& is,
                                            const ::std::string& sid,
                                            ::xml_schema::flags f,
                                            const ::xml_schema::properties& p)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::xml_schema::flags::dont_initialize) == 0,
            (f & ::xml_schema::flags::keep_dom) == 0);

          ::xsd::cxx::xml::sax::std_input_source isrc (is, sid);
          return ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilization (isrc, f, p);
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData >
        PhysiologyEngineTimedStabilization (::std::istream& is,
                                            const ::std::string& sid,
                                            ::xml_schema::error_handler& h,
                                            ::xml_schema::flags f,
                                            const ::xml_schema::properties& p)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::xml_schema::flags::dont_initialize) == 0,
            (f & ::xml_schema::flags::keep_dom) == 0);

          ::xsd::cxx::xml::sax::std_input_source isrc (is, sid);
          return ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilization (isrc, h, f, p);
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData >
        PhysiologyEngineTimedStabilization (::std::istream& is,
                                            const ::std::string& sid,
                                            ::xercesc::DOMErrorHandler& h,
                                            ::xml_schema::flags f,
                                            const ::xml_schema::properties& p)
        {
          ::xsd::cxx::xml::sax::std_input_source isrc (is, sid);
          return ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilization (isrc, h, f, p);
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData >
        PhysiologyEngineTimedStabilization (::xercesc::InputSource& i,
                                            ::xml_schema::flags f,
                                            const ::xml_schema::properties& p)
        {
          ::xsd::cxx::tree::error_handler< char > h;

          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::xsd::cxx::xml::dom::parse< char > (
              i, h, p, f));

          h.throw_if_failed< ::xsd::cxx::tree::parsing< char > > ();

          return ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData > (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilization (
              std::move (d), f | ::xml_schema::flags::own_dom, p));
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData >
        PhysiologyEngineTimedStabilization (::xercesc::InputSource& i,
                                            ::xml_schema::error_handler& h,
                                            ::xml_schema::flags f,
                                            const ::xml_schema::properties& p)
        {
          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::xsd::cxx::xml::dom::parse< char > (
              i, h, p, f));

          if (!d.get ())
            throw ::xsd::cxx::tree::parsing< char > ();

          return ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData > (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilization (
              std::move (d), f | ::xml_schema::flags::own_dom, p));
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData >
        PhysiologyEngineTimedStabilization (::xercesc::InputSource& i,
                                            ::xercesc::DOMErrorHandler& h,
                                            ::xml_schema::flags f,
                                            const ::xml_schema::properties& p)
        {
          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::xsd::cxx::xml::dom::parse< char > (
              i, h, p, f));

          if (!d.get ())
            throw ::xsd::cxx::tree::parsing< char > ();

          return ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData > (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilization (
              std::move (d), f | ::xml_schema::flags::own_dom, p));
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData >
        PhysiologyEngineTimedStabilization (const ::xercesc::DOMDocument& doc,
                                            ::xml_schema::flags f,
                                            const ::xml_schema::properties& p)
        {
          if (f & ::xml_schema::flags::keep_dom)
          {
            ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
              static_cast< ::xercesc::DOMDocument* > (doc.cloneNode (true)));

            return ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData > (
              ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilization (
                std::move (d), f | ::xml_schema::flags::own_dom, p));
          }

          const ::xercesc::DOMElement& e (*doc.getDocumentElement ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (e));

          ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
            ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
              "PhysiologyEngineTimedStabilization",
              "uri:/mil/tatrc/physiology/datamodel",
              &::xsd::cxx::tree::factory_impl< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData >,
              true, true, e, n, f, 0));

          if (tmp.get () != 0)
          {
            ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData > r (
              dynamic_cast< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData* > (tmp.get ()));

            if (r.get ())
              tmp.release ();
            else
              throw ::xsd::cxx::tree::not_derived< char > ();

            return r;
          }

          throw ::xsd::cxx::tree::unexpected_element < char > (
            n.name (),
            n.namespace_ (),
            "PhysiologyEngineTimedStabilization",
            "uri:/mil/tatrc/physiology/datamodel");
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData >
        PhysiologyEngineTimedStabilization (::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d,
                                            ::xml_schema::flags f,
                                            const ::xml_schema::properties&)
        {
          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > c (
            ((f & ::xml_schema::flags::keep_dom) &&
             !(f & ::xml_schema::flags::own_dom))
            ? static_cast< ::xercesc::DOMDocument* > (d->cloneNode (true))
            : 0);

          ::xercesc::DOMDocument& doc (c.get () ? *c : *d);
          const ::xercesc::DOMElement& e (*doc.getDocumentElement ());

          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (e));

          if (f & ::xml_schema::flags::keep_dom)
            doc.setUserData (::xml_schema::dom::tree_node_key,
                             (c.get () ? &c : &d),
                             0);

          ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
            ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
              "PhysiologyEngineTimedStabilization",
              "uri:/mil/tatrc/physiology/datamodel",
              &::xsd::cxx::tree::factory_impl< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData >,
              true, true, e, n, f, 0));

          if (tmp.get () != 0)
          {

            ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData > r (
              dynamic_cast< ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData* > (tmp.get ()));

            if (r.get ())
              tmp.release ();
            else
              throw ::xsd::cxx::tree::not_derived< char > ();

            return r;
          }

          throw ::xsd::cxx::tree::unexpected_element < char > (
            n.name (),
            n.namespace_ (),
            "PhysiologyEngineTimedStabilization",
            "uri:/mil/tatrc/physiology/datamodel");
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData >
        PhysiologyEngineDynamicStabilization (const ::std::string& u,
                                              ::xml_schema::flags f,
                                              const ::xml_schema::properties& p)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::xml_schema::flags::dont_initialize) == 0,
            (f & ::xml_schema::flags::keep_dom) == 0);

          ::xsd::cxx::tree::error_handler< char > h;

          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::xsd::cxx::xml::dom::parse< char > (
              u, h, p, f));

          h.throw_if_failed< ::xsd::cxx::tree::parsing< char > > ();

          return ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData > (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilization (
              std::move (d), f | ::xml_schema::flags::own_dom, p));
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData >
        PhysiologyEngineDynamicStabilization (const ::std::string& u,
                                              ::xml_schema::error_handler& h,
                                              ::xml_schema::flags f,
                                              const ::xml_schema::properties& p)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::xml_schema::flags::dont_initialize) == 0,
            (f & ::xml_schema::flags::keep_dom) == 0);

          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::xsd::cxx::xml::dom::parse< char > (
              u, h, p, f));

          if (!d.get ())
            throw ::xsd::cxx::tree::parsing< char > ();

          return ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData > (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilization (
              std::move (d), f | ::xml_schema::flags::own_dom, p));
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData >
        PhysiologyEngineDynamicStabilization (const ::std::string& u,
                                              ::xercesc::DOMErrorHandler& h,
                                              ::xml_schema::flags f,
                                              const ::xml_schema::properties& p)
        {
          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::xsd::cxx::xml::dom::parse< char > (
              u, h, p, f));

          if (!d.get ())
            throw ::xsd::cxx::tree::parsing< char > ();

          return ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData > (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilization (
              std::move (d), f | ::xml_schema::flags::own_dom, p));
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData >
        PhysiologyEngineDynamicStabilization (::std::istream& is,
                                              ::xml_schema::flags f,
                                              const ::xml_schema::properties& p)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::xml_schema::flags::dont_initialize) == 0,
            (f & ::xml_schema::flags::keep_dom) == 0);

          ::xsd::cxx::xml::sax::std_input_source isrc (is);
          return ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilization (isrc, f, p);
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData >
        PhysiologyEngineDynamicStabilization (::std::istream& is,
                                              ::xml_schema::error_handler& h,
                                              ::xml_schema::flags f,
                                              const ::xml_schema::properties& p)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::xml_schema::flags::dont_initialize) == 0,
            (f & ::xml_schema::flags::keep_dom) == 0);

          ::xsd::cxx::xml::sax::std_input_source isrc (is);
          return ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilization (isrc, h, f, p);
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData >
        PhysiologyEngineDynamicStabilization (::std::istream& is,
                                              ::xercesc::DOMErrorHandler& h,
                                              ::xml_schema::flags f,
                                              const ::xml_schema::properties& p)
        {
          ::xsd::cxx::xml::sax::std_input_source isrc (is);
          return ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilization (isrc, h, f, p);
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData >
        PhysiologyEngineDynamicStabilization (::std::istream& is,
                                              const ::std::string& sid,
                                              ::xml_schema::flags f,
                                              const ::xml_schema::properties& p)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::xml_schema::flags::dont_initialize) == 0,
            (f & ::xml_schema::flags::keep_dom) == 0);

          ::xsd::cxx::xml::sax::std_input_source isrc (is, sid);
          return ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilization (isrc, f, p);
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData >
        PhysiologyEngineDynamicStabilization (::std::istream& is,
                                              const ::std::string& sid,
                                              ::xml_schema::error_handler& h,
                                              ::xml_schema::flags f,
                                              const ::xml_schema::properties& p)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::xml_schema::flags::dont_initialize) == 0,
            (f & ::xml_schema::flags::keep_dom) == 0);

          ::xsd::cxx::xml::sax::std_input_source isrc (is, sid);
          return ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilization (isrc, h, f, p);
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData >
        PhysiologyEngineDynamicStabilization (::std::istream& is,
                                              const ::std::string& sid,
                                              ::xercesc::DOMErrorHandler& h,
                                              ::xml_schema::flags f,
                                              const ::xml_schema::properties& p)
        {
          ::xsd::cxx::xml::sax::std_input_source isrc (is, sid);
          return ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilization (isrc, h, f, p);
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData >
        PhysiologyEngineDynamicStabilization (::xercesc::InputSource& i,
                                              ::xml_schema::flags f,
                                              const ::xml_schema::properties& p)
        {
          ::xsd::cxx::tree::error_handler< char > h;

          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::xsd::cxx::xml::dom::parse< char > (
              i, h, p, f));

          h.throw_if_failed< ::xsd::cxx::tree::parsing< char > > ();

          return ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData > (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilization (
              std::move (d), f | ::xml_schema::flags::own_dom, p));
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData >
        PhysiologyEngineDynamicStabilization (::xercesc::InputSource& i,
                                              ::xml_schema::error_handler& h,
                                              ::xml_schema::flags f,
                                              const ::xml_schema::properties& p)
        {
          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::xsd::cxx::xml::dom::parse< char > (
              i, h, p, f));

          if (!d.get ())
            throw ::xsd::cxx::tree::parsing< char > ();

          return ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData > (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilization (
              std::move (d), f | ::xml_schema::flags::own_dom, p));
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData >
        PhysiologyEngineDynamicStabilization (::xercesc::InputSource& i,
                                              ::xercesc::DOMErrorHandler& h,
                                              ::xml_schema::flags f,
                                              const ::xml_schema::properties& p)
        {
          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::xsd::cxx::xml::dom::parse< char > (
              i, h, p, f));

          if (!d.get ())
            throw ::xsd::cxx::tree::parsing< char > ();

          return ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData > (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilization (
              std::move (d), f | ::xml_schema::flags::own_dom, p));
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData >
        PhysiologyEngineDynamicStabilization (const ::xercesc::DOMDocument& doc,
                                              ::xml_schema::flags f,
                                              const ::xml_schema::properties& p)
        {
          if (f & ::xml_schema::flags::keep_dom)
          {
            ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
              static_cast< ::xercesc::DOMDocument* > (doc.cloneNode (true)));

            return ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData > (
              ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilization (
                std::move (d), f | ::xml_schema::flags::own_dom, p));
          }

          const ::xercesc::DOMElement& e (*doc.getDocumentElement ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (e));

          ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
            ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
              "PhysiologyEngineDynamicStabilization",
              "uri:/mil/tatrc/physiology/datamodel",
              &::xsd::cxx::tree::factory_impl< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData >,
              true, true, e, n, f, 0));

          if (tmp.get () != 0)
          {
            ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData > r (
              dynamic_cast< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData* > (tmp.get ()));

            if (r.get ())
              tmp.release ();
            else
              throw ::xsd::cxx::tree::not_derived< char > ();

            return r;
          }

          throw ::xsd::cxx::tree::unexpected_element < char > (
            n.name (),
            n.namespace_ (),
            "PhysiologyEngineDynamicStabilization",
            "uri:/mil/tatrc/physiology/datamodel");
        }

        ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData >
        PhysiologyEngineDynamicStabilization (::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d,
                                              ::xml_schema::flags f,
                                              const ::xml_schema::properties&)
        {
          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > c (
            ((f & ::xml_schema::flags::keep_dom) &&
             !(f & ::xml_schema::flags::own_dom))
            ? static_cast< ::xercesc::DOMDocument* > (d->cloneNode (true))
            : 0);

          ::xercesc::DOMDocument& doc (c.get () ? *c : *d);
          const ::xercesc::DOMElement& e (*doc.getDocumentElement ());

          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (e));

          if (f & ::xml_schema::flags::keep_dom)
            doc.setUserData (::xml_schema::dom::tree_node_key,
                             (c.get () ? &c : &d),
                             0);

          ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
            ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
              "PhysiologyEngineDynamicStabilization",
              "uri:/mil/tatrc/physiology/datamodel",
              &::xsd::cxx::tree::factory_impl< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData >,
              true, true, e, n, f, 0));

          if (tmp.get () != 0)
          {

            ::std::unique_ptr< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData > r (
              dynamic_cast< ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData* > (tmp.get ()));

            if (r.get ())
              tmp.release ();
            else
              throw ::xsd::cxx::tree::not_derived< char > ();

            return r;
          }

          throw ::xsd::cxx::tree::unexpected_element < char > (
            n.name (),
            n.namespace_ (),
            "PhysiologyEngineDynamicStabilization",
            "uri:/mil/tatrc/physiology/datamodel");
        }
      }
    }
  }
}

#include <ostream>
#include <xsd/cxx/tree/error-handler.hxx>
#include <xsd/cxx/xml/dom/serialization-source.hxx>

#include <xsd/cxx/tree/type-serializer-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_serializer_plate< 0, char >
  type_serializer_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        void
        operator<< (::xercesc::DOMElement& e, const PhysiologyEngineConfigurationData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ObjectData& > (i);

          // TimeStep
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.TimeStep ())
            {
              const PhysiologyEngineConfigurationData::TimeStep_type& x (*i.TimeStep ());
              if (typeid (PhysiologyEngineConfigurationData::TimeStep_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "TimeStep",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "TimeStep",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // WritePatientBaselineFile
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.WritePatientBaselineFile ())
            {
              const PhysiologyEngineConfigurationData::WritePatientBaselineFile_type& x (*i.WritePatientBaselineFile ());
              if (typeid (PhysiologyEngineConfigurationData::WritePatientBaselineFile_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "WritePatientBaselineFile",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "WritePatientBaselineFile",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // ElectroCardioGramInterpolator
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.ElectroCardioGramInterpolator ())
            {
              const PhysiologyEngineConfigurationData::ElectroCardioGramInterpolator_type& x (*i.ElectroCardioGramInterpolator ());
              if (typeid (PhysiologyEngineConfigurationData::ElectroCardioGramInterpolator_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "ElectroCardioGramInterpolator",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "ElectroCardioGramInterpolator",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // ElectroCardioGramInterpolatorFile
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.ElectroCardioGramInterpolatorFile ())
            {
              const PhysiologyEngineConfigurationData::ElectroCardioGramInterpolatorFile_type& x (*i.ElectroCardioGramInterpolatorFile ());
              if (typeid (PhysiologyEngineConfigurationData::ElectroCardioGramInterpolatorFile_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "ElectroCardioGramInterpolatorFile",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "ElectroCardioGramInterpolatorFile",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // StabilizationCriteria
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.StabilizationCriteria ())
            {
              const PhysiologyEngineConfigurationData::StabilizationCriteria_type& x (*i.StabilizationCriteria ());
              if (typeid (PhysiologyEngineConfigurationData::StabilizationCriteria_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "StabilizationCriteria",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "StabilizationCriteria",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // StabilizationCriteriaFile
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.StabilizationCriteriaFile ())
            {
              const PhysiologyEngineConfigurationData::StabilizationCriteriaFile_type& x (*i.StabilizationCriteriaFile ());
              if (typeid (PhysiologyEngineConfigurationData::StabilizationCriteriaFile_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "StabilizationCriteriaFile",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "StabilizationCriteriaFile",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, PhysiologyEngineConfigurationData >
        _xsd_PhysiologyEngineConfigurationData_type_serializer_init (
          "PhysiologyEngineConfigurationData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const PhysiologyEngineStabilizationData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ObjectData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, PhysiologyEngineStabilizationData >
        _xsd_PhysiologyEngineStabilizationData_type_serializer_init (
          "PhysiologyEngineStabilizationData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const PhysiologyEngineConditionStabilizationData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ObjectData& > (i);

          // Name
          //
          {
            ::xercesc::DOMAttr& a (
              ::xsd::cxx::xml::dom::create_attribute (
                "Name",
                e));

            a << i.Name ();
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, PhysiologyEngineConditionStabilizationData >
        _xsd_PhysiologyEngineConditionStabilizationData_type_serializer_init (
          "PhysiologyEngineConditionStabilizationData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const PhysiologyEngineTimedStabilizationData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::PhysiologyEngineStabilizationData& > (i);

          // RestingStabilizationTime
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const PhysiologyEngineTimedStabilizationData::RestingStabilizationTime_type& x (i.RestingStabilizationTime ());
            if (typeid (PhysiologyEngineTimedStabilizationData::RestingStabilizationTime_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "RestingStabilizationTime",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "RestingStabilizationTime",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // FeedbackStabilizationTime
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.FeedbackStabilizationTime ())
            {
              const PhysiologyEngineTimedStabilizationData::FeedbackStabilizationTime_type& x (*i.FeedbackStabilizationTime ());
              if (typeid (PhysiologyEngineTimedStabilizationData::FeedbackStabilizationTime_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "FeedbackStabilizationTime",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "FeedbackStabilizationTime",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // ConditionStabilization
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            for (PhysiologyEngineTimedStabilizationData::ConditionStabilization_const_iterator
                 b (i.ConditionStabilization ().begin ()), n (i.ConditionStabilization ().end ());
                 b != n; ++b)
            {
              if (typeid (PhysiologyEngineTimedStabilizationData::ConditionStabilization_type) == typeid (*b))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "ConditionStabilization",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << *b;
              }
              else
                tsm.serialize (
                  "ConditionStabilization",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, *b);
            }
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, PhysiologyEngineTimedStabilizationData >
        _xsd_PhysiologyEngineTimedStabilizationData_type_serializer_init (
          "PhysiologyEngineTimedStabilizationData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const PhysiologyEngineTimedConditionStabilizationData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::PhysiologyEngineConditionStabilizationData& > (i);

          // Time
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const PhysiologyEngineTimedConditionStabilizationData::Time_type& x (i.Time ());
            if (typeid (PhysiologyEngineTimedConditionStabilizationData::Time_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "Time",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "Time",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, PhysiologyEngineTimedConditionStabilizationData >
        _xsd_PhysiologyEngineTimedConditionStabilizationData_type_serializer_init (
          "PhysiologyEngineTimedConditionStabilizationData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        PhysiologyEngineTimedStabilization (::std::ostream& o,
                                            const ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData& s,
                                            const ::xml_schema::namespace_infomap& m,
                                            const ::std::string& e,
                                            ::xml_schema::flags f)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::xml_schema::flags::dont_initialize) == 0);

          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilization (s, m, f));

          ::xsd::cxx::tree::error_handler< char > h;

          ::xsd::cxx::xml::dom::ostream_format_target t (o);
          if (!::xsd::cxx::xml::dom::serialize (t, *d, e, h, f))
          {
            h.throw_if_failed< ::xsd::cxx::tree::serialization< char > > ();
          }
        }

        void
        PhysiologyEngineTimedStabilization (::std::ostream& o,
                                            const ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData& s,
                                            ::xml_schema::error_handler& h,
                                            const ::xml_schema::namespace_infomap& m,
                                            const ::std::string& e,
                                            ::xml_schema::flags f)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::xml_schema::flags::dont_initialize) == 0);

          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilization (s, m, f));
          ::xsd::cxx::xml::dom::ostream_format_target t (o);
          if (!::xsd::cxx::xml::dom::serialize (t, *d, e, h, f))
          {
            throw ::xsd::cxx::tree::serialization< char > ();
          }
        }

        void
        PhysiologyEngineTimedStabilization (::std::ostream& o,
                                            const ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData& s,
                                            ::xercesc::DOMErrorHandler& h,
                                            const ::xml_schema::namespace_infomap& m,
                                            const ::std::string& e,
                                            ::xml_schema::flags f)
        {
          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilization (s, m, f));
          ::xsd::cxx::xml::dom::ostream_format_target t (o);
          if (!::xsd::cxx::xml::dom::serialize (t, *d, e, h, f))
          {
            throw ::xsd::cxx::tree::serialization< char > ();
          }
        }

        void
        PhysiologyEngineTimedStabilization (::xercesc::XMLFormatTarget& t,
                                            const ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData& s,
                                            const ::xml_schema::namespace_infomap& m,
                                            const ::std::string& e,
                                            ::xml_schema::flags f)
        {
          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilization (s, m, f));

          ::xsd::cxx::tree::error_handler< char > h;

          if (!::xsd::cxx::xml::dom::serialize (t, *d, e, h, f))
          {
            h.throw_if_failed< ::xsd::cxx::tree::serialization< char > > ();
          }
        }

        void
        PhysiologyEngineTimedStabilization (::xercesc::XMLFormatTarget& t,
                                            const ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData& s,
                                            ::xml_schema::error_handler& h,
                                            const ::xml_schema::namespace_infomap& m,
                                            const ::std::string& e,
                                            ::xml_schema::flags f)
        {
          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilization (s, m, f));
          if (!::xsd::cxx::xml::dom::serialize (t, *d, e, h, f))
          {
            throw ::xsd::cxx::tree::serialization< char > ();
          }
        }

        void
        PhysiologyEngineTimedStabilization (::xercesc::XMLFormatTarget& t,
                                            const ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData& s,
                                            ::xercesc::DOMErrorHandler& h,
                                            const ::xml_schema::namespace_infomap& m,
                                            const ::std::string& e,
                                            ::xml_schema::flags f)
        {
          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilization (s, m, f));
          if (!::xsd::cxx::xml::dom::serialize (t, *d, e, h, f))
          {
            throw ::xsd::cxx::tree::serialization< char > ();
          }
        }

        void
        PhysiologyEngineTimedStabilization (::xercesc::DOMDocument& d,
                                            const ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData& s,
                                            ::xml_schema::flags)
        {
          ::xercesc::DOMElement& e (*d.getDocumentElement ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (e));

          if (typeid (::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData) == typeid (s))
          {
            if (n.name () == "PhysiologyEngineTimedStabilization" &&
                n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              e << s;
            }
            else
            {
              throw ::xsd::cxx::tree::unexpected_element < char > (
                n.name (),
                n.namespace_ (),
                "PhysiologyEngineTimedStabilization",
                "uri:/mil/tatrc/physiology/datamodel");
            }
          }
          else
          {
            ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ().serialize (
              "PhysiologyEngineTimedStabilization",
              "uri:/mil/tatrc/physiology/datamodel",
              e, n, s);
          }
        }

        ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument >
        PhysiologyEngineTimedStabilization (const ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData& s,
                                            const ::xml_schema::namespace_infomap& m,
                                            ::xml_schema::flags f)
        {
          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d;

          if (typeid (::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilizationData) == typeid (s))
          {
            d = ::xsd::cxx::xml::dom::serialize< char > (
              "PhysiologyEngineTimedStabilization",
              "uri:/mil/tatrc/physiology/datamodel",
              m, f);
          }
          else
          {
            d = ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ().serialize (
              "PhysiologyEngineTimedStabilization",
              "uri:/mil/tatrc/physiology/datamodel",
              m, s, f);
          }

          ::mil::tatrc::physiology::datamodel::PhysiologyEngineTimedStabilization (*d, s, f);
          return d;
        }

        void
        operator<< (::xercesc::DOMElement& e, const PhysiologyEngineDynamicStabilizationData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::PhysiologyEngineStabilizationData& > (i);

          // RestingStabilizationCriteria
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const PhysiologyEngineDynamicStabilizationData::RestingStabilizationCriteria_type& x (i.RestingStabilizationCriteria ());
            if (typeid (PhysiologyEngineDynamicStabilizationData::RestingStabilizationCriteria_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "RestingStabilizationCriteria",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "RestingStabilizationCriteria",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // FeedbackStabilizationCriteria
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.FeedbackStabilizationCriteria ())
            {
              const PhysiologyEngineDynamicStabilizationData::FeedbackStabilizationCriteria_type& x (*i.FeedbackStabilizationCriteria ());
              if (typeid (PhysiologyEngineDynamicStabilizationData::FeedbackStabilizationCriteria_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "FeedbackStabilizationCriteria",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "FeedbackStabilizationCriteria",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // ConditionStabilization
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            for (PhysiologyEngineDynamicStabilizationData::ConditionStabilization_const_iterator
                 b (i.ConditionStabilization ().begin ()), n (i.ConditionStabilization ().end ());
                 b != n; ++b)
            {
              if (typeid (PhysiologyEngineDynamicStabilizationData::ConditionStabilization_type) == typeid (*b))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "ConditionStabilization",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << *b;
              }
              else
                tsm.serialize (
                  "ConditionStabilization",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, *b);
            }
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, PhysiologyEngineDynamicStabilizationData >
        _xsd_PhysiologyEngineDynamicStabilizationData_type_serializer_init (
          "PhysiologyEngineDynamicStabilizationData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const PhysiologyEngineDynamicConditionStabilizationData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::PhysiologyEngineConditionStabilizationData& > (i);

          // Criteria
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const PhysiologyEngineDynamicConditionStabilizationData::Criteria_type& x (i.Criteria ());
            if (typeid (PhysiologyEngineDynamicConditionStabilizationData::Criteria_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "Criteria",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "Criteria",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, PhysiologyEngineDynamicConditionStabilizationData >
        _xsd_PhysiologyEngineDynamicConditionStabilizationData_type_serializer_init (
          "PhysiologyEngineDynamicConditionStabilizationData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const PhysiologyEngineDynamicStabilizationCriteriaData& i)
        {
          e << static_cast< const ::xml_schema::type& > (i);

          // ConvergenceTime
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const PhysiologyEngineDynamicStabilizationCriteriaData::ConvergenceTime_type& x (i.ConvergenceTime ());
            if (typeid (PhysiologyEngineDynamicStabilizationCriteriaData::ConvergenceTime_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "ConvergenceTime",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "ConvergenceTime",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // MinimumReactionTime
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const PhysiologyEngineDynamicStabilizationCriteriaData::MinimumReactionTime_type& x (i.MinimumReactionTime ());
            if (typeid (PhysiologyEngineDynamicStabilizationCriteriaData::MinimumReactionTime_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "MinimumReactionTime",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "MinimumReactionTime",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // MaximumAllowedStabilizationTime
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const PhysiologyEngineDynamicStabilizationCriteriaData::MaximumAllowedStabilizationTime_type& x (i.MaximumAllowedStabilizationTime ());
            if (typeid (PhysiologyEngineDynamicStabilizationCriteriaData::MaximumAllowedStabilizationTime_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "MaximumAllowedStabilizationTime",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "MaximumAllowedStabilizationTime",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // PropertyConvergence
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            for (PhysiologyEngineDynamicStabilizationCriteriaData::PropertyConvergence_const_iterator
                 b (i.PropertyConvergence ().begin ()), n (i.PropertyConvergence ().end ());
                 b != n; ++b)
            {
              if (typeid (PhysiologyEngineDynamicStabilizationCriteriaData::PropertyConvergence_type) == typeid (*b))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "PropertyConvergence",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << *b;
              }
              else
                tsm.serialize (
                  "PropertyConvergence",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, *b);
            }
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, PhysiologyEngineDynamicStabilizationCriteriaData >
        _xsd_PhysiologyEngineDynamicStabilizationCriteriaData_type_serializer_init (
          "PhysiologyEngineDynamicStabilizationCriteriaData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const PhysiologyEngineDynamicStabilizationCriteriaPropertyData& i)
        {
          e << static_cast< const ::xml_schema::type& > (i);

          // Name
          //
          {
            ::xercesc::DOMAttr& a (
              ::xsd::cxx::xml::dom::create_attribute (
                "Name",
                e));

            a << i.Name ();
          }

          // PercentDifference
          //
          {
            ::xercesc::DOMAttr& a (
              ::xsd::cxx::xml::dom::create_attribute (
                "PercentDifference",
                e));

            a << ::xml_schema::as_double(i.PercentDifference ());
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, PhysiologyEngineDynamicStabilizationCriteriaPropertyData >
        _xsd_PhysiologyEngineDynamicStabilizationCriteriaPropertyData_type_serializer_init (
          "PhysiologyEngineDynamicStabilizationCriteriaPropertyData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        PhysiologyEngineDynamicStabilization (::std::ostream& o,
                                              const ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData& s,
                                              const ::xml_schema::namespace_infomap& m,
                                              const ::std::string& e,
                                              ::xml_schema::flags f)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::xml_schema::flags::dont_initialize) == 0);

          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilization (s, m, f));

          ::xsd::cxx::tree::error_handler< char > h;

          ::xsd::cxx::xml::dom::ostream_format_target t (o);
          if (!::xsd::cxx::xml::dom::serialize (t, *d, e, h, f))
          {
            h.throw_if_failed< ::xsd::cxx::tree::serialization< char > > ();
          }
        }

        void
        PhysiologyEngineDynamicStabilization (::std::ostream& o,
                                              const ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData& s,
                                              ::xml_schema::error_handler& h,
                                              const ::xml_schema::namespace_infomap& m,
                                              const ::std::string& e,
                                              ::xml_schema::flags f)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::xml_schema::flags::dont_initialize) == 0);

          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilization (s, m, f));
          ::xsd::cxx::xml::dom::ostream_format_target t (o);
          if (!::xsd::cxx::xml::dom::serialize (t, *d, e, h, f))
          {
            throw ::xsd::cxx::tree::serialization< char > ();
          }
        }

        void
        PhysiologyEngineDynamicStabilization (::std::ostream& o,
                                              const ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData& s,
                                              ::xercesc::DOMErrorHandler& h,
                                              const ::xml_schema::namespace_infomap& m,
                                              const ::std::string& e,
                                              ::xml_schema::flags f)
        {
          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilization (s, m, f));
          ::xsd::cxx::xml::dom::ostream_format_target t (o);
          if (!::xsd::cxx::xml::dom::serialize (t, *d, e, h, f))
          {
            throw ::xsd::cxx::tree::serialization< char > ();
          }
        }

        void
        PhysiologyEngineDynamicStabilization (::xercesc::XMLFormatTarget& t,
                                              const ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData& s,
                                              const ::xml_schema::namespace_infomap& m,
                                              const ::std::string& e,
                                              ::xml_schema::flags f)
        {
          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilization (s, m, f));

          ::xsd::cxx::tree::error_handler< char > h;

          if (!::xsd::cxx::xml::dom::serialize (t, *d, e, h, f))
          {
            h.throw_if_failed< ::xsd::cxx::tree::serialization< char > > ();
          }
        }

        void
        PhysiologyEngineDynamicStabilization (::xercesc::XMLFormatTarget& t,
                                              const ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData& s,
                                              ::xml_schema::error_handler& h,
                                              const ::xml_schema::namespace_infomap& m,
                                              const ::std::string& e,
                                              ::xml_schema::flags f)
        {
          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilization (s, m, f));
          if (!::xsd::cxx::xml::dom::serialize (t, *d, e, h, f))
          {
            throw ::xsd::cxx::tree::serialization< char > ();
          }
        }

        void
        PhysiologyEngineDynamicStabilization (::xercesc::XMLFormatTarget& t,
                                              const ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData& s,
                                              ::xercesc::DOMErrorHandler& h,
                                              const ::xml_schema::namespace_infomap& m,
                                              const ::std::string& e,
                                              ::xml_schema::flags f)
        {
          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d (
            ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilization (s, m, f));
          if (!::xsd::cxx::xml::dom::serialize (t, *d, e, h, f))
          {
            throw ::xsd::cxx::tree::serialization< char > ();
          }
        }

        void
        PhysiologyEngineDynamicStabilization (::xercesc::DOMDocument& d,
                                              const ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData& s,
                                              ::xml_schema::flags)
        {
          ::xercesc::DOMElement& e (*d.getDocumentElement ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (e));

          if (typeid (::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData) == typeid (s))
          {
            if (n.name () == "PhysiologyEngineDynamicStabilization" &&
                n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              e << s;
            }
            else
            {
              throw ::xsd::cxx::tree::unexpected_element < char > (
                n.name (),
                n.namespace_ (),
                "PhysiologyEngineDynamicStabilization",
                "uri:/mil/tatrc/physiology/datamodel");
            }
          }
          else
          {
            ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ().serialize (
              "PhysiologyEngineDynamicStabilization",
              "uri:/mil/tatrc/physiology/datamodel",
              e, n, s);
          }
        }

        ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument >
        PhysiologyEngineDynamicStabilization (const ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData& s,
                                              const ::xml_schema::namespace_infomap& m,
                                              ::xml_schema::flags f)
        {
          ::xml_schema::dom::unique_ptr< ::xercesc::DOMDocument > d;

          if (typeid (::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilizationData) == typeid (s))
          {
            d = ::xsd::cxx::xml::dom::serialize< char > (
              "PhysiologyEngineDynamicStabilization",
              "uri:/mil/tatrc/physiology/datamodel",
              m, f);
          }
          else
          {
            d = ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ().serialize (
              "PhysiologyEngineDynamicStabilization",
              "uri:/mil/tatrc/physiology/datamodel",
              m, s, f);
          }

          ::mil::tatrc::physiology::datamodel::PhysiologyEngineDynamicStabilization (*d, s, f);
          return d;
        }
      }
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

