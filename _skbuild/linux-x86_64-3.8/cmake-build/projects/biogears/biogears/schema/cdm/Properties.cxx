// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "Properties.hxx"

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // PropertyData
        // 


        // ObjectData
        // 

        const ObjectData::contentVersion_optional& ObjectData::
        contentVersion () const
        {
          return this->contentVersion_;
        }

        ObjectData::contentVersion_optional& ObjectData::
        contentVersion ()
        {
          return this->contentVersion_;
        }

        void ObjectData::
        contentVersion (const contentVersion_type& x)
        {
          this->contentVersion_.set (x);
        }

        void ObjectData::
        contentVersion (const contentVersion_optional& x)
        {
          this->contentVersion_ = x;
        }

        void ObjectData::
        contentVersion (::std::unique_ptr< contentVersion_type > x)
        {
          this->contentVersion_.set (std::move (x));
        }


        // enumDecimalFormat
        // 

        enumDecimalFormat::
        enumDecimalFormat ()
        : ::xml_schema::string ()
        {
        }

        enumDecimalFormat::
        enumDecimalFormat (value v)
        : ::xml_schema::string (_xsd_enumDecimalFormat_literals_[v])
        {
        }

        enumDecimalFormat::
        enumDecimalFormat (const char* v)
        : ::xml_schema::string (v)
        {
        }

        enumDecimalFormat::
        enumDecimalFormat (const ::std::string& v)
        : ::xml_schema::string (v)
        {
        }

        enumDecimalFormat::
        enumDecimalFormat (const ::xml_schema::string& v)
        : ::xml_schema::string (v)
        {
        }

        enumDecimalFormat::
        enumDecimalFormat (const enumDecimalFormat& v,
                           ::xml_schema::flags f,
                           ::xml_schema::container* c)
        : ::xml_schema::string (v, f, c)
        {
        }

        enumDecimalFormat& enumDecimalFormat::
        operator= (value v)
        {
          static_cast< ::xml_schema::string& > (*this) = 
          ::xml_schema::string (_xsd_enumDecimalFormat_literals_[v]);

          return *this;
        }


        // DecimalFormatData
        // 

        const DecimalFormatData::DecimalFormat_optional& DecimalFormatData::
        DecimalFormat () const
        {
          return this->DecimalFormat_;
        }

        DecimalFormatData::DecimalFormat_optional& DecimalFormatData::
        DecimalFormat ()
        {
          return this->DecimalFormat_;
        }

        void DecimalFormatData::
        DecimalFormat (const DecimalFormat_type& x)
        {
          this->DecimalFormat_.set (x);
        }

        void DecimalFormatData::
        DecimalFormat (const DecimalFormat_optional& x)
        {
          this->DecimalFormat_ = x;
        }

        void DecimalFormatData::
        DecimalFormat (::std::unique_ptr< DecimalFormat_type > x)
        {
          this->DecimalFormat_.set (std::move (x));
        }

        const DecimalFormatData::Precision_optional& DecimalFormatData::
        Precision () const
        {
          return this->Precision_;
        }

        DecimalFormatData::Precision_optional& DecimalFormatData::
        Precision ()
        {
          return this->Precision_;
        }

        void DecimalFormatData::
        Precision (const Precision_type& x)
        {
          this->Precision_.set (x);
        }

        void DecimalFormatData::
        Precision (const Precision_optional& x)
        {
          this->Precision_ = x;
        }


        // IntegerArray
        // 

        const IntegerArray::IntegerList_type& IntegerArray::
        IntegerList () const
        {
          return this->IntegerList_.get ();
        }

        IntegerArray::IntegerList_type& IntegerArray::
        IntegerList ()
        {
          return this->IntegerList_.get ();
        }

        void IntegerArray::
        IntegerList (const IntegerList_type& x)
        {
          this->IntegerList_.set (x);
        }

        void IntegerArray::
        IntegerList (::std::unique_ptr< IntegerList_type > x)
        {
          this->IntegerList_.set (std::move (x));
        }


        // DoubleArray
        // 

        const DoubleArray::DoubleList_type& DoubleArray::
        DoubleList () const
        {
          return this->DoubleList_.get ();
        }

        DoubleArray::DoubleList_type& DoubleArray::
        DoubleList ()
        {
          return this->DoubleList_.get ();
        }

        void DoubleArray::
        DoubleList (const DoubleList_type& x)
        {
          this->DoubleList_.set (x);
        }

        void DoubleArray::
        DoubleList (::std::unique_ptr< DoubleList_type > x)
        {
          this->DoubleList_.set (std::move (x));
        }


        // enumSide
        // 

        enumSide::
        enumSide ()
        : ::xml_schema::string ()
        {
        }

        enumSide::
        enumSide (value v)
        : ::xml_schema::string (_xsd_enumSide_literals_[v])
        {
        }

        enumSide::
        enumSide (const char* v)
        : ::xml_schema::string (v)
        {
        }

        enumSide::
        enumSide (const ::std::string& v)
        : ::xml_schema::string (v)
        {
        }

        enumSide::
        enumSide (const ::xml_schema::string& v)
        : ::xml_schema::string (v)
        {
        }

        enumSide::
        enumSide (const enumSide& v,
                  ::xml_schema::flags f,
                  ::xml_schema::container* c)
        : ::xml_schema::string (v, f, c)
        {
        }

        enumSide& enumSide::
        operator= (value v)
        {
          static_cast< ::xml_schema::string& > (*this) = 
          ::xml_schema::string (_xsd_enumSide_literals_[v]);

          return *this;
        }


        // enumOpenClosed
        // 

        enumOpenClosed::
        enumOpenClosed ()
        : ::xml_schema::string ()
        {
        }

        enumOpenClosed::
        enumOpenClosed (value v)
        : ::xml_schema::string (_xsd_enumOpenClosed_literals_[v])
        {
        }

        enumOpenClosed::
        enumOpenClosed (const char* v)
        : ::xml_schema::string (v)
        {
        }

        enumOpenClosed::
        enumOpenClosed (const ::std::string& v)
        : ::xml_schema::string (v)
        {
        }

        enumOpenClosed::
        enumOpenClosed (const ::xml_schema::string& v)
        : ::xml_schema::string (v)
        {
        }

        enumOpenClosed::
        enumOpenClosed (const enumOpenClosed& v,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
        : ::xml_schema::string (v, f, c)
        {
        }

        enumOpenClosed& enumOpenClosed::
        operator= (value v)
        {
          static_cast< ::xml_schema::string& > (*this) = 
          ::xml_schema::string (_xsd_enumOpenClosed_literals_[v]);

          return *this;
        }


        // enumOnOff
        // 

        enumOnOff::
        enumOnOff ()
        : ::xml_schema::string ()
        {
        }

        enumOnOff::
        enumOnOff (value v)
        : ::xml_schema::string (_xsd_enumOnOff_literals_[v])
        {
        }

        enumOnOff::
        enumOnOff (const char* v)
        : ::xml_schema::string (v)
        {
        }

        enumOnOff::
        enumOnOff (const ::std::string& v)
        : ::xml_schema::string (v)
        {
        }

        enumOnOff::
        enumOnOff (const ::xml_schema::string& v)
        : ::xml_schema::string (v)
        {
        }

        enumOnOff::
        enumOnOff (const enumOnOff& v,
                   ::xml_schema::flags f,
                   ::xml_schema::container* c)
        : ::xml_schema::string (v, f, c)
        {
        }

        enumOnOff& enumOnOff::
        operator= (value v)
        {
          static_cast< ::xml_schema::string& > (*this) = 
          ::xml_schema::string (_xsd_enumOnOff_literals_[v]);

          return *this;
        }


        // enumErrorType
        // 

        enumErrorType::
        enumErrorType ()
        : ::xml_schema::string ()
        {
        }

        enumErrorType::
        enumErrorType (value v)
        : ::xml_schema::string (_xsd_enumErrorType_literals_[v])
        {
        }

        enumErrorType::
        enumErrorType (const char* v)
        : ::xml_schema::string (v)
        {
        }

        enumErrorType::
        enumErrorType (const ::std::string& v)
        : ::xml_schema::string (v)
        {
        }

        enumErrorType::
        enumErrorType (const ::xml_schema::string& v)
        : ::xml_schema::string (v)
        {
        }

        enumErrorType::
        enumErrorType (const enumErrorType& v,
                       ::xml_schema::flags f,
                       ::xml_schema::container* c)
        : ::xml_schema::string (v, f, c)
        {
        }

        enumErrorType& enumErrorType::
        operator= (value v)
        {
          static_cast< ::xml_schema::string& > (*this) = 
          ::xml_schema::string (_xsd_enumErrorType_literals_[v]);

          return *this;
        }


        // ErrorData
        // 

        const ErrorData::value_type& ErrorData::
        value () const
        {
          return this->value_.get ();
        }

        ErrorData::value_type& ErrorData::
        value ()
        {
          return this->value_.get ();
        }

        void ErrorData::
        value (const value_type& x)
        {
          this->value_.set (x);
        }

        const ErrorData::type_type& ErrorData::
        type () const
        {
          return this->type_.get ();
        }

        ErrorData::type_type& ErrorData::
        type ()
        {
          return this->type_.get ();
        }

        void ErrorData::
        type (const type_type& x)
        {
          this->type_.set (x);
        }

        void ErrorData::
        type (::std::unique_ptr< type_type > x)
        {
          this->type_.set (std::move (x));
        }


        // ErrorList
        // 

        const ErrorList::Value_type& ErrorList::
        Value () const
        {
          return this->Value_.get ();
        }

        ErrorList::Value_type& ErrorList::
        Value ()
        {
          return this->Value_.get ();
        }

        void ErrorList::
        Value (const Value_type& x)
        {
          this->Value_.set (x);
        }

        void ErrorList::
        Value (::std::unique_ptr< Value_type > x)
        {
          this->Value_.set (std::move (x));
        }

        const ErrorList::type_type& ErrorList::
        type () const
        {
          return this->type_.get ();
        }

        ErrorList::type_type& ErrorList::
        type ()
        {
          return this->type_.get ();
        }

        void ErrorList::
        type (const type_type& x)
        {
          this->type_.set (x);
        }

        void ErrorList::
        type (::std::unique_ptr< type_type > x)
        {
          this->type_.set (std::move (x));
        }


        // RunningAverageData
        // 

        const RunningAverageData::sum_type& RunningAverageData::
        sum () const
        {
          return this->sum_.get ();
        }

        RunningAverageData::sum_type& RunningAverageData::
        sum ()
        {
          return this->sum_.get ();
        }

        void RunningAverageData::
        sum (const sum_type& x)
        {
          this->sum_.set (x);
        }

        const RunningAverageData::numSamples_type& RunningAverageData::
        numSamples () const
        {
          return this->numSamples_.get ();
        }

        RunningAverageData::numSamples_type& RunningAverageData::
        numSamples ()
        {
          return this->numSamples_.get ();
        }

        void RunningAverageData::
        numSamples (const numSamples_type& x)
        {
          this->numSamples_.set (x);
        }


        // ScalarData
        // 

        const ScalarData::value_type& ScalarData::
        value () const
        {
          return this->value_.get ();
        }

        ScalarData::value_type& ScalarData::
        value ()
        {
          return this->value_.get ();
        }

        void ScalarData::
        value (const value_type& x)
        {
          this->value_.set (x);
        }

        const ScalarData::unit_optional& ScalarData::
        unit () const
        {
          return this->unit_;
        }

        ScalarData::unit_optional& ScalarData::
        unit ()
        {
          return this->unit_;
        }

        void ScalarData::
        unit (const unit_type& x)
        {
          this->unit_.set (x);
        }

        void ScalarData::
        unit (const unit_optional& x)
        {
          this->unit_ = x;
        }

        void ScalarData::
        unit (::std::unique_ptr< unit_type > x)
        {
          this->unit_.set (std::move (x));
        }

        const ScalarData::readOnly_type& ScalarData::
        readOnly () const
        {
          return this->readOnly_.get ();
        }

        ScalarData::readOnly_type& ScalarData::
        readOnly ()
        {
          return this->readOnly_.get ();
        }

        void ScalarData::
        readOnly (const readOnly_type& x)
        {
          this->readOnly_.set (x);
        }

        ScalarData::readOnly_type ScalarData::
        readOnly_default_value ()
        {
          return readOnly_type (false);
        }


        // ScalarFractionData
        // 


        // Bound0To1Double
        // 


        // Scalar0To1Data
        // 


        // BoundNeg1To1Double
        // 


        // ScalarNeg1To1Data
        // 


        // ScalarAmountData
        // 


        // ScalarAmountPerMassData
        // 


        // ScalarAmountPerTimeData
        // 


        // ScalarAmountPerVolumeData
        // 


        // ScalarAreaData
        // 


        // ScalarAreaPerTimePressureData
        // 


        // ScalarElectricCapacitanceData
        // 


        // ScalarElectricChargeData
        // 


        // ScalarElectricCurrentData
        // 


        // ScalarElectricPotentialData
        // 


        // ScalarElectricInductanceData
        // 


        // ScalarElectricResistanceData
        // 


        // ScalarEnergyData
        // 


        // ScalarEnergyPerAmountData
        // 


        // ScalarEnergyPerMassData
        // 


        // ScalarFlowResistanceData
        // 


        // ScalarFlowComplianceData
        // 


        // ScalarFlowElastanceData
        // 


        // ScalarFlowInertanceData
        // 


        // ScalarForceData
        // 


        // ScalarFrequencyData
        // 


        // ScalarHeatCapacitanceData
        // 


        // ScalarHeatCapacitancePerAmountData
        // 


        // ScalarHeatCapacitancePerMassData
        // 


        // ScalarHeatConductanceData
        // 


        // ScalarHeatConductancePerAreaData
        // 


        // ScalarHeatInductanceData
        // 


        // ScalarHeatResistanceData
        // 


        // ScalarHeatResistanceAreaData
        // 


        // ScalarInversePressureData
        // 


        // ScalarInverseVolumeData
        // 


        // ScalarLengthData
        // 


        // ScalarLengthPerTimeData
        // 


        // ScalarLengthPerTimePressureData
        // 


        // ScalarMassData
        // 


        // ScalarMassPerAmountData
        // 


        // ScalarMassPerAreaTimeData
        // 


        // ScalarMassPerMassData
        // 


        // ScalarMassPerTimeData
        // 


        // ScalarMassPerVolumeData
        // 


        // ScalarTimeMassPerVolumeData
        // 


        // ScalarOsmolalityData
        // 


        // ScalarOsmolarityData
        // 


        // ScalarPowerData
        // 


        // ScalarPowerPerAreaTemperatureToTheFourthData
        // 


        // ScalarPressureData
        // 


        // ScalarPressurePerVolumeData
        // 


        // ScalarPressureTimePerVolumeAreaData
        // 


        // ScalarPressureTimePerAreaData
        // 


        // ScalarTimeData
        // 


        // ScalarTemperatureData
        // 


        // ScalarVolumeData
        // 


        // ScalarVolumePerTimeData
        // 


        // ScalarVolumePerPressureData
        // 


        // ScalarVolumePerTimeAreaData
        // 


        // ScalarVolumePerTimeMassData
        // 


        // ScalarVolumePerTimePressureData
        // 


        // ScalarVolumePerTimePressureAreaData
        // 


        // ArrayData
        // 

        const ArrayData::Value_type& ArrayData::
        Value () const
        {
          return this->Value_.get ();
        }

        ArrayData::Value_type& ArrayData::
        Value ()
        {
          return this->Value_.get ();
        }

        void ArrayData::
        Value (const Value_type& x)
        {
          this->Value_.set (x);
        }

        void ArrayData::
        Value (::std::unique_ptr< Value_type > x)
        {
          this->Value_.set (std::move (x));
        }

        const ArrayData::unit_optional& ArrayData::
        unit () const
        {
          return this->unit_;
        }

        ArrayData::unit_optional& ArrayData::
        unit ()
        {
          return this->unit_;
        }

        void ArrayData::
        unit (const unit_type& x)
        {
          this->unit_.set (x);
        }

        void ArrayData::
        unit (const unit_optional& x)
        {
          this->unit_ = x;
        }

        void ArrayData::
        unit (::std::unique_ptr< unit_type > x)
        {
          this->unit_.set (std::move (x));
        }


        // ArrayTimeData
        // 


        // FunctionData
        // 

        const FunctionData::Dependent_type& FunctionData::
        Dependent () const
        {
          return this->Dependent_.get ();
        }

        FunctionData::Dependent_type& FunctionData::
        Dependent ()
        {
          return this->Dependent_.get ();
        }

        void FunctionData::
        Dependent (const Dependent_type& x)
        {
          this->Dependent_.set (x);
        }

        void FunctionData::
        Dependent (::std::unique_ptr< Dependent_type > x)
        {
          this->Dependent_.set (std::move (x));
        }

        const FunctionData::Independent_type& FunctionData::
        Independent () const
        {
          return this->Independent_.get ();
        }

        FunctionData::Independent_type& FunctionData::
        Independent ()
        {
          return this->Independent_.get ();
        }

        void FunctionData::
        Independent (const Independent_type& x)
        {
          this->Independent_.set (x);
        }

        void FunctionData::
        Independent (::std::unique_ptr< Independent_type > x)
        {
          this->Independent_.set (std::move (x));
        }

        const FunctionData::DependentUnit_optional& FunctionData::
        DependentUnit () const
        {
          return this->DependentUnit_;
        }

        FunctionData::DependentUnit_optional& FunctionData::
        DependentUnit ()
        {
          return this->DependentUnit_;
        }

        void FunctionData::
        DependentUnit (const DependentUnit_type& x)
        {
          this->DependentUnit_.set (x);
        }

        void FunctionData::
        DependentUnit (const DependentUnit_optional& x)
        {
          this->DependentUnit_ = x;
        }

        void FunctionData::
        DependentUnit (::std::unique_ptr< DependentUnit_type > x)
        {
          this->DependentUnit_.set (std::move (x));
        }

        const FunctionData::IndependentUnit_optional& FunctionData::
        IndependentUnit () const
        {
          return this->IndependentUnit_;
        }

        FunctionData::IndependentUnit_optional& FunctionData::
        IndependentUnit ()
        {
          return this->IndependentUnit_;
        }

        void FunctionData::
        IndependentUnit (const IndependentUnit_type& x)
        {
          this->IndependentUnit_.set (x);
        }

        void FunctionData::
        IndependentUnit (const IndependentUnit_optional& x)
        {
          this->IndependentUnit_ = x;
        }

        void FunctionData::
        IndependentUnit (::std::unique_ptr< IndependentUnit_type > x)
        {
          this->IndependentUnit_.set (std::move (x));
        }


        // FunctionVolumeVsTimeData
        // 


        // FunctionElectricPotentialVsTimeData
        // 


        // HistogramData
        // 


        // HistogramFractionVsLengthData
        // 


        // IntegerList
        //

        IntegerList::
        IntegerList ()
        : ::xsd::cxx::tree::list< ::xml_schema::int_, char > (this)
        {
        }

        IntegerList::
        IntegerList (size_type n, const ::xml_schema::int_& x)
        : ::xsd::cxx::tree::list< ::xml_schema::int_, char > (n, x, this)
        {
        }

        IntegerList::
        IntegerList (const IntegerList& o,
                     ::xml_schema::flags f,
                     ::xml_schema::container* c)
        : ::xml_schema::simple_type (o, f, c),
          ::xsd::cxx::tree::list< ::xml_schema::int_, char > (o, f, this)
        {
        }

        // DoubleList
        //

        DoubleList::
        DoubleList ()
        : ::xsd::cxx::tree::list< ::xml_schema::double_, char, ::xsd::cxx::tree::schema_type::double_ > (this)
        {
        }

        DoubleList::
        DoubleList (size_type n, const ::xml_schema::double_& x)
        : ::xsd::cxx::tree::list< ::xml_schema::double_, char, ::xsd::cxx::tree::schema_type::double_ > (n, x, this)
        {
        }

        DoubleList::
        DoubleList (const DoubleList& o,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
        : ::xml_schema::simple_type (o, f, c),
          ::xsd::cxx::tree::list< ::xml_schema::double_, char, ::xsd::cxx::tree::schema_type::double_ > (o, f, this)
        {
        }
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // PropertyData
        //

        PropertyData::
        PropertyData ()
        : ::xml_schema::type ()
        {
        }

        PropertyData::
        PropertyData (const PropertyData& x,
                      ::xml_schema::flags f,
                      ::xml_schema::container* c)
        : ::xml_schema::type (x, f, c)
        {
        }

        PropertyData::
        PropertyData (const ::xercesc::DOMElement& e,
                      ::xml_schema::flags f,
                      ::xml_schema::container* c)
        : ::xml_schema::type (e, f, c)
        {
        }

        PropertyData::
        PropertyData (const ::xercesc::DOMAttr& a,
                      ::xml_schema::flags f,
                      ::xml_schema::container* c)
        : ::xml_schema::type (a, f, c)
        {
        }

        PropertyData::
        PropertyData (const ::std::string& s,
                      const ::xercesc::DOMElement* e,
                      ::xml_schema::flags f,
                      ::xml_schema::container* c)
        : ::xml_schema::type (s, e, f, c)
        {
        }

        PropertyData* PropertyData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class PropertyData (*this, f, c);
        }

        PropertyData::
        ~PropertyData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, PropertyData >
        _xsd_PropertyData_type_factory_init (
          "PropertyData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ObjectData
        //

        ObjectData::
        ObjectData ()
        : ::xml_schema::type (),
          contentVersion_ (this)
        {
        }

        ObjectData::
        ObjectData (const ObjectData& x,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
        : ::xml_schema::type (x, f, c),
          contentVersion_ (x.contentVersion_, f, this)
        {
        }

        ObjectData::
        ObjectData (const ::xercesc::DOMElement& e,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
        : ::xml_schema::type (e, f | ::xml_schema::flags::base, c),
          contentVersion_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, false, false, true);
            this->parse (p, f);
          }
        }

        void ObjectData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          while (p.more_attributes ())
          {
            const ::xercesc::DOMAttr& i (p.next_attribute ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            if (n.name () == "contentVersion" && n.namespace_ ().empty ())
            {
              this->contentVersion_.set (contentVersion_traits::create (i, f, this));
              continue;
            }
          }
        }

        ObjectData* ObjectData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ObjectData (*this, f, c);
        }

        ObjectData& ObjectData::
        operator= (const ObjectData& x)
        {
          if (this != &x)
          {
            static_cast< ::xml_schema::type& > (*this) = x;
            this->contentVersion_ = x.contentVersion_;
          }

          return *this;
        }

        ObjectData::
        ~ObjectData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ObjectData >
        _xsd_ObjectData_type_factory_init (
          "ObjectData",
          "uri:/mil/tatrc/physiology/datamodel");

        // enumDecimalFormat
        //

        enumDecimalFormat::
        enumDecimalFormat (const ::xercesc::DOMElement& e,
                           ::xml_schema::flags f,
                           ::xml_schema::container* c)
        : ::xml_schema::string (e, f, c)
        {
          _xsd_enumDecimalFormat_convert ();
        }

        enumDecimalFormat::
        enumDecimalFormat (const ::xercesc::DOMAttr& a,
                           ::xml_schema::flags f,
                           ::xml_schema::container* c)
        : ::xml_schema::string (a, f, c)
        {
          _xsd_enumDecimalFormat_convert ();
        }

        enumDecimalFormat::
        enumDecimalFormat (const ::std::string& s,
                           const ::xercesc::DOMElement* e,
                           ::xml_schema::flags f,
                           ::xml_schema::container* c)
        : ::xml_schema::string (s, e, f, c)
        {
          _xsd_enumDecimalFormat_convert ();
        }

        enumDecimalFormat* enumDecimalFormat::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class enumDecimalFormat (*this, f, c);
        }

        enumDecimalFormat::value enumDecimalFormat::
        _xsd_enumDecimalFormat_convert () const
        {
          ::xsd::cxx::tree::enum_comparator< char > c (_xsd_enumDecimalFormat_literals_);
          const value* i (::std::lower_bound (
                            _xsd_enumDecimalFormat_indexes_,
                            _xsd_enumDecimalFormat_indexes_ + 2,
                            *this,
                            c));

          if (i == _xsd_enumDecimalFormat_indexes_ + 2 || _xsd_enumDecimalFormat_literals_[*i] != *this)
          {
            throw ::xsd::cxx::tree::unexpected_enumerator < char > (*this);
          }

          return *i;
        }

        const char* const enumDecimalFormat::
        _xsd_enumDecimalFormat_literals_[2] =
        {
          "FixedMantissa",
          "SignificantDigits"
        };

        const enumDecimalFormat::value enumDecimalFormat::
        _xsd_enumDecimalFormat_indexes_[2] =
        {
          ::mil::tatrc::physiology::datamodel::enumDecimalFormat::FixedMantissa,
          ::mil::tatrc::physiology::datamodel::enumDecimalFormat::SignificantDigits
        };

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, enumDecimalFormat >
        _xsd_enumDecimalFormat_type_factory_init (
          "enumDecimalFormat",
          "uri:/mil/tatrc/physiology/datamodel");

        // DecimalFormatData
        //

        DecimalFormatData::
        DecimalFormatData ()
        : ::xml_schema::type (),
          DecimalFormat_ (this),
          Precision_ (this)
        {
        }

        DecimalFormatData::
        DecimalFormatData (const DecimalFormatData& x,
                           ::xml_schema::flags f,
                           ::xml_schema::container* c)
        : ::xml_schema::type (x, f, c),
          DecimalFormat_ (x.DecimalFormat_, f, this),
          Precision_ (x.Precision_, f, this)
        {
        }

        DecimalFormatData::
        DecimalFormatData (const ::xercesc::DOMElement& e,
                           ::xml_schema::flags f,
                           ::xml_schema::container* c)
        : ::xml_schema::type (e, f | ::xml_schema::flags::base, c),
          DecimalFormat_ (this),
          Precision_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, false, false, true);
            this->parse (p, f);
          }
        }

        void DecimalFormatData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          while (p.more_attributes ())
          {
            const ::xercesc::DOMAttr& i (p.next_attribute ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            if (n.name () == "DecimalFormat" && n.namespace_ ().empty ())
            {
              this->DecimalFormat_.set (DecimalFormat_traits::create (i, f, this));
              continue;
            }

            if (n.name () == "Precision" && n.namespace_ ().empty ())
            {
              this->Precision_.set (Precision_traits::create (i, f, this));
              continue;
            }
          }
        }

        DecimalFormatData* DecimalFormatData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class DecimalFormatData (*this, f, c);
        }

        DecimalFormatData& DecimalFormatData::
        operator= (const DecimalFormatData& x)
        {
          if (this != &x)
          {
            static_cast< ::xml_schema::type& > (*this) = x;
            this->DecimalFormat_ = x.DecimalFormat_;
            this->Precision_ = x.Precision_;
          }

          return *this;
        }

        DecimalFormatData::
        ~DecimalFormatData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, DecimalFormatData >
        _xsd_DecimalFormatData_type_factory_init (
          "DecimalFormatData",
          "uri:/mil/tatrc/physiology/datamodel");

        // IntegerArray
        //

        IntegerArray::
        IntegerArray ()
        : ::xml_schema::type (),
          IntegerList_ (this)
        {
        }

        IntegerArray::
        IntegerArray (const IntegerList_type& IntegerList)
        : ::xml_schema::type (),
          IntegerList_ (IntegerList, this)
        {
        }

        IntegerArray::
        IntegerArray (::std::unique_ptr< IntegerList_type > IntegerList)
        : ::xml_schema::type (),
          IntegerList_ (std::move (IntegerList), this)
        {
        }

        IntegerArray::
        IntegerArray (const IntegerArray& x,
                      ::xml_schema::flags f,
                      ::xml_schema::container* c)
        : ::xml_schema::type (x, f, c),
          IntegerList_ (x.IntegerList_, f, this)
        {
        }

        IntegerArray::
        IntegerArray (const ::xercesc::DOMElement& e,
                      ::xml_schema::flags f,
                      ::xml_schema::container* c)
        : ::xml_schema::type (e, f | ::xml_schema::flags::base, c),
          IntegerList_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false, false);
            this->parse (p, f);
          }
        }

        void IntegerArray::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          for (; p.more_content (); p.next_content (false))
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // IntegerList
            //
            if (n.name () == "IntegerList" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              ::std::unique_ptr< IntegerList_type > r (
                IntegerList_traits::create (i, f, this));

              if (!IntegerList_.present ())
              {
                this->IntegerList_.set (::std::move (r));
                continue;
              }
            }

            break;
          }

          if (!IntegerList_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "IntegerList",
              "uri:/mil/tatrc/physiology/datamodel");
          }
        }

        IntegerArray* IntegerArray::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class IntegerArray (*this, f, c);
        }

        IntegerArray& IntegerArray::
        operator= (const IntegerArray& x)
        {
          if (this != &x)
          {
            static_cast< ::xml_schema::type& > (*this) = x;
            this->IntegerList_ = x.IntegerList_;
          }

          return *this;
        }

        IntegerArray::
        ~IntegerArray ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, IntegerArray >
        _xsd_IntegerArray_type_factory_init (
          "IntegerArray",
          "uri:/mil/tatrc/physiology/datamodel");

        // DoubleArray
        //

        DoubleArray::
        DoubleArray ()
        : ::xml_schema::type (),
          DoubleList_ (this)
        {
        }

        DoubleArray::
        DoubleArray (const DoubleList_type& DoubleList)
        : ::xml_schema::type (),
          DoubleList_ (DoubleList, this)
        {
        }

        DoubleArray::
        DoubleArray (::std::unique_ptr< DoubleList_type > DoubleList)
        : ::xml_schema::type (),
          DoubleList_ (std::move (DoubleList), this)
        {
        }

        DoubleArray::
        DoubleArray (const DoubleArray& x,
                     ::xml_schema::flags f,
                     ::xml_schema::container* c)
        : ::xml_schema::type (x, f, c),
          DoubleList_ (x.DoubleList_, f, this)
        {
        }

        DoubleArray::
        DoubleArray (const ::xercesc::DOMElement& e,
                     ::xml_schema::flags f,
                     ::xml_schema::container* c)
        : ::xml_schema::type (e, f | ::xml_schema::flags::base, c),
          DoubleList_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false, false);
            this->parse (p, f);
          }
        }

        void DoubleArray::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          for (; p.more_content (); p.next_content (false))
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // DoubleList
            //
            if (n.name () == "DoubleList" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              ::std::unique_ptr< DoubleList_type > r (
                DoubleList_traits::create (i, f, this));

              if (!DoubleList_.present ())
              {
                this->DoubleList_.set (::std::move (r));
                continue;
              }
            }

            break;
          }

          if (!DoubleList_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "DoubleList",
              "uri:/mil/tatrc/physiology/datamodel");
          }
        }

        DoubleArray* DoubleArray::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class DoubleArray (*this, f, c);
        }

        DoubleArray& DoubleArray::
        operator= (const DoubleArray& x)
        {
          if (this != &x)
          {
            static_cast< ::xml_schema::type& > (*this) = x;
            this->DoubleList_ = x.DoubleList_;
          }

          return *this;
        }

        DoubleArray::
        ~DoubleArray ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, DoubleArray >
        _xsd_DoubleArray_type_factory_init (
          "DoubleArray",
          "uri:/mil/tatrc/physiology/datamodel");

        // enumSide
        //

        enumSide::
        enumSide (const ::xercesc::DOMElement& e,
                  ::xml_schema::flags f,
                  ::xml_schema::container* c)
        : ::xml_schema::string (e, f, c)
        {
          _xsd_enumSide_convert ();
        }

        enumSide::
        enumSide (const ::xercesc::DOMAttr& a,
                  ::xml_schema::flags f,
                  ::xml_schema::container* c)
        : ::xml_schema::string (a, f, c)
        {
          _xsd_enumSide_convert ();
        }

        enumSide::
        enumSide (const ::std::string& s,
                  const ::xercesc::DOMElement* e,
                  ::xml_schema::flags f,
                  ::xml_schema::container* c)
        : ::xml_schema::string (s, e, f, c)
        {
          _xsd_enumSide_convert ();
        }

        enumSide* enumSide::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class enumSide (*this, f, c);
        }

        enumSide::value enumSide::
        _xsd_enumSide_convert () const
        {
          ::xsd::cxx::tree::enum_comparator< char > c (_xsd_enumSide_literals_);
          const value* i (::std::lower_bound (
                            _xsd_enumSide_indexes_,
                            _xsd_enumSide_indexes_ + 2,
                            *this,
                            c));

          if (i == _xsd_enumSide_indexes_ + 2 || _xsd_enumSide_literals_[*i] != *this)
          {
            throw ::xsd::cxx::tree::unexpected_enumerator < char > (*this);
          }

          return *i;
        }

        const char* const enumSide::
        _xsd_enumSide_literals_[2] =
        {
          "Left",
          "Right"
        };

        const enumSide::value enumSide::
        _xsd_enumSide_indexes_[2] =
        {
          ::mil::tatrc::physiology::datamodel::enumSide::Left,
          ::mil::tatrc::physiology::datamodel::enumSide::Right
        };

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, enumSide >
        _xsd_enumSide_type_factory_init (
          "enumSide",
          "uri:/mil/tatrc/physiology/datamodel");

        // enumOpenClosed
        //

        enumOpenClosed::
        enumOpenClosed (const ::xercesc::DOMElement& e,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
        : ::xml_schema::string (e, f, c)
        {
          _xsd_enumOpenClosed_convert ();
        }

        enumOpenClosed::
        enumOpenClosed (const ::xercesc::DOMAttr& a,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
        : ::xml_schema::string (a, f, c)
        {
          _xsd_enumOpenClosed_convert ();
        }

        enumOpenClosed::
        enumOpenClosed (const ::std::string& s,
                        const ::xercesc::DOMElement* e,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
        : ::xml_schema::string (s, e, f, c)
        {
          _xsd_enumOpenClosed_convert ();
        }

        enumOpenClosed* enumOpenClosed::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class enumOpenClosed (*this, f, c);
        }

        enumOpenClosed::value enumOpenClosed::
        _xsd_enumOpenClosed_convert () const
        {
          ::xsd::cxx::tree::enum_comparator< char > c (_xsd_enumOpenClosed_literals_);
          const value* i (::std::lower_bound (
                            _xsd_enumOpenClosed_indexes_,
                            _xsd_enumOpenClosed_indexes_ + 2,
                            *this,
                            c));

          if (i == _xsd_enumOpenClosed_indexes_ + 2 || _xsd_enumOpenClosed_literals_[*i] != *this)
          {
            throw ::xsd::cxx::tree::unexpected_enumerator < char > (*this);
          }

          return *i;
        }

        const char* const enumOpenClosed::
        _xsd_enumOpenClosed_literals_[2] =
        {
          "Closed",
          "Open"
        };

        const enumOpenClosed::value enumOpenClosed::
        _xsd_enumOpenClosed_indexes_[2] =
        {
          ::mil::tatrc::physiology::datamodel::enumOpenClosed::Closed,
          ::mil::tatrc::physiology::datamodel::enumOpenClosed::Open
        };

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, enumOpenClosed >
        _xsd_enumOpenClosed_type_factory_init (
          "enumOpenClosed",
          "uri:/mil/tatrc/physiology/datamodel");

        // enumOnOff
        //

        enumOnOff::
        enumOnOff (const ::xercesc::DOMElement& e,
                   ::xml_schema::flags f,
                   ::xml_schema::container* c)
        : ::xml_schema::string (e, f, c)
        {
          _xsd_enumOnOff_convert ();
        }

        enumOnOff::
        enumOnOff (const ::xercesc::DOMAttr& a,
                   ::xml_schema::flags f,
                   ::xml_schema::container* c)
        : ::xml_schema::string (a, f, c)
        {
          _xsd_enumOnOff_convert ();
        }

        enumOnOff::
        enumOnOff (const ::std::string& s,
                   const ::xercesc::DOMElement* e,
                   ::xml_schema::flags f,
                   ::xml_schema::container* c)
        : ::xml_schema::string (s, e, f, c)
        {
          _xsd_enumOnOff_convert ();
        }

        enumOnOff* enumOnOff::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class enumOnOff (*this, f, c);
        }

        enumOnOff::value enumOnOff::
        _xsd_enumOnOff_convert () const
        {
          ::xsd::cxx::tree::enum_comparator< char > c (_xsd_enumOnOff_literals_);
          const value* i (::std::lower_bound (
                            _xsd_enumOnOff_indexes_,
                            _xsd_enumOnOff_indexes_ + 2,
                            *this,
                            c));

          if (i == _xsd_enumOnOff_indexes_ + 2 || _xsd_enumOnOff_literals_[*i] != *this)
          {
            throw ::xsd::cxx::tree::unexpected_enumerator < char > (*this);
          }

          return *i;
        }

        const char* const enumOnOff::
        _xsd_enumOnOff_literals_[2] =
        {
          "Off",
          "On"
        };

        const enumOnOff::value enumOnOff::
        _xsd_enumOnOff_indexes_[2] =
        {
          ::mil::tatrc::physiology::datamodel::enumOnOff::Off,
          ::mil::tatrc::physiology::datamodel::enumOnOff::On
        };

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, enumOnOff >
        _xsd_enumOnOff_type_factory_init (
          "enumOnOff",
          "uri:/mil/tatrc/physiology/datamodel");

        // enumErrorType
        //

        enumErrorType::
        enumErrorType (const ::xercesc::DOMElement& e,
                       ::xml_schema::flags f,
                       ::xml_schema::container* c)
        : ::xml_schema::string (e, f, c)
        {
          _xsd_enumErrorType_convert ();
        }

        enumErrorType::
        enumErrorType (const ::xercesc::DOMAttr& a,
                       ::xml_schema::flags f,
                       ::xml_schema::container* c)
        : ::xml_schema::string (a, f, c)
        {
          _xsd_enumErrorType_convert ();
        }

        enumErrorType::
        enumErrorType (const ::std::string& s,
                       const ::xercesc::DOMElement* e,
                       ::xml_schema::flags f,
                       ::xml_schema::container* c)
        : ::xml_schema::string (s, e, f, c)
        {
          _xsd_enumErrorType_convert ();
        }

        enumErrorType* enumErrorType::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class enumErrorType (*this, f, c);
        }

        enumErrorType::value enumErrorType::
        _xsd_enumErrorType_convert () const
        {
          ::xsd::cxx::tree::enum_comparator< char > c (_xsd_enumErrorType_literals_);
          const value* i (::std::lower_bound (
                            _xsd_enumErrorType_indexes_,
                            _xsd_enumErrorType_indexes_ + 1,
                            *this,
                            c));

          if (i == _xsd_enumErrorType_indexes_ + 1 || _xsd_enumErrorType_literals_[*i] != *this)
          {
            throw ::xsd::cxx::tree::unexpected_enumerator < char > (*this);
          }

          return *i;
        }

        const char* const enumErrorType::
        _xsd_enumErrorType_literals_[1] =
        {
          "Standard"
        };

        const enumErrorType::value enumErrorType::
        _xsd_enumErrorType_indexes_[1] =
        {
          ::mil::tatrc::physiology::datamodel::enumErrorType::Standard
        };

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, enumErrorType >
        _xsd_enumErrorType_type_factory_init (
          "enumErrorType",
          "uri:/mil/tatrc/physiology/datamodel");

        // ErrorData
        //

        ErrorData::
        ErrorData ()
        : ::xml_schema::type (),
          value_ (this),
          type_ (this)
        {
        }

        ErrorData::
        ErrorData (const value_type& value,
                   const type_type& type)
        : ::xml_schema::type (),
          value_ (value, this),
          type_ (type, this)
        {
        }

        ErrorData::
        ErrorData (const ErrorData& x,
                   ::xml_schema::flags f,
                   ::xml_schema::container* c)
        : ::xml_schema::type (x, f, c),
          value_ (x.value_, f, this),
          type_ (x.type_, f, this)
        {
        }

        ErrorData::
        ErrorData (const ::xercesc::DOMElement& e,
                   ::xml_schema::flags f,
                   ::xml_schema::container* c)
        : ::xml_schema::type (e, f | ::xml_schema::flags::base, c),
          value_ (this),
          type_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, false, false, true);
            this->parse (p, f);
          }
        }

        void ErrorData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          while (p.more_attributes ())
          {
            const ::xercesc::DOMAttr& i (p.next_attribute ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            if (n.name () == "value" && n.namespace_ ().empty ())
            {
              this->value_.set (value_traits::create (i, f, this));
              continue;
            }

            if (n.name () == "type" && n.namespace_ ().empty ())
            {
              this->type_.set (type_traits::create (i, f, this));
              continue;
            }
          }

          if (!value_.present ())
          {
            throw ::xsd::cxx::tree::expected_attribute< char > (
              "value",
              "");
          }

          if (!type_.present ())
          {
            throw ::xsd::cxx::tree::expected_attribute< char > (
              "type",
              "");
          }
        }

        ErrorData* ErrorData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ErrorData (*this, f, c);
        }

        ErrorData& ErrorData::
        operator= (const ErrorData& x)
        {
          if (this != &x)
          {
            static_cast< ::xml_schema::type& > (*this) = x;
            this->value_ = x.value_;
            this->type_ = x.type_;
          }

          return *this;
        }

        ErrorData::
        ~ErrorData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ErrorData >
        _xsd_ErrorData_type_factory_init (
          "ErrorData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ErrorList
        //

        ErrorList::
        ErrorList ()
        : ::xml_schema::type (),
          Value_ (this),
          type_ (this)
        {
        }

        ErrorList::
        ErrorList (const Value_type& Value,
                   const type_type& type)
        : ::xml_schema::type (),
          Value_ (Value, this),
          type_ (type, this)
        {
        }

        ErrorList::
        ErrorList (::std::unique_ptr< Value_type > Value,
                   const type_type& type)
        : ::xml_schema::type (),
          Value_ (std::move (Value), this),
          type_ (type, this)
        {
        }

        ErrorList::
        ErrorList (const ErrorList& x,
                   ::xml_schema::flags f,
                   ::xml_schema::container* c)
        : ::xml_schema::type (x, f, c),
          Value_ (x.Value_, f, this),
          type_ (x.type_, f, this)
        {
        }

        ErrorList::
        ErrorList (const ::xercesc::DOMElement& e,
                   ::xml_schema::flags f,
                   ::xml_schema::container* c)
        : ::xml_schema::type (e, f | ::xml_schema::flags::base, c),
          Value_ (this),
          type_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
            this->parse (p, f);
          }
        }

        void ErrorList::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          for (; p.more_content (); p.next_content (false))
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // Value
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "Value",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< Value_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!Value_.present ())
                {
                  ::std::unique_ptr< Value_type > r (
                    dynamic_cast< Value_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->Value_.set (::std::move (r));
                  continue;
                }
              }
            }

            break;
          }

          if (!Value_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "Value",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          while (p.more_attributes ())
          {
            const ::xercesc::DOMAttr& i (p.next_attribute ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            if (n.name () == "type" && n.namespace_ ().empty ())
            {
              this->type_.set (type_traits::create (i, f, this));
              continue;
            }
          }

          if (!type_.present ())
          {
            throw ::xsd::cxx::tree::expected_attribute< char > (
              "type",
              "");
          }
        }

        ErrorList* ErrorList::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ErrorList (*this, f, c);
        }

        ErrorList& ErrorList::
        operator= (const ErrorList& x)
        {
          if (this != &x)
          {
            static_cast< ::xml_schema::type& > (*this) = x;
            this->Value_ = x.Value_;
            this->type_ = x.type_;
          }

          return *this;
        }

        ErrorList::
        ~ErrorList ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ErrorList >
        _xsd_ErrorList_type_factory_init (
          "ErrorList",
          "uri:/mil/tatrc/physiology/datamodel");

        // RunningAverageData
        //

        RunningAverageData::
        RunningAverageData ()
        : ::mil::tatrc::physiology::datamodel::PropertyData (),
          sum_ (this),
          numSamples_ (this)
        {
        }

        RunningAverageData::
        RunningAverageData (const sum_type& sum,
                            const numSamples_type& numSamples)
        : ::mil::tatrc::physiology::datamodel::PropertyData (),
          sum_ (sum, this),
          numSamples_ (numSamples, this)
        {
        }

        RunningAverageData::
        RunningAverageData (const RunningAverageData& x,
                            ::xml_schema::flags f,
                            ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::PropertyData (x, f, c),
          sum_ (x.sum_, f, this),
          numSamples_ (x.numSamples_, f, this)
        {
        }

        RunningAverageData::
        RunningAverageData (const ::xercesc::DOMElement& e,
                            ::xml_schema::flags f,
                            ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::PropertyData (e, f | ::xml_schema::flags::base, c),
          sum_ (this),
          numSamples_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, false, false, true);
            this->parse (p, f);
          }
        }

        void RunningAverageData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          while (p.more_attributes ())
          {
            const ::xercesc::DOMAttr& i (p.next_attribute ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            if (n.name () == "sum" && n.namespace_ ().empty ())
            {
              this->sum_.set (sum_traits::create (i, f, this));
              continue;
            }

            if (n.name () == "numSamples" && n.namespace_ ().empty ())
            {
              this->numSamples_.set (numSamples_traits::create (i, f, this));
              continue;
            }
          }

          if (!sum_.present ())
          {
            throw ::xsd::cxx::tree::expected_attribute< char > (
              "sum",
              "");
          }

          if (!numSamples_.present ())
          {
            throw ::xsd::cxx::tree::expected_attribute< char > (
              "numSamples",
              "");
          }
        }

        RunningAverageData* RunningAverageData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class RunningAverageData (*this, f, c);
        }

        RunningAverageData& RunningAverageData::
        operator= (const RunningAverageData& x)
        {
          if (this != &x)
          {
            static_cast< ::mil::tatrc::physiology::datamodel::PropertyData& > (*this) = x;
            this->sum_ = x.sum_;
            this->numSamples_ = x.numSamples_;
          }

          return *this;
        }

        RunningAverageData::
        ~RunningAverageData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, RunningAverageData >
        _xsd_RunningAverageData_type_factory_init (
          "RunningAverageData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarData
        //

        ScalarData::
        ScalarData ()
        : ::mil::tatrc::physiology::datamodel::PropertyData (),
          value_ (this),
          unit_ (this),
          readOnly_ (readOnly_default_value (), this)
        {
        }

        ScalarData::
        ScalarData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::PropertyData (),
          value_ (value, this),
          unit_ (this),
          readOnly_ (readOnly_default_value (), this)
        {
        }

        ScalarData::
        ScalarData (const ScalarData& x,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::PropertyData (x, f, c),
          value_ (x.value_, f, this),
          unit_ (x.unit_, f, this),
          readOnly_ (x.readOnly_, f, this)
        {
        }

        ScalarData::
        ScalarData (const ::xercesc::DOMElement& e,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::PropertyData (e, f | ::xml_schema::flags::base, c),
          value_ (this),
          unit_ (this),
          readOnly_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, false, false, true);
            this->parse (p, f);
          }
        }

        void ScalarData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          while (p.more_attributes ())
          {
            const ::xercesc::DOMAttr& i (p.next_attribute ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            if (n.name () == "value" && n.namespace_ ().empty ())
            {
              this->value_.set (value_traits::create (i, f, this));
              continue;
            }

            if (n.name () == "unit" && n.namespace_ ().empty ())
            {
              this->unit_.set (unit_traits::create (i, f, this));
              continue;
            }

            if (n.name () == "readOnly" && n.namespace_ ().empty ())
            {
              this->readOnly_.set (readOnly_traits::create (i, f, this));
              continue;
            }
          }

          if (!value_.present ())
          {
            throw ::xsd::cxx::tree::expected_attribute< char > (
              "value",
              "");
          }

          if (!readOnly_.present ())
          {
            this->readOnly_.set (readOnly_default_value ());
          }
        }

        ScalarData* ScalarData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarData (*this, f, c);
        }

        ScalarData& ScalarData::
        operator= (const ScalarData& x)
        {
          if (this != &x)
          {
            static_cast< ::mil::tatrc::physiology::datamodel::PropertyData& > (*this) = x;
            this->value_ = x.value_;
            this->unit_ = x.unit_;
            this->readOnly_ = x.readOnly_;
          }

          return *this;
        }

        ScalarData::
        ~ScalarData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarData >
        _xsd_ScalarData_type_factory_init (
          "ScalarData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarFractionData
        //

        ScalarFractionData::
        ScalarFractionData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarFractionData::
        ScalarFractionData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarFractionData::
        ScalarFractionData (const ScalarFractionData& x,
                            ::xml_schema::flags f,
                            ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarFractionData::
        ScalarFractionData (const ::xercesc::DOMElement& e,
                            ::xml_schema::flags f,
                            ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarFractionData* ScalarFractionData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarFractionData (*this, f, c);
        }

        ScalarFractionData::
        ~ScalarFractionData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarFractionData >
        _xsd_ScalarFractionData_type_factory_init (
          "ScalarFractionData",
          "uri:/mil/tatrc/physiology/datamodel");

        // Bound0To1Double
        //

        Bound0To1Double::
        Bound0To1Double ()
        : ::xsd::cxx::tree::fundamental_base< ::xml_schema::double_, char, ::xml_schema::simple_type, ::xsd::cxx::tree::schema_type::double_ > ()
        {
        }

        Bound0To1Double::
        Bound0To1Double (const ::xml_schema::double_& _xsd_double__base)
        : ::xsd::cxx::tree::fundamental_base< ::xml_schema::double_, char, ::xml_schema::simple_type, ::xsd::cxx::tree::schema_type::double_ > (_xsd_double__base)
        {
        }

        Bound0To1Double::
        Bound0To1Double (const Bound0To1Double& x,
                         ::xml_schema::flags f,
                         ::xml_schema::container* c)
        : ::xsd::cxx::tree::fundamental_base< ::xml_schema::double_, char, ::xml_schema::simple_type, ::xsd::cxx::tree::schema_type::double_ > (x, f, c)
        {
        }

        Bound0To1Double::
        Bound0To1Double (const ::xercesc::DOMElement& e,
                         ::xml_schema::flags f,
                         ::xml_schema::container* c)
        : ::xsd::cxx::tree::fundamental_base< ::xml_schema::double_, char, ::xml_schema::simple_type, ::xsd::cxx::tree::schema_type::double_ > (e, f, c)
        {
        }

        Bound0To1Double::
        Bound0To1Double (const ::xercesc::DOMAttr& a,
                         ::xml_schema::flags f,
                         ::xml_schema::container* c)
        : ::xsd::cxx::tree::fundamental_base< ::xml_schema::double_, char, ::xml_schema::simple_type, ::xsd::cxx::tree::schema_type::double_ > (a, f, c)
        {
        }

        Bound0To1Double::
        Bound0To1Double (const ::std::string& s,
                         const ::xercesc::DOMElement* e,
                         ::xml_schema::flags f,
                         ::xml_schema::container* c)
        : ::xsd::cxx::tree::fundamental_base< ::xml_schema::double_, char, ::xml_schema::simple_type, ::xsd::cxx::tree::schema_type::double_ > (s, e, f, c)
        {
        }

        Bound0To1Double* Bound0To1Double::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class Bound0To1Double (*this, f, c);
        }

        Bound0To1Double::
        ~Bound0To1Double ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, Bound0To1Double >
        _xsd_Bound0To1Double_type_factory_init (
          "Bound0To1Double",
          "uri:/mil/tatrc/physiology/datamodel");

        // Scalar0To1Data
        //

        Scalar0To1Data::
        Scalar0To1Data ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        Scalar0To1Data::
        Scalar0To1Data (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        Scalar0To1Data::
        Scalar0To1Data (const Scalar0To1Data& x,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        Scalar0To1Data::
        Scalar0To1Data (const ::xercesc::DOMElement& e,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        Scalar0To1Data* Scalar0To1Data::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class Scalar0To1Data (*this, f, c);
        }

        Scalar0To1Data::
        ~Scalar0To1Data ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, Scalar0To1Data >
        _xsd_Scalar0To1Data_type_factory_init (
          "Scalar0To1Data",
          "uri:/mil/tatrc/physiology/datamodel");

        // BoundNeg1To1Double
        //

        BoundNeg1To1Double::
        BoundNeg1To1Double ()
        : ::xsd::cxx::tree::fundamental_base< ::xml_schema::double_, char, ::xml_schema::simple_type, ::xsd::cxx::tree::schema_type::double_ > ()
        {
        }

        BoundNeg1To1Double::
        BoundNeg1To1Double (const ::xml_schema::double_& _xsd_double__base)
        : ::xsd::cxx::tree::fundamental_base< ::xml_schema::double_, char, ::xml_schema::simple_type, ::xsd::cxx::tree::schema_type::double_ > (_xsd_double__base)
        {
        }

        BoundNeg1To1Double::
        BoundNeg1To1Double (const BoundNeg1To1Double& x,
                            ::xml_schema::flags f,
                            ::xml_schema::container* c)
        : ::xsd::cxx::tree::fundamental_base< ::xml_schema::double_, char, ::xml_schema::simple_type, ::xsd::cxx::tree::schema_type::double_ > (x, f, c)
        {
        }

        BoundNeg1To1Double::
        BoundNeg1To1Double (const ::xercesc::DOMElement& e,
                            ::xml_schema::flags f,
                            ::xml_schema::container* c)
        : ::xsd::cxx::tree::fundamental_base< ::xml_schema::double_, char, ::xml_schema::simple_type, ::xsd::cxx::tree::schema_type::double_ > (e, f, c)
        {
        }

        BoundNeg1To1Double::
        BoundNeg1To1Double (const ::xercesc::DOMAttr& a,
                            ::xml_schema::flags f,
                            ::xml_schema::container* c)
        : ::xsd::cxx::tree::fundamental_base< ::xml_schema::double_, char, ::xml_schema::simple_type, ::xsd::cxx::tree::schema_type::double_ > (a, f, c)
        {
        }

        BoundNeg1To1Double::
        BoundNeg1To1Double (const ::std::string& s,
                            const ::xercesc::DOMElement* e,
                            ::xml_schema::flags f,
                            ::xml_schema::container* c)
        : ::xsd::cxx::tree::fundamental_base< ::xml_schema::double_, char, ::xml_schema::simple_type, ::xsd::cxx::tree::schema_type::double_ > (s, e, f, c)
        {
        }

        BoundNeg1To1Double* BoundNeg1To1Double::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class BoundNeg1To1Double (*this, f, c);
        }

        BoundNeg1To1Double::
        ~BoundNeg1To1Double ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, BoundNeg1To1Double >
        _xsd_BoundNeg1To1Double_type_factory_init (
          "BoundNeg1To1Double",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarNeg1To1Data
        //

        ScalarNeg1To1Data::
        ScalarNeg1To1Data ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarNeg1To1Data::
        ScalarNeg1To1Data (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarNeg1To1Data::
        ScalarNeg1To1Data (const ScalarNeg1To1Data& x,
                           ::xml_schema::flags f,
                           ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarNeg1To1Data::
        ScalarNeg1To1Data (const ::xercesc::DOMElement& e,
                           ::xml_schema::flags f,
                           ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarNeg1To1Data* ScalarNeg1To1Data::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarNeg1To1Data (*this, f, c);
        }

        ScalarNeg1To1Data::
        ~ScalarNeg1To1Data ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarNeg1To1Data >
        _xsd_ScalarNeg1To1Data_type_factory_init (
          "ScalarNeg1To1Data",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarAmountData
        //

        ScalarAmountData::
        ScalarAmountData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarAmountData::
        ScalarAmountData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarAmountData::
        ScalarAmountData (const ScalarAmountData& x,
                          ::xml_schema::flags f,
                          ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarAmountData::
        ScalarAmountData (const ::xercesc::DOMElement& e,
                          ::xml_schema::flags f,
                          ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarAmountData* ScalarAmountData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarAmountData (*this, f, c);
        }

        ScalarAmountData::
        ~ScalarAmountData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarAmountData >
        _xsd_ScalarAmountData_type_factory_init (
          "ScalarAmountData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarAmountPerMassData
        //

        ScalarAmountPerMassData::
        ScalarAmountPerMassData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarAmountPerMassData::
        ScalarAmountPerMassData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarAmountPerMassData::
        ScalarAmountPerMassData (const ScalarAmountPerMassData& x,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarAmountPerMassData::
        ScalarAmountPerMassData (const ::xercesc::DOMElement& e,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarAmountPerMassData* ScalarAmountPerMassData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarAmountPerMassData (*this, f, c);
        }

        ScalarAmountPerMassData::
        ~ScalarAmountPerMassData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarAmountPerMassData >
        _xsd_ScalarAmountPerMassData_type_factory_init (
          "ScalarAmountPerMassData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarAmountPerTimeData
        //

        ScalarAmountPerTimeData::
        ScalarAmountPerTimeData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarAmountPerTimeData::
        ScalarAmountPerTimeData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarAmountPerTimeData::
        ScalarAmountPerTimeData (const ScalarAmountPerTimeData& x,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarAmountPerTimeData::
        ScalarAmountPerTimeData (const ::xercesc::DOMElement& e,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarAmountPerTimeData* ScalarAmountPerTimeData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarAmountPerTimeData (*this, f, c);
        }

        ScalarAmountPerTimeData::
        ~ScalarAmountPerTimeData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarAmountPerTimeData >
        _xsd_ScalarAmountPerTimeData_type_factory_init (
          "ScalarAmountPerTimeData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarAmountPerVolumeData
        //

        ScalarAmountPerVolumeData::
        ScalarAmountPerVolumeData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarAmountPerVolumeData::
        ScalarAmountPerVolumeData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarAmountPerVolumeData::
        ScalarAmountPerVolumeData (const ScalarAmountPerVolumeData& x,
                                   ::xml_schema::flags f,
                                   ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarAmountPerVolumeData::
        ScalarAmountPerVolumeData (const ::xercesc::DOMElement& e,
                                   ::xml_schema::flags f,
                                   ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarAmountPerVolumeData* ScalarAmountPerVolumeData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarAmountPerVolumeData (*this, f, c);
        }

        ScalarAmountPerVolumeData::
        ~ScalarAmountPerVolumeData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarAmountPerVolumeData >
        _xsd_ScalarAmountPerVolumeData_type_factory_init (
          "ScalarAmountPerVolumeData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarAreaData
        //

        ScalarAreaData::
        ScalarAreaData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarAreaData::
        ScalarAreaData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarAreaData::
        ScalarAreaData (const ScalarAreaData& x,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarAreaData::
        ScalarAreaData (const ::xercesc::DOMElement& e,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarAreaData* ScalarAreaData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarAreaData (*this, f, c);
        }

        ScalarAreaData::
        ~ScalarAreaData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarAreaData >
        _xsd_ScalarAreaData_type_factory_init (
          "ScalarAreaData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarAreaPerTimePressureData
        //

        ScalarAreaPerTimePressureData::
        ScalarAreaPerTimePressureData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarAreaPerTimePressureData::
        ScalarAreaPerTimePressureData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarAreaPerTimePressureData::
        ScalarAreaPerTimePressureData (const ScalarAreaPerTimePressureData& x,
                                       ::xml_schema::flags f,
                                       ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarAreaPerTimePressureData::
        ScalarAreaPerTimePressureData (const ::xercesc::DOMElement& e,
                                       ::xml_schema::flags f,
                                       ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarAreaPerTimePressureData* ScalarAreaPerTimePressureData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarAreaPerTimePressureData (*this, f, c);
        }

        ScalarAreaPerTimePressureData::
        ~ScalarAreaPerTimePressureData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarAreaPerTimePressureData >
        _xsd_ScalarAreaPerTimePressureData_type_factory_init (
          "ScalarAreaPerTimePressureData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarElectricCapacitanceData
        //

        ScalarElectricCapacitanceData::
        ScalarElectricCapacitanceData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarElectricCapacitanceData::
        ScalarElectricCapacitanceData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarElectricCapacitanceData::
        ScalarElectricCapacitanceData (const ScalarElectricCapacitanceData& x,
                                       ::xml_schema::flags f,
                                       ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarElectricCapacitanceData::
        ScalarElectricCapacitanceData (const ::xercesc::DOMElement& e,
                                       ::xml_schema::flags f,
                                       ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarElectricCapacitanceData* ScalarElectricCapacitanceData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarElectricCapacitanceData (*this, f, c);
        }

        ScalarElectricCapacitanceData::
        ~ScalarElectricCapacitanceData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarElectricCapacitanceData >
        _xsd_ScalarElectricCapacitanceData_type_factory_init (
          "ScalarElectricCapacitanceData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarElectricChargeData
        //

        ScalarElectricChargeData::
        ScalarElectricChargeData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarElectricChargeData::
        ScalarElectricChargeData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarElectricChargeData::
        ScalarElectricChargeData (const ScalarElectricChargeData& x,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarElectricChargeData::
        ScalarElectricChargeData (const ::xercesc::DOMElement& e,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarElectricChargeData* ScalarElectricChargeData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarElectricChargeData (*this, f, c);
        }

        ScalarElectricChargeData::
        ~ScalarElectricChargeData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarElectricChargeData >
        _xsd_ScalarElectricChargeData_type_factory_init (
          "ScalarElectricChargeData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarElectricCurrentData
        //

        ScalarElectricCurrentData::
        ScalarElectricCurrentData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarElectricCurrentData::
        ScalarElectricCurrentData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarElectricCurrentData::
        ScalarElectricCurrentData (const ScalarElectricCurrentData& x,
                                   ::xml_schema::flags f,
                                   ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarElectricCurrentData::
        ScalarElectricCurrentData (const ::xercesc::DOMElement& e,
                                   ::xml_schema::flags f,
                                   ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarElectricCurrentData* ScalarElectricCurrentData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarElectricCurrentData (*this, f, c);
        }

        ScalarElectricCurrentData::
        ~ScalarElectricCurrentData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarElectricCurrentData >
        _xsd_ScalarElectricCurrentData_type_factory_init (
          "ScalarElectricCurrentData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarElectricPotentialData
        //

        ScalarElectricPotentialData::
        ScalarElectricPotentialData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarElectricPotentialData::
        ScalarElectricPotentialData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarElectricPotentialData::
        ScalarElectricPotentialData (const ScalarElectricPotentialData& x,
                                     ::xml_schema::flags f,
                                     ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarElectricPotentialData::
        ScalarElectricPotentialData (const ::xercesc::DOMElement& e,
                                     ::xml_schema::flags f,
                                     ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarElectricPotentialData* ScalarElectricPotentialData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarElectricPotentialData (*this, f, c);
        }

        ScalarElectricPotentialData::
        ~ScalarElectricPotentialData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarElectricPotentialData >
        _xsd_ScalarElectricPotentialData_type_factory_init (
          "ScalarElectricPotentialData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarElectricInductanceData
        //

        ScalarElectricInductanceData::
        ScalarElectricInductanceData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarElectricInductanceData::
        ScalarElectricInductanceData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarElectricInductanceData::
        ScalarElectricInductanceData (const ScalarElectricInductanceData& x,
                                      ::xml_schema::flags f,
                                      ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarElectricInductanceData::
        ScalarElectricInductanceData (const ::xercesc::DOMElement& e,
                                      ::xml_schema::flags f,
                                      ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarElectricInductanceData* ScalarElectricInductanceData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarElectricInductanceData (*this, f, c);
        }

        ScalarElectricInductanceData::
        ~ScalarElectricInductanceData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarElectricInductanceData >
        _xsd_ScalarElectricInductanceData_type_factory_init (
          "ScalarElectricInductanceData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarElectricResistanceData
        //

        ScalarElectricResistanceData::
        ScalarElectricResistanceData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarElectricResistanceData::
        ScalarElectricResistanceData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarElectricResistanceData::
        ScalarElectricResistanceData (const ScalarElectricResistanceData& x,
                                      ::xml_schema::flags f,
                                      ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarElectricResistanceData::
        ScalarElectricResistanceData (const ::xercesc::DOMElement& e,
                                      ::xml_schema::flags f,
                                      ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarElectricResistanceData* ScalarElectricResistanceData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarElectricResistanceData (*this, f, c);
        }

        ScalarElectricResistanceData::
        ~ScalarElectricResistanceData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarElectricResistanceData >
        _xsd_ScalarElectricResistanceData_type_factory_init (
          "ScalarElectricResistanceData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarEnergyData
        //

        ScalarEnergyData::
        ScalarEnergyData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarEnergyData::
        ScalarEnergyData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarEnergyData::
        ScalarEnergyData (const ScalarEnergyData& x,
                          ::xml_schema::flags f,
                          ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarEnergyData::
        ScalarEnergyData (const ::xercesc::DOMElement& e,
                          ::xml_schema::flags f,
                          ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarEnergyData* ScalarEnergyData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarEnergyData (*this, f, c);
        }

        ScalarEnergyData::
        ~ScalarEnergyData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarEnergyData >
        _xsd_ScalarEnergyData_type_factory_init (
          "ScalarEnergyData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarEnergyPerAmountData
        //

        ScalarEnergyPerAmountData::
        ScalarEnergyPerAmountData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarEnergyPerAmountData::
        ScalarEnergyPerAmountData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarEnergyPerAmountData::
        ScalarEnergyPerAmountData (const ScalarEnergyPerAmountData& x,
                                   ::xml_schema::flags f,
                                   ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarEnergyPerAmountData::
        ScalarEnergyPerAmountData (const ::xercesc::DOMElement& e,
                                   ::xml_schema::flags f,
                                   ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarEnergyPerAmountData* ScalarEnergyPerAmountData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarEnergyPerAmountData (*this, f, c);
        }

        ScalarEnergyPerAmountData::
        ~ScalarEnergyPerAmountData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarEnergyPerAmountData >
        _xsd_ScalarEnergyPerAmountData_type_factory_init (
          "ScalarEnergyPerAmountData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarEnergyPerMassData
        //

        ScalarEnergyPerMassData::
        ScalarEnergyPerMassData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarEnergyPerMassData::
        ScalarEnergyPerMassData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarEnergyPerMassData::
        ScalarEnergyPerMassData (const ScalarEnergyPerMassData& x,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarEnergyPerMassData::
        ScalarEnergyPerMassData (const ::xercesc::DOMElement& e,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarEnergyPerMassData* ScalarEnergyPerMassData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarEnergyPerMassData (*this, f, c);
        }

        ScalarEnergyPerMassData::
        ~ScalarEnergyPerMassData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarEnergyPerMassData >
        _xsd_ScalarEnergyPerMassData_type_factory_init (
          "ScalarEnergyPerMassData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarFlowResistanceData
        //

        ScalarFlowResistanceData::
        ScalarFlowResistanceData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarFlowResistanceData::
        ScalarFlowResistanceData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarFlowResistanceData::
        ScalarFlowResistanceData (const ScalarFlowResistanceData& x,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarFlowResistanceData::
        ScalarFlowResistanceData (const ::xercesc::DOMElement& e,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarFlowResistanceData* ScalarFlowResistanceData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarFlowResistanceData (*this, f, c);
        }

        ScalarFlowResistanceData::
        ~ScalarFlowResistanceData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarFlowResistanceData >
        _xsd_ScalarFlowResistanceData_type_factory_init (
          "ScalarFlowResistanceData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarFlowComplianceData
        //

        ScalarFlowComplianceData::
        ScalarFlowComplianceData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarFlowComplianceData::
        ScalarFlowComplianceData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarFlowComplianceData::
        ScalarFlowComplianceData (const ScalarFlowComplianceData& x,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarFlowComplianceData::
        ScalarFlowComplianceData (const ::xercesc::DOMElement& e,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarFlowComplianceData* ScalarFlowComplianceData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarFlowComplianceData (*this, f, c);
        }

        ScalarFlowComplianceData::
        ~ScalarFlowComplianceData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarFlowComplianceData >
        _xsd_ScalarFlowComplianceData_type_factory_init (
          "ScalarFlowComplianceData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarFlowElastanceData
        //

        ScalarFlowElastanceData::
        ScalarFlowElastanceData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarFlowElastanceData::
        ScalarFlowElastanceData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarFlowElastanceData::
        ScalarFlowElastanceData (const ScalarFlowElastanceData& x,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarFlowElastanceData::
        ScalarFlowElastanceData (const ::xercesc::DOMElement& e,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarFlowElastanceData* ScalarFlowElastanceData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarFlowElastanceData (*this, f, c);
        }

        ScalarFlowElastanceData::
        ~ScalarFlowElastanceData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarFlowElastanceData >
        _xsd_ScalarFlowElastanceData_type_factory_init (
          "ScalarFlowElastanceData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarFlowInertanceData
        //

        ScalarFlowInertanceData::
        ScalarFlowInertanceData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarFlowInertanceData::
        ScalarFlowInertanceData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarFlowInertanceData::
        ScalarFlowInertanceData (const ScalarFlowInertanceData& x,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarFlowInertanceData::
        ScalarFlowInertanceData (const ::xercesc::DOMElement& e,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarFlowInertanceData* ScalarFlowInertanceData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarFlowInertanceData (*this, f, c);
        }

        ScalarFlowInertanceData::
        ~ScalarFlowInertanceData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarFlowInertanceData >
        _xsd_ScalarFlowInertanceData_type_factory_init (
          "ScalarFlowInertanceData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarForceData
        //

        ScalarForceData::
        ScalarForceData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarForceData::
        ScalarForceData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarForceData::
        ScalarForceData (const ScalarForceData& x,
                         ::xml_schema::flags f,
                         ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarForceData::
        ScalarForceData (const ::xercesc::DOMElement& e,
                         ::xml_schema::flags f,
                         ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarForceData* ScalarForceData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarForceData (*this, f, c);
        }

        ScalarForceData::
        ~ScalarForceData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarForceData >
        _xsd_ScalarForceData_type_factory_init (
          "ScalarForceData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarFrequencyData
        //

        ScalarFrequencyData::
        ScalarFrequencyData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarFrequencyData::
        ScalarFrequencyData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarFrequencyData::
        ScalarFrequencyData (const ScalarFrequencyData& x,
                             ::xml_schema::flags f,
                             ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarFrequencyData::
        ScalarFrequencyData (const ::xercesc::DOMElement& e,
                             ::xml_schema::flags f,
                             ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarFrequencyData* ScalarFrequencyData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarFrequencyData (*this, f, c);
        }

        ScalarFrequencyData::
        ~ScalarFrequencyData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarFrequencyData >
        _xsd_ScalarFrequencyData_type_factory_init (
          "ScalarFrequencyData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarHeatCapacitanceData
        //

        ScalarHeatCapacitanceData::
        ScalarHeatCapacitanceData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarHeatCapacitanceData::
        ScalarHeatCapacitanceData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarHeatCapacitanceData::
        ScalarHeatCapacitanceData (const ScalarHeatCapacitanceData& x,
                                   ::xml_schema::flags f,
                                   ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarHeatCapacitanceData::
        ScalarHeatCapacitanceData (const ::xercesc::DOMElement& e,
                                   ::xml_schema::flags f,
                                   ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarHeatCapacitanceData* ScalarHeatCapacitanceData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarHeatCapacitanceData (*this, f, c);
        }

        ScalarHeatCapacitanceData::
        ~ScalarHeatCapacitanceData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarHeatCapacitanceData >
        _xsd_ScalarHeatCapacitanceData_type_factory_init (
          "ScalarHeatCapacitanceData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarHeatCapacitancePerAmountData
        //

        ScalarHeatCapacitancePerAmountData::
        ScalarHeatCapacitancePerAmountData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarHeatCapacitancePerAmountData::
        ScalarHeatCapacitancePerAmountData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarHeatCapacitancePerAmountData::
        ScalarHeatCapacitancePerAmountData (const ScalarHeatCapacitancePerAmountData& x,
                                            ::xml_schema::flags f,
                                            ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarHeatCapacitancePerAmountData::
        ScalarHeatCapacitancePerAmountData (const ::xercesc::DOMElement& e,
                                            ::xml_schema::flags f,
                                            ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarHeatCapacitancePerAmountData* ScalarHeatCapacitancePerAmountData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarHeatCapacitancePerAmountData (*this, f, c);
        }

        ScalarHeatCapacitancePerAmountData::
        ~ScalarHeatCapacitancePerAmountData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarHeatCapacitancePerAmountData >
        _xsd_ScalarHeatCapacitancePerAmountData_type_factory_init (
          "ScalarHeatCapacitancePerAmountData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarHeatCapacitancePerMassData
        //

        ScalarHeatCapacitancePerMassData::
        ScalarHeatCapacitancePerMassData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarHeatCapacitancePerMassData::
        ScalarHeatCapacitancePerMassData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarHeatCapacitancePerMassData::
        ScalarHeatCapacitancePerMassData (const ScalarHeatCapacitancePerMassData& x,
                                          ::xml_schema::flags f,
                                          ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarHeatCapacitancePerMassData::
        ScalarHeatCapacitancePerMassData (const ::xercesc::DOMElement& e,
                                          ::xml_schema::flags f,
                                          ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarHeatCapacitancePerMassData* ScalarHeatCapacitancePerMassData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarHeatCapacitancePerMassData (*this, f, c);
        }

        ScalarHeatCapacitancePerMassData::
        ~ScalarHeatCapacitancePerMassData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarHeatCapacitancePerMassData >
        _xsd_ScalarHeatCapacitancePerMassData_type_factory_init (
          "ScalarHeatCapacitancePerMassData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarHeatConductanceData
        //

        ScalarHeatConductanceData::
        ScalarHeatConductanceData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarHeatConductanceData::
        ScalarHeatConductanceData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarHeatConductanceData::
        ScalarHeatConductanceData (const ScalarHeatConductanceData& x,
                                   ::xml_schema::flags f,
                                   ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarHeatConductanceData::
        ScalarHeatConductanceData (const ::xercesc::DOMElement& e,
                                   ::xml_schema::flags f,
                                   ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarHeatConductanceData* ScalarHeatConductanceData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarHeatConductanceData (*this, f, c);
        }

        ScalarHeatConductanceData::
        ~ScalarHeatConductanceData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarHeatConductanceData >
        _xsd_ScalarHeatConductanceData_type_factory_init (
          "ScalarHeatConductanceData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarHeatConductancePerAreaData
        //

        ScalarHeatConductancePerAreaData::
        ScalarHeatConductancePerAreaData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarHeatConductancePerAreaData::
        ScalarHeatConductancePerAreaData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarHeatConductancePerAreaData::
        ScalarHeatConductancePerAreaData (const ScalarHeatConductancePerAreaData& x,
                                          ::xml_schema::flags f,
                                          ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarHeatConductancePerAreaData::
        ScalarHeatConductancePerAreaData (const ::xercesc::DOMElement& e,
                                          ::xml_schema::flags f,
                                          ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarHeatConductancePerAreaData* ScalarHeatConductancePerAreaData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarHeatConductancePerAreaData (*this, f, c);
        }

        ScalarHeatConductancePerAreaData::
        ~ScalarHeatConductancePerAreaData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarHeatConductancePerAreaData >
        _xsd_ScalarHeatConductancePerAreaData_type_factory_init (
          "ScalarHeatConductancePerAreaData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarHeatInductanceData
        //

        ScalarHeatInductanceData::
        ScalarHeatInductanceData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarHeatInductanceData::
        ScalarHeatInductanceData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarHeatInductanceData::
        ScalarHeatInductanceData (const ScalarHeatInductanceData& x,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarHeatInductanceData::
        ScalarHeatInductanceData (const ::xercesc::DOMElement& e,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarHeatInductanceData* ScalarHeatInductanceData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarHeatInductanceData (*this, f, c);
        }

        ScalarHeatInductanceData::
        ~ScalarHeatInductanceData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarHeatInductanceData >
        _xsd_ScalarHeatInductanceData_type_factory_init (
          "ScalarHeatInductanceData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarHeatResistanceData
        //

        ScalarHeatResistanceData::
        ScalarHeatResistanceData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarHeatResistanceData::
        ScalarHeatResistanceData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarHeatResistanceData::
        ScalarHeatResistanceData (const ScalarHeatResistanceData& x,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarHeatResistanceData::
        ScalarHeatResistanceData (const ::xercesc::DOMElement& e,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarHeatResistanceData* ScalarHeatResistanceData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarHeatResistanceData (*this, f, c);
        }

        ScalarHeatResistanceData::
        ~ScalarHeatResistanceData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarHeatResistanceData >
        _xsd_ScalarHeatResistanceData_type_factory_init (
          "ScalarHeatResistanceData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarHeatResistanceAreaData
        //

        ScalarHeatResistanceAreaData::
        ScalarHeatResistanceAreaData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarHeatResistanceAreaData::
        ScalarHeatResistanceAreaData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarHeatResistanceAreaData::
        ScalarHeatResistanceAreaData (const ScalarHeatResistanceAreaData& x,
                                      ::xml_schema::flags f,
                                      ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarHeatResistanceAreaData::
        ScalarHeatResistanceAreaData (const ::xercesc::DOMElement& e,
                                      ::xml_schema::flags f,
                                      ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarHeatResistanceAreaData* ScalarHeatResistanceAreaData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarHeatResistanceAreaData (*this, f, c);
        }

        ScalarHeatResistanceAreaData::
        ~ScalarHeatResistanceAreaData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarHeatResistanceAreaData >
        _xsd_ScalarHeatResistanceAreaData_type_factory_init (
          "ScalarHeatResistanceAreaData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarInversePressureData
        //

        ScalarInversePressureData::
        ScalarInversePressureData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarInversePressureData::
        ScalarInversePressureData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarInversePressureData::
        ScalarInversePressureData (const ScalarInversePressureData& x,
                                   ::xml_schema::flags f,
                                   ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarInversePressureData::
        ScalarInversePressureData (const ::xercesc::DOMElement& e,
                                   ::xml_schema::flags f,
                                   ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarInversePressureData* ScalarInversePressureData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarInversePressureData (*this, f, c);
        }

        ScalarInversePressureData::
        ~ScalarInversePressureData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarInversePressureData >
        _xsd_ScalarInversePressureData_type_factory_init (
          "ScalarInversePressureData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarInverseVolumeData
        //

        ScalarInverseVolumeData::
        ScalarInverseVolumeData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarInverseVolumeData::
        ScalarInverseVolumeData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarInverseVolumeData::
        ScalarInverseVolumeData (const ScalarInverseVolumeData& x,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarInverseVolumeData::
        ScalarInverseVolumeData (const ::xercesc::DOMElement& e,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarInverseVolumeData* ScalarInverseVolumeData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarInverseVolumeData (*this, f, c);
        }

        ScalarInverseVolumeData::
        ~ScalarInverseVolumeData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarInverseVolumeData >
        _xsd_ScalarInverseVolumeData_type_factory_init (
          "ScalarInverseVolumeData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarLengthData
        //

        ScalarLengthData::
        ScalarLengthData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarLengthData::
        ScalarLengthData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarLengthData::
        ScalarLengthData (const ScalarLengthData& x,
                          ::xml_schema::flags f,
                          ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarLengthData::
        ScalarLengthData (const ::xercesc::DOMElement& e,
                          ::xml_schema::flags f,
                          ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarLengthData* ScalarLengthData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarLengthData (*this, f, c);
        }

        ScalarLengthData::
        ~ScalarLengthData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarLengthData >
        _xsd_ScalarLengthData_type_factory_init (
          "ScalarLengthData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarLengthPerTimeData
        //

        ScalarLengthPerTimeData::
        ScalarLengthPerTimeData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarLengthPerTimeData::
        ScalarLengthPerTimeData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarLengthPerTimeData::
        ScalarLengthPerTimeData (const ScalarLengthPerTimeData& x,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarLengthPerTimeData::
        ScalarLengthPerTimeData (const ::xercesc::DOMElement& e,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarLengthPerTimeData* ScalarLengthPerTimeData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarLengthPerTimeData (*this, f, c);
        }

        ScalarLengthPerTimeData::
        ~ScalarLengthPerTimeData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarLengthPerTimeData >
        _xsd_ScalarLengthPerTimeData_type_factory_init (
          "ScalarLengthPerTimeData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarLengthPerTimePressureData
        //

        ScalarLengthPerTimePressureData::
        ScalarLengthPerTimePressureData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarLengthPerTimePressureData::
        ScalarLengthPerTimePressureData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarLengthPerTimePressureData::
        ScalarLengthPerTimePressureData (const ScalarLengthPerTimePressureData& x,
                                         ::xml_schema::flags f,
                                         ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarLengthPerTimePressureData::
        ScalarLengthPerTimePressureData (const ::xercesc::DOMElement& e,
                                         ::xml_schema::flags f,
                                         ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarLengthPerTimePressureData* ScalarLengthPerTimePressureData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarLengthPerTimePressureData (*this, f, c);
        }

        ScalarLengthPerTimePressureData::
        ~ScalarLengthPerTimePressureData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarLengthPerTimePressureData >
        _xsd_ScalarLengthPerTimePressureData_type_factory_init (
          "ScalarLengthPerTimePressureData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarMassData
        //

        ScalarMassData::
        ScalarMassData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarMassData::
        ScalarMassData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarMassData::
        ScalarMassData (const ScalarMassData& x,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarMassData::
        ScalarMassData (const ::xercesc::DOMElement& e,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarMassData* ScalarMassData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarMassData (*this, f, c);
        }

        ScalarMassData::
        ~ScalarMassData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarMassData >
        _xsd_ScalarMassData_type_factory_init (
          "ScalarMassData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarMassPerAmountData
        //

        ScalarMassPerAmountData::
        ScalarMassPerAmountData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarMassPerAmountData::
        ScalarMassPerAmountData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarMassPerAmountData::
        ScalarMassPerAmountData (const ScalarMassPerAmountData& x,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarMassPerAmountData::
        ScalarMassPerAmountData (const ::xercesc::DOMElement& e,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarMassPerAmountData* ScalarMassPerAmountData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarMassPerAmountData (*this, f, c);
        }

        ScalarMassPerAmountData::
        ~ScalarMassPerAmountData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarMassPerAmountData >
        _xsd_ScalarMassPerAmountData_type_factory_init (
          "ScalarMassPerAmountData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarMassPerAreaTimeData
        //

        ScalarMassPerAreaTimeData::
        ScalarMassPerAreaTimeData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarMassPerAreaTimeData::
        ScalarMassPerAreaTimeData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarMassPerAreaTimeData::
        ScalarMassPerAreaTimeData (const ScalarMassPerAreaTimeData& x,
                                   ::xml_schema::flags f,
                                   ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarMassPerAreaTimeData::
        ScalarMassPerAreaTimeData (const ::xercesc::DOMElement& e,
                                   ::xml_schema::flags f,
                                   ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarMassPerAreaTimeData* ScalarMassPerAreaTimeData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarMassPerAreaTimeData (*this, f, c);
        }

        ScalarMassPerAreaTimeData::
        ~ScalarMassPerAreaTimeData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarMassPerAreaTimeData >
        _xsd_ScalarMassPerAreaTimeData_type_factory_init (
          "ScalarMassPerAreaTimeData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarMassPerMassData
        //

        ScalarMassPerMassData::
        ScalarMassPerMassData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarMassPerMassData::
        ScalarMassPerMassData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarMassPerMassData::
        ScalarMassPerMassData (const ScalarMassPerMassData& x,
                               ::xml_schema::flags f,
                               ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarMassPerMassData::
        ScalarMassPerMassData (const ::xercesc::DOMElement& e,
                               ::xml_schema::flags f,
                               ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarMassPerMassData* ScalarMassPerMassData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarMassPerMassData (*this, f, c);
        }

        ScalarMassPerMassData::
        ~ScalarMassPerMassData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarMassPerMassData >
        _xsd_ScalarMassPerMassData_type_factory_init (
          "ScalarMassPerMassData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarMassPerTimeData
        //

        ScalarMassPerTimeData::
        ScalarMassPerTimeData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarMassPerTimeData::
        ScalarMassPerTimeData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarMassPerTimeData::
        ScalarMassPerTimeData (const ScalarMassPerTimeData& x,
                               ::xml_schema::flags f,
                               ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarMassPerTimeData::
        ScalarMassPerTimeData (const ::xercesc::DOMElement& e,
                               ::xml_schema::flags f,
                               ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarMassPerTimeData* ScalarMassPerTimeData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarMassPerTimeData (*this, f, c);
        }

        ScalarMassPerTimeData::
        ~ScalarMassPerTimeData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarMassPerTimeData >
        _xsd_ScalarMassPerTimeData_type_factory_init (
          "ScalarMassPerTimeData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarMassPerVolumeData
        //

        ScalarMassPerVolumeData::
        ScalarMassPerVolumeData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarMassPerVolumeData::
        ScalarMassPerVolumeData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarMassPerVolumeData::
        ScalarMassPerVolumeData (const ScalarMassPerVolumeData& x,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarMassPerVolumeData::
        ScalarMassPerVolumeData (const ::xercesc::DOMElement& e,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarMassPerVolumeData* ScalarMassPerVolumeData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarMassPerVolumeData (*this, f, c);
        }

        ScalarMassPerVolumeData::
        ~ScalarMassPerVolumeData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarMassPerVolumeData >
        _xsd_ScalarMassPerVolumeData_type_factory_init (
          "ScalarMassPerVolumeData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarTimeMassPerVolumeData
        //

        ScalarTimeMassPerVolumeData::
        ScalarTimeMassPerVolumeData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarTimeMassPerVolumeData::
        ScalarTimeMassPerVolumeData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarTimeMassPerVolumeData::
        ScalarTimeMassPerVolumeData (const ScalarTimeMassPerVolumeData& x,
                                     ::xml_schema::flags f,
                                     ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarTimeMassPerVolumeData::
        ScalarTimeMassPerVolumeData (const ::xercesc::DOMElement& e,
                                     ::xml_schema::flags f,
                                     ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarTimeMassPerVolumeData* ScalarTimeMassPerVolumeData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarTimeMassPerVolumeData (*this, f, c);
        }

        ScalarTimeMassPerVolumeData::
        ~ScalarTimeMassPerVolumeData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarTimeMassPerVolumeData >
        _xsd_ScalarTimeMassPerVolumeData_type_factory_init (
          "ScalarTimeMassPerVolumeData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarOsmolalityData
        //

        ScalarOsmolalityData::
        ScalarOsmolalityData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarOsmolalityData::
        ScalarOsmolalityData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarOsmolalityData::
        ScalarOsmolalityData (const ScalarOsmolalityData& x,
                              ::xml_schema::flags f,
                              ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarOsmolalityData::
        ScalarOsmolalityData (const ::xercesc::DOMElement& e,
                              ::xml_schema::flags f,
                              ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarOsmolalityData* ScalarOsmolalityData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarOsmolalityData (*this, f, c);
        }

        ScalarOsmolalityData::
        ~ScalarOsmolalityData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarOsmolalityData >
        _xsd_ScalarOsmolalityData_type_factory_init (
          "ScalarOsmolalityData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarOsmolarityData
        //

        ScalarOsmolarityData::
        ScalarOsmolarityData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarOsmolarityData::
        ScalarOsmolarityData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarOsmolarityData::
        ScalarOsmolarityData (const ScalarOsmolarityData& x,
                              ::xml_schema::flags f,
                              ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarOsmolarityData::
        ScalarOsmolarityData (const ::xercesc::DOMElement& e,
                              ::xml_schema::flags f,
                              ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarOsmolarityData* ScalarOsmolarityData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarOsmolarityData (*this, f, c);
        }

        ScalarOsmolarityData::
        ~ScalarOsmolarityData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarOsmolarityData >
        _xsd_ScalarOsmolarityData_type_factory_init (
          "ScalarOsmolarityData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarPowerData
        //

        ScalarPowerData::
        ScalarPowerData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarPowerData::
        ScalarPowerData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarPowerData::
        ScalarPowerData (const ScalarPowerData& x,
                         ::xml_schema::flags f,
                         ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarPowerData::
        ScalarPowerData (const ::xercesc::DOMElement& e,
                         ::xml_schema::flags f,
                         ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarPowerData* ScalarPowerData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarPowerData (*this, f, c);
        }

        ScalarPowerData::
        ~ScalarPowerData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarPowerData >
        _xsd_ScalarPowerData_type_factory_init (
          "ScalarPowerData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarPowerPerAreaTemperatureToTheFourthData
        //

        ScalarPowerPerAreaTemperatureToTheFourthData::
        ScalarPowerPerAreaTemperatureToTheFourthData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarPowerPerAreaTemperatureToTheFourthData::
        ScalarPowerPerAreaTemperatureToTheFourthData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarPowerPerAreaTemperatureToTheFourthData::
        ScalarPowerPerAreaTemperatureToTheFourthData (const ScalarPowerPerAreaTemperatureToTheFourthData& x,
                                                      ::xml_schema::flags f,
                                                      ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarPowerPerAreaTemperatureToTheFourthData::
        ScalarPowerPerAreaTemperatureToTheFourthData (const ::xercesc::DOMElement& e,
                                                      ::xml_schema::flags f,
                                                      ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarPowerPerAreaTemperatureToTheFourthData* ScalarPowerPerAreaTemperatureToTheFourthData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarPowerPerAreaTemperatureToTheFourthData (*this, f, c);
        }

        ScalarPowerPerAreaTemperatureToTheFourthData::
        ~ScalarPowerPerAreaTemperatureToTheFourthData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarPowerPerAreaTemperatureToTheFourthData >
        _xsd_ScalarPowerPerAreaTemperatureToTheFourthData_type_factory_init (
          "ScalarPowerPerAreaTemperatureToTheFourthData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarPressureData
        //

        ScalarPressureData::
        ScalarPressureData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarPressureData::
        ScalarPressureData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarPressureData::
        ScalarPressureData (const ScalarPressureData& x,
                            ::xml_schema::flags f,
                            ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarPressureData::
        ScalarPressureData (const ::xercesc::DOMElement& e,
                            ::xml_schema::flags f,
                            ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarPressureData* ScalarPressureData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarPressureData (*this, f, c);
        }

        ScalarPressureData::
        ~ScalarPressureData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarPressureData >
        _xsd_ScalarPressureData_type_factory_init (
          "ScalarPressureData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarPressurePerVolumeData
        //

        ScalarPressurePerVolumeData::
        ScalarPressurePerVolumeData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarPressurePerVolumeData::
        ScalarPressurePerVolumeData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarPressurePerVolumeData::
        ScalarPressurePerVolumeData (const ScalarPressurePerVolumeData& x,
                                     ::xml_schema::flags f,
                                     ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarPressurePerVolumeData::
        ScalarPressurePerVolumeData (const ::xercesc::DOMElement& e,
                                     ::xml_schema::flags f,
                                     ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarPressurePerVolumeData* ScalarPressurePerVolumeData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarPressurePerVolumeData (*this, f, c);
        }

        ScalarPressurePerVolumeData::
        ~ScalarPressurePerVolumeData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarPressurePerVolumeData >
        _xsd_ScalarPressurePerVolumeData_type_factory_init (
          "ScalarPressurePerVolumeData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarPressureTimePerVolumeAreaData
        //

        ScalarPressureTimePerVolumeAreaData::
        ScalarPressureTimePerVolumeAreaData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarPressureTimePerVolumeAreaData::
        ScalarPressureTimePerVolumeAreaData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarPressureTimePerVolumeAreaData::
        ScalarPressureTimePerVolumeAreaData (const ScalarPressureTimePerVolumeAreaData& x,
                                             ::xml_schema::flags f,
                                             ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarPressureTimePerVolumeAreaData::
        ScalarPressureTimePerVolumeAreaData (const ::xercesc::DOMElement& e,
                                             ::xml_schema::flags f,
                                             ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarPressureTimePerVolumeAreaData* ScalarPressureTimePerVolumeAreaData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarPressureTimePerVolumeAreaData (*this, f, c);
        }

        ScalarPressureTimePerVolumeAreaData::
        ~ScalarPressureTimePerVolumeAreaData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarPressureTimePerVolumeAreaData >
        _xsd_ScalarPressureTimePerVolumeAreaData_type_factory_init (
          "ScalarPressureTimePerVolumeAreaData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarPressureTimePerAreaData
        //

        ScalarPressureTimePerAreaData::
        ScalarPressureTimePerAreaData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarPressureTimePerAreaData::
        ScalarPressureTimePerAreaData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarPressureTimePerAreaData::
        ScalarPressureTimePerAreaData (const ScalarPressureTimePerAreaData& x,
                                       ::xml_schema::flags f,
                                       ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarPressureTimePerAreaData::
        ScalarPressureTimePerAreaData (const ::xercesc::DOMElement& e,
                                       ::xml_schema::flags f,
                                       ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarPressureTimePerAreaData* ScalarPressureTimePerAreaData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarPressureTimePerAreaData (*this, f, c);
        }

        ScalarPressureTimePerAreaData::
        ~ScalarPressureTimePerAreaData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarPressureTimePerAreaData >
        _xsd_ScalarPressureTimePerAreaData_type_factory_init (
          "ScalarPressureTimePerAreaData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarTimeData
        //

        ScalarTimeData::
        ScalarTimeData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarTimeData::
        ScalarTimeData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarTimeData::
        ScalarTimeData (const ScalarTimeData& x,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarTimeData::
        ScalarTimeData (const ::xercesc::DOMElement& e,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarTimeData* ScalarTimeData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarTimeData (*this, f, c);
        }

        ScalarTimeData::
        ~ScalarTimeData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarTimeData >
        _xsd_ScalarTimeData_type_factory_init (
          "ScalarTimeData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarTemperatureData
        //

        ScalarTemperatureData::
        ScalarTemperatureData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarTemperatureData::
        ScalarTemperatureData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarTemperatureData::
        ScalarTemperatureData (const ScalarTemperatureData& x,
                               ::xml_schema::flags f,
                               ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarTemperatureData::
        ScalarTemperatureData (const ::xercesc::DOMElement& e,
                               ::xml_schema::flags f,
                               ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarTemperatureData* ScalarTemperatureData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarTemperatureData (*this, f, c);
        }

        ScalarTemperatureData::
        ~ScalarTemperatureData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarTemperatureData >
        _xsd_ScalarTemperatureData_type_factory_init (
          "ScalarTemperatureData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarVolumeData
        //

        ScalarVolumeData::
        ScalarVolumeData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarVolumeData::
        ScalarVolumeData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarVolumeData::
        ScalarVolumeData (const ScalarVolumeData& x,
                          ::xml_schema::flags f,
                          ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarVolumeData::
        ScalarVolumeData (const ::xercesc::DOMElement& e,
                          ::xml_schema::flags f,
                          ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarVolumeData* ScalarVolumeData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarVolumeData (*this, f, c);
        }

        ScalarVolumeData::
        ~ScalarVolumeData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarVolumeData >
        _xsd_ScalarVolumeData_type_factory_init (
          "ScalarVolumeData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarVolumePerTimeData
        //

        ScalarVolumePerTimeData::
        ScalarVolumePerTimeData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarVolumePerTimeData::
        ScalarVolumePerTimeData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarVolumePerTimeData::
        ScalarVolumePerTimeData (const ScalarVolumePerTimeData& x,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarVolumePerTimeData::
        ScalarVolumePerTimeData (const ::xercesc::DOMElement& e,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarVolumePerTimeData* ScalarVolumePerTimeData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarVolumePerTimeData (*this, f, c);
        }

        ScalarVolumePerTimeData::
        ~ScalarVolumePerTimeData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarVolumePerTimeData >
        _xsd_ScalarVolumePerTimeData_type_factory_init (
          "ScalarVolumePerTimeData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarVolumePerPressureData
        //

        ScalarVolumePerPressureData::
        ScalarVolumePerPressureData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarVolumePerPressureData::
        ScalarVolumePerPressureData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarVolumePerPressureData::
        ScalarVolumePerPressureData (const ScalarVolumePerPressureData& x,
                                     ::xml_schema::flags f,
                                     ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarVolumePerPressureData::
        ScalarVolumePerPressureData (const ::xercesc::DOMElement& e,
                                     ::xml_schema::flags f,
                                     ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarVolumePerPressureData* ScalarVolumePerPressureData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarVolumePerPressureData (*this, f, c);
        }

        ScalarVolumePerPressureData::
        ~ScalarVolumePerPressureData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarVolumePerPressureData >
        _xsd_ScalarVolumePerPressureData_type_factory_init (
          "ScalarVolumePerPressureData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarVolumePerTimeAreaData
        //

        ScalarVolumePerTimeAreaData::
        ScalarVolumePerTimeAreaData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarVolumePerTimeAreaData::
        ScalarVolumePerTimeAreaData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarVolumePerTimeAreaData::
        ScalarVolumePerTimeAreaData (const ScalarVolumePerTimeAreaData& x,
                                     ::xml_schema::flags f,
                                     ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarVolumePerTimeAreaData::
        ScalarVolumePerTimeAreaData (const ::xercesc::DOMElement& e,
                                     ::xml_schema::flags f,
                                     ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarVolumePerTimeAreaData* ScalarVolumePerTimeAreaData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarVolumePerTimeAreaData (*this, f, c);
        }

        ScalarVolumePerTimeAreaData::
        ~ScalarVolumePerTimeAreaData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarVolumePerTimeAreaData >
        _xsd_ScalarVolumePerTimeAreaData_type_factory_init (
          "ScalarVolumePerTimeAreaData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarVolumePerTimeMassData
        //

        ScalarVolumePerTimeMassData::
        ScalarVolumePerTimeMassData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarVolumePerTimeMassData::
        ScalarVolumePerTimeMassData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarVolumePerTimeMassData::
        ScalarVolumePerTimeMassData (const ScalarVolumePerTimeMassData& x,
                                     ::xml_schema::flags f,
                                     ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarVolumePerTimeMassData::
        ScalarVolumePerTimeMassData (const ::xercesc::DOMElement& e,
                                     ::xml_schema::flags f,
                                     ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarVolumePerTimeMassData* ScalarVolumePerTimeMassData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarVolumePerTimeMassData (*this, f, c);
        }

        ScalarVolumePerTimeMassData::
        ~ScalarVolumePerTimeMassData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarVolumePerTimeMassData >
        _xsd_ScalarVolumePerTimeMassData_type_factory_init (
          "ScalarVolumePerTimeMassData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarVolumePerTimePressureData
        //

        ScalarVolumePerTimePressureData::
        ScalarVolumePerTimePressureData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarVolumePerTimePressureData::
        ScalarVolumePerTimePressureData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarVolumePerTimePressureData::
        ScalarVolumePerTimePressureData (const ScalarVolumePerTimePressureData& x,
                                         ::xml_schema::flags f,
                                         ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarVolumePerTimePressureData::
        ScalarVolumePerTimePressureData (const ::xercesc::DOMElement& e,
                                         ::xml_schema::flags f,
                                         ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarVolumePerTimePressureData* ScalarVolumePerTimePressureData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarVolumePerTimePressureData (*this, f, c);
        }

        ScalarVolumePerTimePressureData::
        ~ScalarVolumePerTimePressureData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarVolumePerTimePressureData >
        _xsd_ScalarVolumePerTimePressureData_type_factory_init (
          "ScalarVolumePerTimePressureData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ScalarVolumePerTimePressureAreaData
        //

        ScalarVolumePerTimePressureAreaData::
        ScalarVolumePerTimePressureAreaData ()
        : ::mil::tatrc::physiology::datamodel::ScalarData ()
        {
        }

        ScalarVolumePerTimePressureAreaData::
        ScalarVolumePerTimePressureAreaData (const value_type& value)
        : ::mil::tatrc::physiology::datamodel::ScalarData (value)
        {
        }

        ScalarVolumePerTimePressureAreaData::
        ScalarVolumePerTimePressureAreaData (const ScalarVolumePerTimePressureAreaData& x,
                                             ::xml_schema::flags f,
                                             ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (x, f, c)
        {
        }

        ScalarVolumePerTimePressureAreaData::
        ScalarVolumePerTimePressureAreaData (const ::xercesc::DOMElement& e,
                                             ::xml_schema::flags f,
                                             ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ScalarData (e, f, c)
        {
        }

        ScalarVolumePerTimePressureAreaData* ScalarVolumePerTimePressureAreaData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ScalarVolumePerTimePressureAreaData (*this, f, c);
        }

        ScalarVolumePerTimePressureAreaData::
        ~ScalarVolumePerTimePressureAreaData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ScalarVolumePerTimePressureAreaData >
        _xsd_ScalarVolumePerTimePressureAreaData_type_factory_init (
          "ScalarVolumePerTimePressureAreaData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ArrayData
        //

        ArrayData::
        ArrayData ()
        : ::mil::tatrc::physiology::datamodel::PropertyData (),
          Value_ (this),
          unit_ (this)
        {
        }

        ArrayData::
        ArrayData (const Value_type& Value)
        : ::mil::tatrc::physiology::datamodel::PropertyData (),
          Value_ (Value, this),
          unit_ (this)
        {
        }

        ArrayData::
        ArrayData (::std::unique_ptr< Value_type > Value)
        : ::mil::tatrc::physiology::datamodel::PropertyData (),
          Value_ (std::move (Value), this),
          unit_ (this)
        {
        }

        ArrayData::
        ArrayData (const ArrayData& x,
                   ::xml_schema::flags f,
                   ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::PropertyData (x, f, c),
          Value_ (x.Value_, f, this),
          unit_ (x.unit_, f, this)
        {
        }

        ArrayData::
        ArrayData (const ::xercesc::DOMElement& e,
                   ::xml_schema::flags f,
                   ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::PropertyData (e, f | ::xml_schema::flags::base, c),
          Value_ (this),
          unit_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
            this->parse (p, f);
          }
        }

        void ArrayData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          for (; p.more_content (); p.next_content (false))
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // Value
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "Value",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< Value_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!Value_.present ())
                {
                  ::std::unique_ptr< Value_type > r (
                    dynamic_cast< Value_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->Value_.set (::std::move (r));
                  continue;
                }
              }
            }

            break;
          }

          if (!Value_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "Value",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          while (p.more_attributes ())
          {
            const ::xercesc::DOMAttr& i (p.next_attribute ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            if (n.name () == "unit" && n.namespace_ ().empty ())
            {
              this->unit_.set (unit_traits::create (i, f, this));
              continue;
            }
          }
        }

        ArrayData* ArrayData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ArrayData (*this, f, c);
        }

        ArrayData& ArrayData::
        operator= (const ArrayData& x)
        {
          if (this != &x)
          {
            static_cast< ::mil::tatrc::physiology::datamodel::PropertyData& > (*this) = x;
            this->Value_ = x.Value_;
            this->unit_ = x.unit_;
          }

          return *this;
        }

        ArrayData::
        ~ArrayData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ArrayData >
        _xsd_ArrayData_type_factory_init (
          "ArrayData",
          "uri:/mil/tatrc/physiology/datamodel");

        // ArrayTimeData
        //

        ArrayTimeData::
        ArrayTimeData ()
        : ::mil::tatrc::physiology::datamodel::ArrayData ()
        {
        }

        ArrayTimeData::
        ArrayTimeData (const Value_type& Value)
        : ::mil::tatrc::physiology::datamodel::ArrayData (Value)
        {
        }

        ArrayTimeData::
        ArrayTimeData (::std::unique_ptr< Value_type > Value)
        : ::mil::tatrc::physiology::datamodel::ArrayData (std::move (Value))
        {
        }

        ArrayTimeData::
        ArrayTimeData (const ArrayTimeData& x,
                       ::xml_schema::flags f,
                       ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ArrayData (x, f, c)
        {
        }

        ArrayTimeData::
        ArrayTimeData (const ::xercesc::DOMElement& e,
                       ::xml_schema::flags f,
                       ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ArrayData (e, f, c)
        {
        }

        ArrayTimeData* ArrayTimeData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class ArrayTimeData (*this, f, c);
        }

        ArrayTimeData::
        ~ArrayTimeData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, ArrayTimeData >
        _xsd_ArrayTimeData_type_factory_init (
          "ArrayTimeData",
          "uri:/mil/tatrc/physiology/datamodel");

        // FunctionData
        //

        FunctionData::
        FunctionData ()
        : ::mil::tatrc::physiology::datamodel::PropertyData (),
          Dependent_ (this),
          Independent_ (this),
          DependentUnit_ (this),
          IndependentUnit_ (this)
        {
        }

        FunctionData::
        FunctionData (const Dependent_type& Dependent,
                      const Independent_type& Independent)
        : ::mil::tatrc::physiology::datamodel::PropertyData (),
          Dependent_ (Dependent, this),
          Independent_ (Independent, this),
          DependentUnit_ (this),
          IndependentUnit_ (this)
        {
        }

        FunctionData::
        FunctionData (::std::unique_ptr< Dependent_type > Dependent,
                      ::std::unique_ptr< Independent_type > Independent)
        : ::mil::tatrc::physiology::datamodel::PropertyData (),
          Dependent_ (std::move (Dependent), this),
          Independent_ (std::move (Independent), this),
          DependentUnit_ (this),
          IndependentUnit_ (this)
        {
        }

        FunctionData::
        FunctionData (const FunctionData& x,
                      ::xml_schema::flags f,
                      ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::PropertyData (x, f, c),
          Dependent_ (x.Dependent_, f, this),
          Independent_ (x.Independent_, f, this),
          DependentUnit_ (x.DependentUnit_, f, this),
          IndependentUnit_ (x.IndependentUnit_, f, this)
        {
        }

        FunctionData::
        FunctionData (const ::xercesc::DOMElement& e,
                      ::xml_schema::flags f,
                      ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::PropertyData (e, f | ::xml_schema::flags::base, c),
          Dependent_ (this),
          Independent_ (this),
          DependentUnit_ (this),
          IndependentUnit_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
            this->parse (p, f);
          }
        }

        void FunctionData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          for (; p.more_content (); p.next_content (false))
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // Dependent
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "Dependent",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< Dependent_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!Dependent_.present ())
                {
                  ::std::unique_ptr< Dependent_type > r (
                    dynamic_cast< Dependent_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->Dependent_.set (::std::move (r));
                  continue;
                }
              }
            }

            // Independent
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "Independent",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< Independent_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!Independent_.present ())
                {
                  ::std::unique_ptr< Independent_type > r (
                    dynamic_cast< Independent_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->Independent_.set (::std::move (r));
                  continue;
                }
              }
            }

            break;
          }

          if (!Dependent_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "Dependent",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!Independent_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "Independent",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          while (p.more_attributes ())
          {
            const ::xercesc::DOMAttr& i (p.next_attribute ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            if (n.name () == "DependentUnit" && n.namespace_ ().empty ())
            {
              this->DependentUnit_.set (DependentUnit_traits::create (i, f, this));
              continue;
            }

            if (n.name () == "IndependentUnit" && n.namespace_ ().empty ())
            {
              this->IndependentUnit_.set (IndependentUnit_traits::create (i, f, this));
              continue;
            }
          }
        }

        FunctionData* FunctionData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class FunctionData (*this, f, c);
        }

        FunctionData& FunctionData::
        operator= (const FunctionData& x)
        {
          if (this != &x)
          {
            static_cast< ::mil::tatrc::physiology::datamodel::PropertyData& > (*this) = x;
            this->Dependent_ = x.Dependent_;
            this->Independent_ = x.Independent_;
            this->DependentUnit_ = x.DependentUnit_;
            this->IndependentUnit_ = x.IndependentUnit_;
          }

          return *this;
        }

        FunctionData::
        ~FunctionData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, FunctionData >
        _xsd_FunctionData_type_factory_init (
          "FunctionData",
          "uri:/mil/tatrc/physiology/datamodel");

        // FunctionVolumeVsTimeData
        //

        FunctionVolumeVsTimeData::
        FunctionVolumeVsTimeData ()
        : ::mil::tatrc::physiology::datamodel::FunctionData ()
        {
        }

        FunctionVolumeVsTimeData::
        FunctionVolumeVsTimeData (const Dependent_type& Dependent,
                                  const Independent_type& Independent)
        : ::mil::tatrc::physiology::datamodel::FunctionData (Dependent,
                                                             Independent)
        {
        }

        FunctionVolumeVsTimeData::
        FunctionVolumeVsTimeData (::std::unique_ptr< Dependent_type > Dependent,
                                  ::std::unique_ptr< Independent_type > Independent)
        : ::mil::tatrc::physiology::datamodel::FunctionData (std::move (Dependent),
                                                             std::move (Independent))
        {
        }

        FunctionVolumeVsTimeData::
        FunctionVolumeVsTimeData (const FunctionVolumeVsTimeData& x,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::FunctionData (x, f, c)
        {
        }

        FunctionVolumeVsTimeData::
        FunctionVolumeVsTimeData (const ::xercesc::DOMElement& e,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::FunctionData (e, f, c)
        {
        }

        FunctionVolumeVsTimeData* FunctionVolumeVsTimeData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class FunctionVolumeVsTimeData (*this, f, c);
        }

        FunctionVolumeVsTimeData::
        ~FunctionVolumeVsTimeData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, FunctionVolumeVsTimeData >
        _xsd_FunctionVolumeVsTimeData_type_factory_init (
          "FunctionVolumeVsTimeData",
          "uri:/mil/tatrc/physiology/datamodel");

        // FunctionElectricPotentialVsTimeData
        //

        FunctionElectricPotentialVsTimeData::
        FunctionElectricPotentialVsTimeData ()
        : ::mil::tatrc::physiology::datamodel::FunctionData ()
        {
        }

        FunctionElectricPotentialVsTimeData::
        FunctionElectricPotentialVsTimeData (const Dependent_type& Dependent,
                                             const Independent_type& Independent)
        : ::mil::tatrc::physiology::datamodel::FunctionData (Dependent,
                                                             Independent)
        {
        }

        FunctionElectricPotentialVsTimeData::
        FunctionElectricPotentialVsTimeData (::std::unique_ptr< Dependent_type > Dependent,
                                             ::std::unique_ptr< Independent_type > Independent)
        : ::mil::tatrc::physiology::datamodel::FunctionData (std::move (Dependent),
                                                             std::move (Independent))
        {
        }

        FunctionElectricPotentialVsTimeData::
        FunctionElectricPotentialVsTimeData (const FunctionElectricPotentialVsTimeData& x,
                                             ::xml_schema::flags f,
                                             ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::FunctionData (x, f, c)
        {
        }

        FunctionElectricPotentialVsTimeData::
        FunctionElectricPotentialVsTimeData (const ::xercesc::DOMElement& e,
                                             ::xml_schema::flags f,
                                             ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::FunctionData (e, f, c)
        {
        }

        FunctionElectricPotentialVsTimeData* FunctionElectricPotentialVsTimeData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class FunctionElectricPotentialVsTimeData (*this, f, c);
        }

        FunctionElectricPotentialVsTimeData::
        ~FunctionElectricPotentialVsTimeData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, FunctionElectricPotentialVsTimeData >
        _xsd_FunctionElectricPotentialVsTimeData_type_factory_init (
          "FunctionElectricPotentialVsTimeData",
          "uri:/mil/tatrc/physiology/datamodel");

        // HistogramData
        //

        HistogramData::
        HistogramData ()
        : ::mil::tatrc::physiology::datamodel::FunctionData ()
        {
        }

        HistogramData::
        HistogramData (const Dependent_type& Dependent,
                       const Independent_type& Independent)
        : ::mil::tatrc::physiology::datamodel::FunctionData (Dependent,
                                                             Independent)
        {
        }

        HistogramData::
        HistogramData (::std::unique_ptr< Dependent_type > Dependent,
                       ::std::unique_ptr< Independent_type > Independent)
        : ::mil::tatrc::physiology::datamodel::FunctionData (std::move (Dependent),
                                                             std::move (Independent))
        {
        }

        HistogramData::
        HistogramData (const HistogramData& x,
                       ::xml_schema::flags f,
                       ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::FunctionData (x, f, c)
        {
        }

        HistogramData::
        HistogramData (const ::xercesc::DOMElement& e,
                       ::xml_schema::flags f,
                       ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::FunctionData (e, f, c)
        {
        }

        HistogramData* HistogramData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class HistogramData (*this, f, c);
        }

        HistogramData::
        ~HistogramData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, HistogramData >
        _xsd_HistogramData_type_factory_init (
          "HistogramData",
          "uri:/mil/tatrc/physiology/datamodel");

        // HistogramFractionVsLengthData
        //

        HistogramFractionVsLengthData::
        HistogramFractionVsLengthData ()
        : ::mil::tatrc::physiology::datamodel::HistogramData ()
        {
        }

        HistogramFractionVsLengthData::
        HistogramFractionVsLengthData (const Dependent_type& Dependent,
                                       const Independent_type& Independent)
        : ::mil::tatrc::physiology::datamodel::HistogramData (Dependent,
                                                              Independent)
        {
        }

        HistogramFractionVsLengthData::
        HistogramFractionVsLengthData (::std::unique_ptr< Dependent_type > Dependent,
                                       ::std::unique_ptr< Independent_type > Independent)
        : ::mil::tatrc::physiology::datamodel::HistogramData (std::move (Dependent),
                                                              std::move (Independent))
        {
        }

        HistogramFractionVsLengthData::
        HistogramFractionVsLengthData (const HistogramFractionVsLengthData& x,
                                       ::xml_schema::flags f,
                                       ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::HistogramData (x, f, c)
        {
        }

        HistogramFractionVsLengthData::
        HistogramFractionVsLengthData (const ::xercesc::DOMElement& e,
                                       ::xml_schema::flags f,
                                       ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::HistogramData (e, f, c)
        {
        }

        HistogramFractionVsLengthData* HistogramFractionVsLengthData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class HistogramFractionVsLengthData (*this, f, c);
        }

        HistogramFractionVsLengthData::
        ~HistogramFractionVsLengthData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, HistogramFractionVsLengthData >
        _xsd_HistogramFractionVsLengthData_type_factory_init (
          "HistogramFractionVsLengthData",
          "uri:/mil/tatrc/physiology/datamodel");

        // IntegerList
        //

        IntegerList::
        IntegerList (const ::xercesc::DOMElement& e,
                     ::xml_schema::flags f,
                     ::xml_schema::container* c)
        : ::xml_schema::simple_type (e, f, c),
          ::xsd::cxx::tree::list< ::xml_schema::int_, char > (e, f, this)
        {
        }

        IntegerList::
        IntegerList (const ::xercesc::DOMAttr& a,
                     ::xml_schema::flags f,
                     ::xml_schema::container* c)
        : ::xml_schema::simple_type (a, f, c),
          ::xsd::cxx::tree::list< ::xml_schema::int_, char > (a, f, this)
        {
        }

        IntegerList::
        IntegerList (const ::std::string& s,
                     const ::xercesc::DOMElement* e,
                     ::xml_schema::flags f,
                     ::xml_schema::container* c)
        : ::xml_schema::simple_type (s, e, f, c),
          ::xsd::cxx::tree::list< ::xml_schema::int_, char > (s, e, f, this)
        {
        }

        IntegerList* IntegerList::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class IntegerList (*this, f, c);
        }

        IntegerList::
        ~IntegerList ()
        {
        }

        // DoubleList
        //

        DoubleList::
        DoubleList (const ::xercesc::DOMElement& e,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
        : ::xml_schema::simple_type (e, f, c),
          ::xsd::cxx::tree::list< ::xml_schema::double_, char, ::xsd::cxx::tree::schema_type::double_ > (e, f, this)
        {
        }

        DoubleList::
        DoubleList (const ::xercesc::DOMAttr& a,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
        : ::xml_schema::simple_type (a, f, c),
          ::xsd::cxx::tree::list< ::xml_schema::double_, char, ::xsd::cxx::tree::schema_type::double_ > (a, f, this)
        {
        }

        DoubleList::
        DoubleList (const ::std::string& s,
                    const ::xercesc::DOMElement* e,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
        : ::xml_schema::simple_type (s, e, f, c),
          ::xsd::cxx::tree::list< ::xml_schema::double_, char, ::xsd::cxx::tree::schema_type::double_ > (s, e, f, this)
        {
        }

        DoubleList* DoubleList::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class DoubleList (*this, f, c);
        }

        DoubleList::
        ~DoubleList ()
        {
        }
      }
    }
  }
}

#include <ostream>

#include <xsd/cxx/tree/std-ostream-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::std_ostream_plate< 0, char >
  std_ostream_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        ::std::ostream&
        operator<< (::std::ostream& o, const PropertyData&)
        {
          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, PropertyData >
        _xsd_PropertyData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ObjectData& i)
        {
          if (i.contentVersion ())
          {
            o << ::std::endl << "contentVersion: " << *i.contentVersion ();
          }

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ObjectData >
        _xsd_ObjectData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, enumDecimalFormat::value i)
        {
          return o << enumDecimalFormat::_xsd_enumDecimalFormat_literals_[i];
        }

        ::std::ostream&
        operator<< (::std::ostream& o, const enumDecimalFormat& i)
        {
          return o << static_cast< const ::xml_schema::string& > (i);
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, enumDecimalFormat >
        _xsd_enumDecimalFormat_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const DecimalFormatData& i)
        {
          if (i.DecimalFormat ())
          {
            o << ::std::endl << "DecimalFormat: " << *i.DecimalFormat ();
          }

          if (i.Precision ())
          {
            o << ::std::endl << "Precision: " << *i.Precision ();
          }

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, DecimalFormatData >
        _xsd_DecimalFormatData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const IntegerArray& i)
        {
          o << ::std::endl << "IntegerList: " << i.IntegerList ();
          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, IntegerArray >
        _xsd_IntegerArray_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const DoubleArray& i)
        {
          o << ::std::endl << "DoubleList: " << i.DoubleList ();
          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, DoubleArray >
        _xsd_DoubleArray_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, enumSide::value i)
        {
          return o << enumSide::_xsd_enumSide_literals_[i];
        }

        ::std::ostream&
        operator<< (::std::ostream& o, const enumSide& i)
        {
          return o << static_cast< const ::xml_schema::string& > (i);
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, enumSide >
        _xsd_enumSide_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, enumOpenClosed::value i)
        {
          return o << enumOpenClosed::_xsd_enumOpenClosed_literals_[i];
        }

        ::std::ostream&
        operator<< (::std::ostream& o, const enumOpenClosed& i)
        {
          return o << static_cast< const ::xml_schema::string& > (i);
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, enumOpenClosed >
        _xsd_enumOpenClosed_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, enumOnOff::value i)
        {
          return o << enumOnOff::_xsd_enumOnOff_literals_[i];
        }

        ::std::ostream&
        operator<< (::std::ostream& o, const enumOnOff& i)
        {
          return o << static_cast< const ::xml_schema::string& > (i);
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, enumOnOff >
        _xsd_enumOnOff_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, enumErrorType::value i)
        {
          return o << enumErrorType::_xsd_enumErrorType_literals_[i];
        }

        ::std::ostream&
        operator<< (::std::ostream& o, const enumErrorType& i)
        {
          return o << static_cast< const ::xml_schema::string& > (i);
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, enumErrorType >
        _xsd_enumErrorType_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ErrorData& i)
        {
          o << ::std::endl << "value: " << i.value ();
          o << ::std::endl << "type: " << i.type ();
          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ErrorData >
        _xsd_ErrorData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ErrorList& i)
        {
          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "Value: ";
            om.insert (o, i.Value ());
          }

          o << ::std::endl << "type: " << i.type ();
          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ErrorList >
        _xsd_ErrorList_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const RunningAverageData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::PropertyData& > (i);

          o << ::std::endl << "sum: " << i.sum ();
          o << ::std::endl << "numSamples: " << i.numSamples ();
          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, RunningAverageData >
        _xsd_RunningAverageData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::PropertyData& > (i);

          o << ::std::endl << "value: " << i.value ();
          if (i.unit ())
          {
            o << ::std::endl << "unit: " << *i.unit ();
          }

          o << ::std::endl << "readOnly: " << i.readOnly ();
          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarData >
        _xsd_ScalarData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarFractionData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarFractionData >
        _xsd_ScalarFractionData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const Bound0To1Double& i)
        {
          o << static_cast< const ::xsd::cxx::tree::fundamental_base< ::xml_schema::double_, char, ::xml_schema::simple_type, ::xsd::cxx::tree::schema_type::double_ >& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, Bound0To1Double >
        _xsd_Bound0To1Double_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const Scalar0To1Data& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, Scalar0To1Data >
        _xsd_Scalar0To1Data_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const BoundNeg1To1Double& i)
        {
          o << static_cast< const ::xsd::cxx::tree::fundamental_base< ::xml_schema::double_, char, ::xml_schema::simple_type, ::xsd::cxx::tree::schema_type::double_ >& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, BoundNeg1To1Double >
        _xsd_BoundNeg1To1Double_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarNeg1To1Data& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarNeg1To1Data >
        _xsd_ScalarNeg1To1Data_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarAmountData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarAmountData >
        _xsd_ScalarAmountData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarAmountPerMassData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarAmountPerMassData >
        _xsd_ScalarAmountPerMassData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarAmountPerTimeData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarAmountPerTimeData >
        _xsd_ScalarAmountPerTimeData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarAmountPerVolumeData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarAmountPerVolumeData >
        _xsd_ScalarAmountPerVolumeData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarAreaData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarAreaData >
        _xsd_ScalarAreaData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarAreaPerTimePressureData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarAreaPerTimePressureData >
        _xsd_ScalarAreaPerTimePressureData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarElectricCapacitanceData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarElectricCapacitanceData >
        _xsd_ScalarElectricCapacitanceData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarElectricChargeData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarElectricChargeData >
        _xsd_ScalarElectricChargeData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarElectricCurrentData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarElectricCurrentData >
        _xsd_ScalarElectricCurrentData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarElectricPotentialData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarElectricPotentialData >
        _xsd_ScalarElectricPotentialData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarElectricInductanceData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarElectricInductanceData >
        _xsd_ScalarElectricInductanceData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarElectricResistanceData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarElectricResistanceData >
        _xsd_ScalarElectricResistanceData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarEnergyData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarEnergyData >
        _xsd_ScalarEnergyData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarEnergyPerAmountData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarEnergyPerAmountData >
        _xsd_ScalarEnergyPerAmountData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarEnergyPerMassData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarEnergyPerMassData >
        _xsd_ScalarEnergyPerMassData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarFlowResistanceData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarFlowResistanceData >
        _xsd_ScalarFlowResistanceData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarFlowComplianceData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarFlowComplianceData >
        _xsd_ScalarFlowComplianceData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarFlowElastanceData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarFlowElastanceData >
        _xsd_ScalarFlowElastanceData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarFlowInertanceData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarFlowInertanceData >
        _xsd_ScalarFlowInertanceData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarForceData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarForceData >
        _xsd_ScalarForceData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarFrequencyData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarFrequencyData >
        _xsd_ScalarFrequencyData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarHeatCapacitanceData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarHeatCapacitanceData >
        _xsd_ScalarHeatCapacitanceData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarHeatCapacitancePerAmountData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarHeatCapacitancePerAmountData >
        _xsd_ScalarHeatCapacitancePerAmountData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarHeatCapacitancePerMassData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarHeatCapacitancePerMassData >
        _xsd_ScalarHeatCapacitancePerMassData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarHeatConductanceData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarHeatConductanceData >
        _xsd_ScalarHeatConductanceData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarHeatConductancePerAreaData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarHeatConductancePerAreaData >
        _xsd_ScalarHeatConductancePerAreaData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarHeatInductanceData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarHeatInductanceData >
        _xsd_ScalarHeatInductanceData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarHeatResistanceData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarHeatResistanceData >
        _xsd_ScalarHeatResistanceData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarHeatResistanceAreaData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarHeatResistanceAreaData >
        _xsd_ScalarHeatResistanceAreaData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarInversePressureData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarInversePressureData >
        _xsd_ScalarInversePressureData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarInverseVolumeData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarInverseVolumeData >
        _xsd_ScalarInverseVolumeData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarLengthData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarLengthData >
        _xsd_ScalarLengthData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarLengthPerTimeData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarLengthPerTimeData >
        _xsd_ScalarLengthPerTimeData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarLengthPerTimePressureData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarLengthPerTimePressureData >
        _xsd_ScalarLengthPerTimePressureData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarMassData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarMassData >
        _xsd_ScalarMassData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarMassPerAmountData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarMassPerAmountData >
        _xsd_ScalarMassPerAmountData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarMassPerAreaTimeData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarMassPerAreaTimeData >
        _xsd_ScalarMassPerAreaTimeData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarMassPerMassData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarMassPerMassData >
        _xsd_ScalarMassPerMassData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarMassPerTimeData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarMassPerTimeData >
        _xsd_ScalarMassPerTimeData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarMassPerVolumeData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarMassPerVolumeData >
        _xsd_ScalarMassPerVolumeData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarTimeMassPerVolumeData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarTimeMassPerVolumeData >
        _xsd_ScalarTimeMassPerVolumeData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarOsmolalityData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarOsmolalityData >
        _xsd_ScalarOsmolalityData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarOsmolarityData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarOsmolarityData >
        _xsd_ScalarOsmolarityData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarPowerData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarPowerData >
        _xsd_ScalarPowerData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarPowerPerAreaTemperatureToTheFourthData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarPowerPerAreaTemperatureToTheFourthData >
        _xsd_ScalarPowerPerAreaTemperatureToTheFourthData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarPressureData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarPressureData >
        _xsd_ScalarPressureData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarPressurePerVolumeData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarPressurePerVolumeData >
        _xsd_ScalarPressurePerVolumeData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarPressureTimePerVolumeAreaData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarPressureTimePerVolumeAreaData >
        _xsd_ScalarPressureTimePerVolumeAreaData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarPressureTimePerAreaData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarPressureTimePerAreaData >
        _xsd_ScalarPressureTimePerAreaData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarTimeData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarTimeData >
        _xsd_ScalarTimeData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarTemperatureData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarTemperatureData >
        _xsd_ScalarTemperatureData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarVolumeData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarVolumeData >
        _xsd_ScalarVolumeData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarVolumePerTimeData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarVolumePerTimeData >
        _xsd_ScalarVolumePerTimeData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarVolumePerPressureData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarVolumePerPressureData >
        _xsd_ScalarVolumePerPressureData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarVolumePerTimeAreaData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarVolumePerTimeAreaData >
        _xsd_ScalarVolumePerTimeAreaData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarVolumePerTimeMassData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarVolumePerTimeMassData >
        _xsd_ScalarVolumePerTimeMassData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarVolumePerTimePressureData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarVolumePerTimePressureData >
        _xsd_ScalarVolumePerTimePressureData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ScalarVolumePerTimePressureAreaData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ScalarVolumePerTimePressureAreaData >
        _xsd_ScalarVolumePerTimePressureAreaData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ArrayData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::PropertyData& > (i);

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "Value: ";
            om.insert (o, i.Value ());
          }

          if (i.unit ())
          {
            o << ::std::endl << "unit: " << *i.unit ();
          }

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ArrayData >
        _xsd_ArrayData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const ArrayTimeData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ArrayData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, ArrayTimeData >
        _xsd_ArrayTimeData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const FunctionData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::PropertyData& > (i);

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "Dependent: ";
            om.insert (o, i.Dependent ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "Independent: ";
            om.insert (o, i.Independent ());
          }

          if (i.DependentUnit ())
          {
            o << ::std::endl << "DependentUnit: " << *i.DependentUnit ();
          }

          if (i.IndependentUnit ())
          {
            o << ::std::endl << "IndependentUnit: " << *i.IndependentUnit ();
          }

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, FunctionData >
        _xsd_FunctionData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const FunctionVolumeVsTimeData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::FunctionData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, FunctionVolumeVsTimeData >
        _xsd_FunctionVolumeVsTimeData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const FunctionElectricPotentialVsTimeData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::FunctionData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, FunctionElectricPotentialVsTimeData >
        _xsd_FunctionElectricPotentialVsTimeData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const HistogramData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::FunctionData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, HistogramData >
        _xsd_HistogramData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const HistogramFractionVsLengthData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::HistogramData& > (i);

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, HistogramFractionVsLengthData >
        _xsd_HistogramFractionVsLengthData_std_ostream_init;

        ::std::ostream&
        operator<< (::std::ostream& o, const IntegerList& i)
        {
          return o << static_cast< const ::xsd::cxx::tree::list< ::xml_schema::int_, char >& > (i);
        }

        ::std::ostream&
        operator<< (::std::ostream& o, const DoubleList& i)
        {
          return o << static_cast< const ::xsd::cxx::tree::list< ::xml_schema::double_, char, ::xsd::cxx::tree::schema_type::double_ >& > (i);
        }
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
      }
    }
  }
}

#include <ostream>
#include <xsd/cxx/tree/error-handler.hxx>
#include <xsd/cxx/xml/dom/serialization-source.hxx>

#include <xsd/cxx/tree/type-serializer-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_serializer_plate< 0, char >
  type_serializer_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        void
        operator<< (::xercesc::DOMElement& e, const PropertyData& i)
        {
          e << static_cast< const ::xml_schema::type& > (i);
        }

        void
        operator<< (::xercesc::DOMAttr&, const PropertyData&)
        {
        }

        void
        operator<< (::xml_schema::list_stream&,
                    const PropertyData&)
        {
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, PropertyData >
        _xsd_PropertyData_type_serializer_init (
          "PropertyData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ObjectData& i)
        {
          e << static_cast< const ::xml_schema::type& > (i);

          // contentVersion
          //
          if (i.contentVersion ())
          {
            ::xercesc::DOMAttr& a (
              ::xsd::cxx::xml::dom::create_attribute (
                "contentVersion",
                e));

            a << *i.contentVersion ();
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ObjectData >
        _xsd_ObjectData_type_serializer_init (
          "ObjectData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const enumDecimalFormat& i)
        {
          e << static_cast< const ::xml_schema::string& > (i);
        }

        void
        operator<< (::xercesc::DOMAttr& a, const enumDecimalFormat& i)
        {
          a << static_cast< const ::xml_schema::string& > (i);
        }

        void
        operator<< (::xml_schema::list_stream& l,
                    const enumDecimalFormat& i)
        {
          l << static_cast< const ::xml_schema::string& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, enumDecimalFormat >
        _xsd_enumDecimalFormat_type_serializer_init (
          "enumDecimalFormat",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const DecimalFormatData& i)
        {
          e << static_cast< const ::xml_schema::type& > (i);

          // DecimalFormat
          //
          if (i.DecimalFormat ())
          {
            ::xercesc::DOMAttr& a (
              ::xsd::cxx::xml::dom::create_attribute (
                "DecimalFormat",
                e));

            a << *i.DecimalFormat ();
          }

          // Precision
          //
          if (i.Precision ())
          {
            ::xercesc::DOMAttr& a (
              ::xsd::cxx::xml::dom::create_attribute (
                "Precision",
                e));

            a << *i.Precision ();
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, DecimalFormatData >
        _xsd_DecimalFormatData_type_serializer_init (
          "DecimalFormatData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const IntegerArray& i)
        {
          e << static_cast< const ::xml_schema::type& > (i);

          // IntegerList
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "IntegerList",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << i.IntegerList ();
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, IntegerArray >
        _xsd_IntegerArray_type_serializer_init (
          "IntegerArray",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const DoubleArray& i)
        {
          e << static_cast< const ::xml_schema::type& > (i);

          // DoubleList
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "DoubleList",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << i.DoubleList ();
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, DoubleArray >
        _xsd_DoubleArray_type_serializer_init (
          "DoubleArray",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const enumSide& i)
        {
          e << static_cast< const ::xml_schema::string& > (i);
        }

        void
        operator<< (::xercesc::DOMAttr& a, const enumSide& i)
        {
          a << static_cast< const ::xml_schema::string& > (i);
        }

        void
        operator<< (::xml_schema::list_stream& l,
                    const enumSide& i)
        {
          l << static_cast< const ::xml_schema::string& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, enumSide >
        _xsd_enumSide_type_serializer_init (
          "enumSide",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const enumOpenClosed& i)
        {
          e << static_cast< const ::xml_schema::string& > (i);
        }

        void
        operator<< (::xercesc::DOMAttr& a, const enumOpenClosed& i)
        {
          a << static_cast< const ::xml_schema::string& > (i);
        }

        void
        operator<< (::xml_schema::list_stream& l,
                    const enumOpenClosed& i)
        {
          l << static_cast< const ::xml_schema::string& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, enumOpenClosed >
        _xsd_enumOpenClosed_type_serializer_init (
          "enumOpenClosed",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const enumOnOff& i)
        {
          e << static_cast< const ::xml_schema::string& > (i);
        }

        void
        operator<< (::xercesc::DOMAttr& a, const enumOnOff& i)
        {
          a << static_cast< const ::xml_schema::string& > (i);
        }

        void
        operator<< (::xml_schema::list_stream& l,
                    const enumOnOff& i)
        {
          l << static_cast< const ::xml_schema::string& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, enumOnOff >
        _xsd_enumOnOff_type_serializer_init (
          "enumOnOff",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const enumErrorType& i)
        {
          e << static_cast< const ::xml_schema::string& > (i);
        }

        void
        operator<< (::xercesc::DOMAttr& a, const enumErrorType& i)
        {
          a << static_cast< const ::xml_schema::string& > (i);
        }

        void
        operator<< (::xml_schema::list_stream& l,
                    const enumErrorType& i)
        {
          l << static_cast< const ::xml_schema::string& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, enumErrorType >
        _xsd_enumErrorType_type_serializer_init (
          "enumErrorType",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ErrorData& i)
        {
          e << static_cast< const ::xml_schema::type& > (i);

          // value
          //
          {
            ::xercesc::DOMAttr& a (
              ::xsd::cxx::xml::dom::create_attribute (
                "value",
                e));

            a << ::xml_schema::as_double(i.value ());
          }

          // type
          //
          {
            ::xercesc::DOMAttr& a (
              ::xsd::cxx::xml::dom::create_attribute (
                "type",
                e));

            a << i.type ();
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ErrorData >
        _xsd_ErrorData_type_serializer_init (
          "ErrorData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ErrorList& i)
        {
          e << static_cast< const ::xml_schema::type& > (i);

          // Value
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const ErrorList::Value_type& x (i.Value ());
            if (typeid (ErrorList::Value_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "Value",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "Value",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // type
          //
          {
            ::xercesc::DOMAttr& a (
              ::xsd::cxx::xml::dom::create_attribute (
                "type",
                e));

            a << i.type ();
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ErrorList >
        _xsd_ErrorList_type_serializer_init (
          "ErrorList",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const RunningAverageData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::PropertyData& > (i);

          // sum
          //
          {
            ::xercesc::DOMAttr& a (
              ::xsd::cxx::xml::dom::create_attribute (
                "sum",
                e));

            a << ::xml_schema::as_double(i.sum ());
          }

          // numSamples
          //
          {
            ::xercesc::DOMAttr& a (
              ::xsd::cxx::xml::dom::create_attribute (
                "numSamples",
                e));

            a << i.numSamples ();
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, RunningAverageData >
        _xsd_RunningAverageData_type_serializer_init (
          "RunningAverageData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::PropertyData& > (i);

          // value
          //
          {
            ::xercesc::DOMAttr& a (
              ::xsd::cxx::xml::dom::create_attribute (
                "value",
                e));

            a << ::xml_schema::as_double(i.value ());
          }

          // unit
          //
          if (i.unit ())
          {
            ::xercesc::DOMAttr& a (
              ::xsd::cxx::xml::dom::create_attribute (
                "unit",
                e));

            a << *i.unit ();
          }

          // readOnly
          //
          {
            ::xercesc::DOMAttr& a (
              ::xsd::cxx::xml::dom::create_attribute (
                "readOnly",
                e));

            a << i.readOnly ();
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarData >
        _xsd_ScalarData_type_serializer_init (
          "ScalarData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarFractionData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarFractionData >
        _xsd_ScalarFractionData_type_serializer_init (
          "ScalarFractionData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const Bound0To1Double& i)
        {
          e << static_cast< const ::xsd::cxx::tree::fundamental_base< ::xml_schema::double_, char, ::xml_schema::simple_type, ::xsd::cxx::tree::schema_type::double_ >& > (i);
        }

        void
        operator<< (::xercesc::DOMAttr& a, const Bound0To1Double& i)
        {
          a << static_cast< const ::xsd::cxx::tree::fundamental_base< ::xml_schema::double_, char, ::xml_schema::simple_type, ::xsd::cxx::tree::schema_type::double_ >& > (i);
        }

        void
        operator<< (::xml_schema::list_stream& l,
                    const Bound0To1Double& i)
        {
          l << static_cast< const ::xsd::cxx::tree::fundamental_base< ::xml_schema::double_, char, ::xml_schema::simple_type, ::xsd::cxx::tree::schema_type::double_ >& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, Bound0To1Double >
        _xsd_Bound0To1Double_type_serializer_init (
          "Bound0To1Double",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const Scalar0To1Data& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, Scalar0To1Data >
        _xsd_Scalar0To1Data_type_serializer_init (
          "Scalar0To1Data",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const BoundNeg1To1Double& i)
        {
          e << static_cast< const ::xsd::cxx::tree::fundamental_base< ::xml_schema::double_, char, ::xml_schema::simple_type, ::xsd::cxx::tree::schema_type::double_ >& > (i);
        }

        void
        operator<< (::xercesc::DOMAttr& a, const BoundNeg1To1Double& i)
        {
          a << static_cast< const ::xsd::cxx::tree::fundamental_base< ::xml_schema::double_, char, ::xml_schema::simple_type, ::xsd::cxx::tree::schema_type::double_ >& > (i);
        }

        void
        operator<< (::xml_schema::list_stream& l,
                    const BoundNeg1To1Double& i)
        {
          l << static_cast< const ::xsd::cxx::tree::fundamental_base< ::xml_schema::double_, char, ::xml_schema::simple_type, ::xsd::cxx::tree::schema_type::double_ >& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, BoundNeg1To1Double >
        _xsd_BoundNeg1To1Double_type_serializer_init (
          "BoundNeg1To1Double",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarNeg1To1Data& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarNeg1To1Data >
        _xsd_ScalarNeg1To1Data_type_serializer_init (
          "ScalarNeg1To1Data",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarAmountData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarAmountData >
        _xsd_ScalarAmountData_type_serializer_init (
          "ScalarAmountData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarAmountPerMassData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarAmountPerMassData >
        _xsd_ScalarAmountPerMassData_type_serializer_init (
          "ScalarAmountPerMassData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarAmountPerTimeData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarAmountPerTimeData >
        _xsd_ScalarAmountPerTimeData_type_serializer_init (
          "ScalarAmountPerTimeData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarAmountPerVolumeData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarAmountPerVolumeData >
        _xsd_ScalarAmountPerVolumeData_type_serializer_init (
          "ScalarAmountPerVolumeData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarAreaData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarAreaData >
        _xsd_ScalarAreaData_type_serializer_init (
          "ScalarAreaData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarAreaPerTimePressureData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarAreaPerTimePressureData >
        _xsd_ScalarAreaPerTimePressureData_type_serializer_init (
          "ScalarAreaPerTimePressureData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarElectricCapacitanceData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarElectricCapacitanceData >
        _xsd_ScalarElectricCapacitanceData_type_serializer_init (
          "ScalarElectricCapacitanceData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarElectricChargeData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarElectricChargeData >
        _xsd_ScalarElectricChargeData_type_serializer_init (
          "ScalarElectricChargeData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarElectricCurrentData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarElectricCurrentData >
        _xsd_ScalarElectricCurrentData_type_serializer_init (
          "ScalarElectricCurrentData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarElectricPotentialData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarElectricPotentialData >
        _xsd_ScalarElectricPotentialData_type_serializer_init (
          "ScalarElectricPotentialData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarElectricInductanceData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarElectricInductanceData >
        _xsd_ScalarElectricInductanceData_type_serializer_init (
          "ScalarElectricInductanceData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarElectricResistanceData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarElectricResistanceData >
        _xsd_ScalarElectricResistanceData_type_serializer_init (
          "ScalarElectricResistanceData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarEnergyData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarEnergyData >
        _xsd_ScalarEnergyData_type_serializer_init (
          "ScalarEnergyData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarEnergyPerAmountData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarEnergyPerAmountData >
        _xsd_ScalarEnergyPerAmountData_type_serializer_init (
          "ScalarEnergyPerAmountData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarEnergyPerMassData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarEnergyPerMassData >
        _xsd_ScalarEnergyPerMassData_type_serializer_init (
          "ScalarEnergyPerMassData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarFlowResistanceData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarFlowResistanceData >
        _xsd_ScalarFlowResistanceData_type_serializer_init (
          "ScalarFlowResistanceData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarFlowComplianceData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarFlowComplianceData >
        _xsd_ScalarFlowComplianceData_type_serializer_init (
          "ScalarFlowComplianceData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarFlowElastanceData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarFlowElastanceData >
        _xsd_ScalarFlowElastanceData_type_serializer_init (
          "ScalarFlowElastanceData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarFlowInertanceData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarFlowInertanceData >
        _xsd_ScalarFlowInertanceData_type_serializer_init (
          "ScalarFlowInertanceData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarForceData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarForceData >
        _xsd_ScalarForceData_type_serializer_init (
          "ScalarForceData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarFrequencyData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarFrequencyData >
        _xsd_ScalarFrequencyData_type_serializer_init (
          "ScalarFrequencyData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarHeatCapacitanceData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarHeatCapacitanceData >
        _xsd_ScalarHeatCapacitanceData_type_serializer_init (
          "ScalarHeatCapacitanceData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarHeatCapacitancePerAmountData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarHeatCapacitancePerAmountData >
        _xsd_ScalarHeatCapacitancePerAmountData_type_serializer_init (
          "ScalarHeatCapacitancePerAmountData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarHeatCapacitancePerMassData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarHeatCapacitancePerMassData >
        _xsd_ScalarHeatCapacitancePerMassData_type_serializer_init (
          "ScalarHeatCapacitancePerMassData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarHeatConductanceData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarHeatConductanceData >
        _xsd_ScalarHeatConductanceData_type_serializer_init (
          "ScalarHeatConductanceData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarHeatConductancePerAreaData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarHeatConductancePerAreaData >
        _xsd_ScalarHeatConductancePerAreaData_type_serializer_init (
          "ScalarHeatConductancePerAreaData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarHeatInductanceData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarHeatInductanceData >
        _xsd_ScalarHeatInductanceData_type_serializer_init (
          "ScalarHeatInductanceData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarHeatResistanceData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarHeatResistanceData >
        _xsd_ScalarHeatResistanceData_type_serializer_init (
          "ScalarHeatResistanceData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarHeatResistanceAreaData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarHeatResistanceAreaData >
        _xsd_ScalarHeatResistanceAreaData_type_serializer_init (
          "ScalarHeatResistanceAreaData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarInversePressureData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarInversePressureData >
        _xsd_ScalarInversePressureData_type_serializer_init (
          "ScalarInversePressureData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarInverseVolumeData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarInverseVolumeData >
        _xsd_ScalarInverseVolumeData_type_serializer_init (
          "ScalarInverseVolumeData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarLengthData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarLengthData >
        _xsd_ScalarLengthData_type_serializer_init (
          "ScalarLengthData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarLengthPerTimeData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarLengthPerTimeData >
        _xsd_ScalarLengthPerTimeData_type_serializer_init (
          "ScalarLengthPerTimeData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarLengthPerTimePressureData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarLengthPerTimePressureData >
        _xsd_ScalarLengthPerTimePressureData_type_serializer_init (
          "ScalarLengthPerTimePressureData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarMassData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarMassData >
        _xsd_ScalarMassData_type_serializer_init (
          "ScalarMassData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarMassPerAmountData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarMassPerAmountData >
        _xsd_ScalarMassPerAmountData_type_serializer_init (
          "ScalarMassPerAmountData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarMassPerAreaTimeData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarMassPerAreaTimeData >
        _xsd_ScalarMassPerAreaTimeData_type_serializer_init (
          "ScalarMassPerAreaTimeData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarMassPerMassData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarMassPerMassData >
        _xsd_ScalarMassPerMassData_type_serializer_init (
          "ScalarMassPerMassData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarMassPerTimeData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarMassPerTimeData >
        _xsd_ScalarMassPerTimeData_type_serializer_init (
          "ScalarMassPerTimeData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarMassPerVolumeData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarMassPerVolumeData >
        _xsd_ScalarMassPerVolumeData_type_serializer_init (
          "ScalarMassPerVolumeData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarTimeMassPerVolumeData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarTimeMassPerVolumeData >
        _xsd_ScalarTimeMassPerVolumeData_type_serializer_init (
          "ScalarTimeMassPerVolumeData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarOsmolalityData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarOsmolalityData >
        _xsd_ScalarOsmolalityData_type_serializer_init (
          "ScalarOsmolalityData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarOsmolarityData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarOsmolarityData >
        _xsd_ScalarOsmolarityData_type_serializer_init (
          "ScalarOsmolarityData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarPowerData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarPowerData >
        _xsd_ScalarPowerData_type_serializer_init (
          "ScalarPowerData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarPowerPerAreaTemperatureToTheFourthData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarPowerPerAreaTemperatureToTheFourthData >
        _xsd_ScalarPowerPerAreaTemperatureToTheFourthData_type_serializer_init (
          "ScalarPowerPerAreaTemperatureToTheFourthData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarPressureData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarPressureData >
        _xsd_ScalarPressureData_type_serializer_init (
          "ScalarPressureData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarPressurePerVolumeData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarPressurePerVolumeData >
        _xsd_ScalarPressurePerVolumeData_type_serializer_init (
          "ScalarPressurePerVolumeData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarPressureTimePerVolumeAreaData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarPressureTimePerVolumeAreaData >
        _xsd_ScalarPressureTimePerVolumeAreaData_type_serializer_init (
          "ScalarPressureTimePerVolumeAreaData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarPressureTimePerAreaData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarPressureTimePerAreaData >
        _xsd_ScalarPressureTimePerAreaData_type_serializer_init (
          "ScalarPressureTimePerAreaData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarTimeData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarTimeData >
        _xsd_ScalarTimeData_type_serializer_init (
          "ScalarTimeData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarTemperatureData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarTemperatureData >
        _xsd_ScalarTemperatureData_type_serializer_init (
          "ScalarTemperatureData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarVolumeData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarVolumeData >
        _xsd_ScalarVolumeData_type_serializer_init (
          "ScalarVolumeData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarVolumePerTimeData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarVolumePerTimeData >
        _xsd_ScalarVolumePerTimeData_type_serializer_init (
          "ScalarVolumePerTimeData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarVolumePerPressureData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarVolumePerPressureData >
        _xsd_ScalarVolumePerPressureData_type_serializer_init (
          "ScalarVolumePerPressureData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarVolumePerTimeAreaData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarVolumePerTimeAreaData >
        _xsd_ScalarVolumePerTimeAreaData_type_serializer_init (
          "ScalarVolumePerTimeAreaData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarVolumePerTimeMassData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarVolumePerTimeMassData >
        _xsd_ScalarVolumePerTimeMassData_type_serializer_init (
          "ScalarVolumePerTimeMassData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarVolumePerTimePressureData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarVolumePerTimePressureData >
        _xsd_ScalarVolumePerTimePressureData_type_serializer_init (
          "ScalarVolumePerTimePressureData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ScalarVolumePerTimePressureAreaData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ScalarData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ScalarVolumePerTimePressureAreaData >
        _xsd_ScalarVolumePerTimePressureAreaData_type_serializer_init (
          "ScalarVolumePerTimePressureAreaData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ArrayData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::PropertyData& > (i);

          // Value
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const ArrayData::Value_type& x (i.Value ());
            if (typeid (ArrayData::Value_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "Value",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "Value",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // unit
          //
          if (i.unit ())
          {
            ::xercesc::DOMAttr& a (
              ::xsd::cxx::xml::dom::create_attribute (
                "unit",
                e));

            a << *i.unit ();
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ArrayData >
        _xsd_ArrayData_type_serializer_init (
          "ArrayData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const ArrayTimeData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ArrayData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, ArrayTimeData >
        _xsd_ArrayTimeData_type_serializer_init (
          "ArrayTimeData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const FunctionData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::PropertyData& > (i);

          // Dependent
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const FunctionData::Dependent_type& x (i.Dependent ());
            if (typeid (FunctionData::Dependent_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "Dependent",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "Dependent",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // Independent
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const FunctionData::Independent_type& x (i.Independent ());
            if (typeid (FunctionData::Independent_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "Independent",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "Independent",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // DependentUnit
          //
          if (i.DependentUnit ())
          {
            ::xercesc::DOMAttr& a (
              ::xsd::cxx::xml::dom::create_attribute (
                "DependentUnit",
                e));

            a << *i.DependentUnit ();
          }

          // IndependentUnit
          //
          if (i.IndependentUnit ())
          {
            ::xercesc::DOMAttr& a (
              ::xsd::cxx::xml::dom::create_attribute (
                "IndependentUnit",
                e));

            a << *i.IndependentUnit ();
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, FunctionData >
        _xsd_FunctionData_type_serializer_init (
          "FunctionData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const FunctionVolumeVsTimeData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::FunctionData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, FunctionVolumeVsTimeData >
        _xsd_FunctionVolumeVsTimeData_type_serializer_init (
          "FunctionVolumeVsTimeData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const FunctionElectricPotentialVsTimeData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::FunctionData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, FunctionElectricPotentialVsTimeData >
        _xsd_FunctionElectricPotentialVsTimeData_type_serializer_init (
          "FunctionElectricPotentialVsTimeData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const HistogramData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::FunctionData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, HistogramData >
        _xsd_HistogramData_type_serializer_init (
          "HistogramData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const HistogramFractionVsLengthData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::HistogramData& > (i);
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, HistogramFractionVsLengthData >
        _xsd_HistogramFractionVsLengthData_type_serializer_init (
          "HistogramFractionVsLengthData",
          "uri:/mil/tatrc/physiology/datamodel");


        void
        operator<< (::xercesc::DOMElement& e, const IntegerList& i)
        {
          e << static_cast< const ::xsd::cxx::tree::list< ::xml_schema::int_, char >& > (i);
        }

        void
        operator<< (::xercesc::DOMAttr& a, const IntegerList& i)
        {
          a << static_cast< const ::xsd::cxx::tree::list< ::xml_schema::int_, char >& > (i);
        }

        void
        operator<< (::xml_schema::list_stream& l,
                    const IntegerList& i)
        {
          l << static_cast< const ::xsd::cxx::tree::list< ::xml_schema::int_, char >& > (i);
        }

        void
        operator<< (::xercesc::DOMElement& e, const DoubleList& i)
        {
          e << static_cast< const ::xsd::cxx::tree::list< ::xml_schema::double_, char, ::xsd::cxx::tree::schema_type::double_ >& > (i);
        }

        void
        operator<< (::xercesc::DOMAttr& a, const DoubleList& i)
        {
          a << static_cast< const ::xsd::cxx::tree::list< ::xml_schema::double_, char, ::xsd::cxx::tree::schema_type::double_ >& > (i);
        }

        void
        operator<< (::xml_schema::list_stream& l,
                    const DoubleList& i)
        {
          l << static_cast< const ::xsd::cxx::tree::list< ::xml_schema::double_, char, ::xsd::cxx::tree::schema_type::double_ >& > (i);
        }
      }
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

